{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/node-fetch-native@1.0.2/node_modules/node-fetch-native/dist/chunks/multipart-parser.mjs", "../../../../node_modules/.pnpm/node-fetch-native@1.0.2/node_modules/node-fetch-native/dist/shared/node-fetch-native.2b047dc1.mjs", "<stdin>", "../../src/entry.server.tsx", "../../src/root.tsx", "../../src/components/layout/GlobalProgress.tsx", "../../src/services/auth.server.ts", "../../src/services/session.server.ts", "../../../../node_modules/.pnpm/ofetch@1.0.1/node_modules/ofetch/dist/node.mjs", "../../../../node_modules/.pnpm/node-fetch-native@1.0.2/node_modules/node-fetch-native/dist/index.mjs", "../../../../node_modules/.pnpm/ofetch@1.0.1/node_modules/ofetch/dist/shared/ofetch.502a4799.mjs", "../../../../packages/client/lib/utils.ts", "../../../../packages/client/lib/request-client.ts", "../../../../packages/client/lib/base-resource.ts", "../../../../packages/client/lib/resources/admin/users.ts", "../../../../packages/client/lib/resources/admin.ts", "../../../../packages/client/lib/resources/auth.ts", "../../../../packages/client/lib/resources/shared.ts", "../../../../packages/client/lib/client.ts", "../../../../packages/client/lib/create-client.ts", "../../src/services/client.ts", "../../src/schemas/auth.ts", "../../src/utils/zod.ts", "../../src/routes/_index.tsx", "../../src/components/layout/PageTransition.tsx", "../../src/components/layout/Sidebar.tsx", "../../src/hooks/use-auth.ts", "../../src/stores/layout.ts", "../../src/components/molecules/ThemeSelector.tsx", "../../src/components/layout/TopNav.tsx", "../../src/hooks/use-user.ts", "../../src/components/layout/Layout.tsx", "../../src/routes/_domains/index.tsx", "../../src/routes/_domains/s.$studentId/index.tsx", "../../src/utils/server.ts", "../../src/hooks/use-redirect.ts", "../../src/routes/auth/index.tsx", "../../src/routes/settings/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import 'node:fs';\nimport 'node:path';\nimport { a as FormData, F as File } from '../shared/node-fetch-native.2b047dc1.mjs';\nimport 'node:http';\nimport 'node:https';\nimport 'node:zlib';\nimport 'node:stream';\nimport 'node:buffer';\nimport 'node:util';\nimport 'node:url';\nimport 'node:net';\n\nlet s = 0;\nconst S = {\n\tSTART_BOUNDARY: s++,\n\tHEADER_FIELD_START: s++,\n\tHEADER_FIELD: s++,\n\tHEADER_VALUE_START: s++,\n\tHEADER_VALUE: s++,\n\tHEADER_VALUE_ALMOST_DONE: s++,\n\tHEADERS_ALMOST_DONE: s++,\n\tPART_DATA_START: s++,\n\tPART_DATA: s++,\n\tEND: s++\n};\n\nlet f = 1;\nconst F = {\n\tPART_BOUNDARY: f,\n\tLAST_BOUNDARY: f *= 2\n};\n\nconst LF = 10;\nconst CR = 13;\nconst SPACE = 32;\nconst HYPHEN = 45;\nconst COLON = 58;\nconst A = 97;\nconst Z = 122;\n\nconst lower = c => c | 0x20;\n\nconst noop = () => {};\n\nclass MultipartParser {\n\t/**\n\t * @param {string} boundary\n\t */\n\tconstructor(boundary) {\n\t\tthis.index = 0;\n\t\tthis.flags = 0;\n\n\t\tthis.onHeaderEnd = noop;\n\t\tthis.onHeaderField = noop;\n\t\tthis.onHeadersEnd = noop;\n\t\tthis.onHeaderValue = noop;\n\t\tthis.onPartBegin = noop;\n\t\tthis.onPartData = noop;\n\t\tthis.onPartEnd = noop;\n\n\t\tthis.boundaryChars = {};\n\n\t\tboundary = '\\r\\n--' + boundary;\n\t\tconst ui8a = new Uint8Array(boundary.length);\n\t\tfor (let i = 0; i < boundary.length; i++) {\n\t\t\tui8a[i] = boundary.charCodeAt(i);\n\t\t\tthis.boundaryChars[ui8a[i]] = true;\n\t\t}\n\n\t\tthis.boundary = ui8a;\n\t\tthis.lookbehind = new Uint8Array(this.boundary.length + 8);\n\t\tthis.state = S.START_BOUNDARY;\n\t}\n\n\t/**\n\t * @param {Uint8Array} data\n\t */\n\twrite(data) {\n\t\tlet i = 0;\n\t\tconst length_ = data.length;\n\t\tlet previousIndex = this.index;\n\t\tlet {lookbehind, boundary, boundaryChars, index, state, flags} = this;\n\t\tconst boundaryLength = this.boundary.length;\n\t\tconst boundaryEnd = boundaryLength - 1;\n\t\tconst bufferLength = data.length;\n\t\tlet c;\n\t\tlet cl;\n\n\t\tconst mark = name => {\n\t\t\tthis[name + 'Mark'] = i;\n\t\t};\n\n\t\tconst clear = name => {\n\t\t\tdelete this[name + 'Mark'];\n\t\t};\n\n\t\tconst callback = (callbackSymbol, start, end, ui8a) => {\n\t\t\tif (start === undefined || start !== end) {\n\t\t\t\tthis[callbackSymbol](ui8a && ui8a.subarray(start, end));\n\t\t\t}\n\t\t};\n\n\t\tconst dataCallback = (name, clear) => {\n\t\t\tconst markSymbol = name + 'Mark';\n\t\t\tif (!(markSymbol in this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (clear) {\n\t\t\t\tcallback(name, this[markSymbol], i, data);\n\t\t\t\tdelete this[markSymbol];\n\t\t\t} else {\n\t\t\t\tcallback(name, this[markSymbol], data.length, data);\n\t\t\t\tthis[markSymbol] = 0;\n\t\t\t}\n\t\t};\n\n\t\tfor (i = 0; i < length_; i++) {\n\t\t\tc = data[i];\n\n\t\t\tswitch (state) {\n\t\t\t\tcase S.START_BOUNDARY:\n\t\t\t\t\tif (index === boundary.length - 2) {\n\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else if (c !== CR) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (index - 1 === boundary.length - 2) {\n\t\t\t\t\t\tif (flags & F.LAST_BOUNDARY && c === HYPHEN) {\n\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t} else if (!(flags & F.LAST_BOUNDARY) && c === LF) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c !== boundary[index + 2]) {\n\t\t\t\t\t\tindex = -2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === boundary[index + 2]) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_FIELD_START:\n\t\t\t\t\tstate = S.HEADER_FIELD;\n\t\t\t\t\tmark('onHeaderField');\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_FIELD:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tclear('onHeaderField');\n\t\t\t\t\t\tstate = S.HEADERS_ALMOST_DONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === COLON) {\n\t\t\t\t\t\tif (index === 1) {\n\t\t\t\t\t\t\t// empty header field\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataCallback('onHeaderField', true);\n\t\t\t\t\t\tstate = S.HEADER_VALUE_START;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcl = lower(c);\n\t\t\t\t\tif (cl < A || cl > Z) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_START:\n\t\t\t\t\tif (c === SPACE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tmark('onHeaderValue');\n\t\t\t\t\tstate = S.HEADER_VALUE;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_VALUE:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tdataCallback('onHeaderValue', true);\n\t\t\t\t\t\tcallback('onHeaderEnd');\n\t\t\t\t\t\tstate = S.HEADER_VALUE_ALMOST_DONE;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADERS_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback('onHeadersEnd');\n\t\t\t\t\tstate = S.PART_DATA_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.PART_DATA_START:\n\t\t\t\t\tstate = S.PART_DATA;\n\t\t\t\t\tmark('onPartData');\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.PART_DATA:\n\t\t\t\t\tpreviousIndex = index;\n\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t// boyer-moore derrived algorithm to safely skip non-boundary data\n\t\t\t\t\t\ti += boundaryEnd;\n\t\t\t\t\t\twhile (i < bufferLength && !(data[i] in boundaryChars)) {\n\t\t\t\t\t\t\ti += boundaryLength;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti -= boundaryEnd;\n\t\t\t\t\t\tc = data[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index < boundary.length) {\n\t\t\t\t\t\tif (boundary[index] === c) {\n\t\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\t\tdataCallback('onPartData', true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index === boundary.length) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\t\t// CR = part boundary\n\t\t\t\t\t\t\tflags |= F.PART_BOUNDARY;\n\t\t\t\t\t\t} else if (c === HYPHEN) {\n\t\t\t\t\t\t\t// HYPHEN = end boundary\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index - 1 === boundary.length) {\n\t\t\t\t\t\tif (flags & F.PART_BOUNDARY) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tif (c === LF) {\n\t\t\t\t\t\t\t\t// unset the PART_BOUNDARY flag\n\t\t\t\t\t\t\t\tflags &= ~F.PART_BOUNDARY;\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (flags & F.LAST_BOUNDARY) {\n\t\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t// when matching a possible boundary, keep a lookbehind reference\n\t\t\t\t\t\t// in case it turns out to be a false lead\n\t\t\t\t\t\tlookbehind[index - 1] = c;\n\t\t\t\t\t} else if (previousIndex > 0) {\n\t\t\t\t\t\t// if our boundary turned out to be rubbish, the captured lookbehind\n\t\t\t\t\t\t// belongs to partData\n\t\t\t\t\t\tconst _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);\n\t\t\t\t\t\tcallback('onPartData', 0, previousIndex, _lookbehind);\n\t\t\t\t\t\tpreviousIndex = 0;\n\t\t\t\t\t\tmark('onPartData');\n\n\t\t\t\t\t\t// reconsider the current character even so it interrupted the sequence\n\t\t\t\t\t\t// it could be the beginning of a new sequence\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.END:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected state entered: ${state}`);\n\t\t\t}\n\t\t}\n\n\t\tdataCallback('onHeaderField');\n\t\tdataCallback('onHeaderValue');\n\t\tdataCallback('onPartData');\n\n\t\t// Update properties for the next call\n\t\tthis.index = index;\n\t\tthis.state = state;\n\t\tthis.flags = flags;\n\t}\n\n\tend() {\n\t\tif ((this.state === S.HEADER_FIELD_START && this.index === 0) ||\n\t\t\t(this.state === S.PART_DATA && this.index === this.boundary.length)) {\n\t\t\tthis.onPartEnd();\n\t\t} else if (this.state !== S.END) {\n\t\t\tthrow new Error('MultipartParser.end(): stream ended unexpectedly');\n\t\t}\n\t}\n}\n\nfunction _fileName(headerValue) {\n\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\tconst m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))($|;\\s)/i);\n\tif (!m) {\n\t\treturn;\n\t}\n\n\tconst match = m[2] || m[3] || '';\n\tlet filename = match.slice(match.lastIndexOf('\\\\') + 1);\n\tfilename = filename.replace(/%22/g, '\"');\n\tfilename = filename.replace(/&#(\\d{4});/g, (m, code) => {\n\t\treturn String.fromCharCode(code);\n\t});\n\treturn filename;\n}\n\nasync function toFormData(Body, ct) {\n\tif (!/multipart/i.test(ct)) {\n\t\tthrow new TypeError('Failed to fetch');\n\t}\n\n\tconst m = ct.match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n\n\tif (!m) {\n\t\tthrow new TypeError('no or bad content-type header, no multipart boundary');\n\t}\n\n\tconst parser = new MultipartParser(m[1] || m[2]);\n\n\tlet headerField;\n\tlet headerValue;\n\tlet entryValue;\n\tlet entryName;\n\tlet contentType;\n\tlet filename;\n\tconst entryChunks = [];\n\tconst formData = new FormData();\n\n\tconst onPartData = ui8a => {\n\t\tentryValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tconst appendToFile = ui8a => {\n\t\tentryChunks.push(ui8a);\n\t};\n\n\tconst appendFileToFormData = () => {\n\t\tconst file = new File(entryChunks, filename, {type: contentType});\n\t\tformData.append(entryName, file);\n\t};\n\n\tconst appendEntryToFormData = () => {\n\t\tformData.append(entryName, entryValue);\n\t};\n\n\tconst decoder = new TextDecoder('utf-8');\n\tdecoder.decode();\n\n\tparser.onPartBegin = function () {\n\t\tparser.onPartData = onPartData;\n\t\tparser.onPartEnd = appendEntryToFormData;\n\n\t\theaderField = '';\n\t\theaderValue = '';\n\t\tentryValue = '';\n\t\tentryName = '';\n\t\tcontentType = '';\n\t\tfilename = null;\n\t\tentryChunks.length = 0;\n\t};\n\n\tparser.onHeaderField = function (ui8a) {\n\t\theaderField += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderValue = function (ui8a) {\n\t\theaderValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderEnd = function () {\n\t\theaderValue += decoder.decode();\n\t\theaderField = headerField.toLowerCase();\n\n\t\tif (headerField === 'content-disposition') {\n\t\t\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\t\t\tconst m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))/i);\n\n\t\t\tif (m) {\n\t\t\t\tentryName = m[2] || m[3] || '';\n\t\t\t}\n\n\t\t\tfilename = _fileName(headerValue);\n\n\t\t\tif (filename) {\n\t\t\t\tparser.onPartData = appendToFile;\n\t\t\t\tparser.onPartEnd = appendFileToFormData;\n\t\t\t}\n\t\t} else if (headerField === 'content-type') {\n\t\t\tcontentType = headerValue;\n\t\t}\n\n\t\theaderValue = '';\n\t\theaderField = '';\n\t};\n\n\tfor await (const chunk of Body) {\n\t\tparser.write(chunk);\n\t}\n\n\tparser.end();\n\n\treturn formData;\n}\n\nexport { toFormData };\n", "import http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, { PassThrough, pipeline as pipeline$1 } from 'node:stream';\nimport { Buffer as Buffer$1 } from 'node:buffer';\nimport { types, promisify, deprecate } from 'node:util';\nimport { format } from 'node:url';\nimport { isIP } from 'node:net';\nimport 'node:fs';\nimport 'node:path';\n\n/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nfunction dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else if (meta[i]) {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar ponyfill_es2018Exports = {};\nvar ponyfill_es2018 = {\n  get exports(){ return ponyfill_es2018Exports; },\n  set exports(v){ ponyfill_es2018Exports = v; },\n};\n\n/**\n * web-streams-polyfill v3.2.1\n */\n\nvar hasRequiredPonyfill_es2018;\n\nfunction requirePonyfill_es2018 () {\n\tif (hasRequiredPonyfill_es2018) return ponyfill_es2018Exports;\n\thasRequiredPonyfill_es2018 = 1;\n\t(function (module, exports) {\n\t\t(function (global, factory) {\n\t\t    factory(exports) ;\n\t\t}(commonjsGlobal, (function (exports) {\n\t\t    /// <reference lib=\"es2015.symbol\" />\n\t\t    const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n\t\t        Symbol :\n\t\t        description => `Symbol(${description})`;\n\n\t\t    /// <reference lib=\"dom\" />\n\t\t    function noop() {\n\t\t        return undefined;\n\t\t    }\n\t\t    function getGlobals() {\n\t\t        if (typeof self !== 'undefined') {\n\t\t            return self;\n\t\t        }\n\t\t        else if (typeof window !== 'undefined') {\n\t\t            return window;\n\t\t        }\n\t\t        else if (typeof commonjsGlobal !== 'undefined') {\n\t\t            return commonjsGlobal;\n\t\t        }\n\t\t        return undefined;\n\t\t    }\n\t\t    const globals = getGlobals();\n\n\t\t    function typeIsObject(x) {\n\t\t        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n\t\t    }\n\t\t    const rethrowAssertionErrorRejection = noop;\n\n\t\t    const originalPromise = Promise;\n\t\t    const originalPromiseThen = Promise.prototype.then;\n\t\t    const originalPromiseResolve = Promise.resolve.bind(originalPromise);\n\t\t    const originalPromiseReject = Promise.reject.bind(originalPromise);\n\t\t    function newPromise(executor) {\n\t\t        return new originalPromise(executor);\n\t\t    }\n\t\t    function promiseResolvedWith(value) {\n\t\t        return originalPromiseResolve(value);\n\t\t    }\n\t\t    function promiseRejectedWith(reason) {\n\t\t        return originalPromiseReject(reason);\n\t\t    }\n\t\t    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n\t\t        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n\t\t        // approximation.\n\t\t        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n\t\t    }\n\t\t    function uponPromise(promise, onFulfilled, onRejected) {\n\t\t        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n\t\t    }\n\t\t    function uponFulfillment(promise, onFulfilled) {\n\t\t        uponPromise(promise, onFulfilled);\n\t\t    }\n\t\t    function uponRejection(promise, onRejected) {\n\t\t        uponPromise(promise, undefined, onRejected);\n\t\t    }\n\t\t    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n\t\t        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n\t\t    }\n\t\t    function setPromiseIsHandledToTrue(promise) {\n\t\t        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n\t\t    }\n\t\t    const queueMicrotask = (() => {\n\t\t        const globalQueueMicrotask = globals && globals.queueMicrotask;\n\t\t        if (typeof globalQueueMicrotask === 'function') {\n\t\t            return globalQueueMicrotask;\n\t\t        }\n\t\t        const resolvedPromise = promiseResolvedWith(undefined);\n\t\t        return (fn) => PerformPromiseThen(resolvedPromise, fn);\n\t\t    })();\n\t\t    function reflectCall(F, V, args) {\n\t\t        if (typeof F !== 'function') {\n\t\t            throw new TypeError('Argument is not a function');\n\t\t        }\n\t\t        return Function.prototype.apply.call(F, V, args);\n\t\t    }\n\t\t    function promiseCall(F, V, args) {\n\t\t        try {\n\t\t            return promiseResolvedWith(reflectCall(F, V, args));\n\t\t        }\n\t\t        catch (value) {\n\t\t            return promiseRejectedWith(value);\n\t\t        }\n\t\t    }\n\n\t\t    // Original from Chromium\n\t\t    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n\t\t    const QUEUE_MAX_ARRAY_SIZE = 16384;\n\t\t    /**\n\t\t     * Simple queue structure.\n\t\t     *\n\t\t     * Avoids scalability issues with using a packed array directly by using\n\t\t     * multiple arrays in a linked list and keeping the array size bounded.\n\t\t     */\n\t\t    class SimpleQueue {\n\t\t        constructor() {\n\t\t            this._cursor = 0;\n\t\t            this._size = 0;\n\t\t            // _front and _back are always defined.\n\t\t            this._front = {\n\t\t                _elements: [],\n\t\t                _next: undefined\n\t\t            };\n\t\t            this._back = this._front;\n\t\t            // The cursor is used to avoid calling Array.shift().\n\t\t            // It contains the index of the front element of the array inside the\n\t\t            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n\t\t            this._cursor = 0;\n\t\t            // When there is only one node, size === elements.length - cursor.\n\t\t            this._size = 0;\n\t\t        }\n\t\t        get length() {\n\t\t            return this._size;\n\t\t        }\n\t\t        // For exception safety, this method is structured in order:\n\t\t        // 1. Read state\n\t\t        // 2. Calculate required state mutations\n\t\t        // 3. Perform state mutations\n\t\t        push(element) {\n\t\t            const oldBack = this._back;\n\t\t            let newBack = oldBack;\n\t\t            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n\t\t                newBack = {\n\t\t                    _elements: [],\n\t\t                    _next: undefined\n\t\t                };\n\t\t            }\n\t\t            // push() is the mutation most likely to throw an exception, so it\n\t\t            // goes first.\n\t\t            oldBack._elements.push(element);\n\t\t            if (newBack !== oldBack) {\n\t\t                this._back = newBack;\n\t\t                oldBack._next = newBack;\n\t\t            }\n\t\t            ++this._size;\n\t\t        }\n\t\t        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n\t\t        // exception safety.\n\t\t        shift() { // must not be called on an empty queue\n\t\t            const oldFront = this._front;\n\t\t            let newFront = oldFront;\n\t\t            const oldCursor = this._cursor;\n\t\t            let newCursor = oldCursor + 1;\n\t\t            const elements = oldFront._elements;\n\t\t            const element = elements[oldCursor];\n\t\t            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n\t\t                newFront = oldFront._next;\n\t\t                newCursor = 0;\n\t\t            }\n\t\t            // No mutations before this point.\n\t\t            --this._size;\n\t\t            this._cursor = newCursor;\n\t\t            if (oldFront !== newFront) {\n\t\t                this._front = newFront;\n\t\t            }\n\t\t            // Permit shifted element to be garbage collected.\n\t\t            elements[oldCursor] = undefined;\n\t\t            return element;\n\t\t        }\n\t\t        // The tricky thing about forEach() is that it can be called\n\t\t        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n\t\t        // see that push() within the callback has no negative effects since the end\n\t\t        // of the queue is checked for on every iteration. If shift() is called\n\t\t        // repeatedly within the callback then the next iteration may return an\n\t\t        // element that has been removed. In this case the callback will be called\n\t\t        // with undefined values until we either \"catch up\" with elements that still\n\t\t        // exist or reach the back of the queue.\n\t\t        forEach(callback) {\n\t\t            let i = this._cursor;\n\t\t            let node = this._front;\n\t\t            let elements = node._elements;\n\t\t            while (i !== elements.length || node._next !== undefined) {\n\t\t                if (i === elements.length) {\n\t\t                    node = node._next;\n\t\t                    elements = node._elements;\n\t\t                    i = 0;\n\t\t                    if (elements.length === 0) {\n\t\t                        break;\n\t\t                    }\n\t\t                }\n\t\t                callback(elements[i]);\n\t\t                ++i;\n\t\t            }\n\t\t        }\n\t\t        // Return the element that would be returned if shift() was called now,\n\t\t        // without modifying the queue.\n\t\t        peek() { // must not be called on an empty queue\n\t\t            const front = this._front;\n\t\t            const cursor = this._cursor;\n\t\t            return front._elements[cursor];\n\t\t        }\n\t\t    }\n\n\t\t    function ReadableStreamReaderGenericInitialize(reader, stream) {\n\t\t        reader._ownerReadableStream = stream;\n\t\t        stream._reader = reader;\n\t\t        if (stream._state === 'readable') {\n\t\t            defaultReaderClosedPromiseInitialize(reader);\n\t\t        }\n\t\t        else if (stream._state === 'closed') {\n\t\t            defaultReaderClosedPromiseInitializeAsResolved(reader);\n\t\t        }\n\t\t        else {\n\t\t            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n\t\t        }\n\t\t    }\n\t\t    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n\t\t    // check.\n\t\t    function ReadableStreamReaderGenericCancel(reader, reason) {\n\t\t        const stream = reader._ownerReadableStream;\n\t\t        return ReadableStreamCancel(stream, reason);\n\t\t    }\n\t\t    function ReadableStreamReaderGenericRelease(reader) {\n\t\t        if (reader._ownerReadableStream._state === 'readable') {\n\t\t            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n\t\t        }\n\t\t        else {\n\t\t            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n\t\t        }\n\t\t        reader._ownerReadableStream._reader = undefined;\n\t\t        reader._ownerReadableStream = undefined;\n\t\t    }\n\t\t    // Helper functions for the readers.\n\t\t    function readerLockException(name) {\n\t\t        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n\t\t    }\n\t\t    // Helper functions for the ReadableStreamDefaultReader.\n\t\t    function defaultReaderClosedPromiseInitialize(reader) {\n\t\t        reader._closedPromise = newPromise((resolve, reject) => {\n\t\t            reader._closedPromise_resolve = resolve;\n\t\t            reader._closedPromise_reject = reject;\n\t\t        });\n\t\t    }\n\t\t    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n\t\t        defaultReaderClosedPromiseInitialize(reader);\n\t\t        defaultReaderClosedPromiseReject(reader, reason);\n\t\t    }\n\t\t    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n\t\t        defaultReaderClosedPromiseInitialize(reader);\n\t\t        defaultReaderClosedPromiseResolve(reader);\n\t\t    }\n\t\t    function defaultReaderClosedPromiseReject(reader, reason) {\n\t\t        if (reader._closedPromise_reject === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        setPromiseIsHandledToTrue(reader._closedPromise);\n\t\t        reader._closedPromise_reject(reason);\n\t\t        reader._closedPromise_resolve = undefined;\n\t\t        reader._closedPromise_reject = undefined;\n\t\t    }\n\t\t    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n\t\t        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n\t\t    }\n\t\t    function defaultReaderClosedPromiseResolve(reader) {\n\t\t        if (reader._closedPromise_resolve === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        reader._closedPromise_resolve(undefined);\n\t\t        reader._closedPromise_resolve = undefined;\n\t\t        reader._closedPromise_reject = undefined;\n\t\t    }\n\n\t\t    const AbortSteps = SymbolPolyfill('[[AbortSteps]]');\n\t\t    const ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\n\t\t    const CancelSteps = SymbolPolyfill('[[CancelSteps]]');\n\t\t    const PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n\t\t    /// <reference lib=\"es2015.core\" />\n\t\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n\t\t    const NumberIsFinite = Number.isFinite || function (x) {\n\t\t        return typeof x === 'number' && isFinite(x);\n\t\t    };\n\n\t\t    /// <reference lib=\"es2015.core\" />\n\t\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n\t\t    const MathTrunc = Math.trunc || function (v) {\n\t\t        return v < 0 ? Math.ceil(v) : Math.floor(v);\n\t\t    };\n\n\t\t    // https://heycam.github.io/webidl/#idl-dictionaries\n\t\t    function isDictionary(x) {\n\t\t        return typeof x === 'object' || typeof x === 'function';\n\t\t    }\n\t\t    function assertDictionary(obj, context) {\n\t\t        if (obj !== undefined && !isDictionary(obj)) {\n\t\t            throw new TypeError(`${context} is not an object.`);\n\t\t        }\n\t\t    }\n\t\t    // https://heycam.github.io/webidl/#idl-callback-functions\n\t\t    function assertFunction(x, context) {\n\t\t        if (typeof x !== 'function') {\n\t\t            throw new TypeError(`${context} is not a function.`);\n\t\t        }\n\t\t    }\n\t\t    // https://heycam.github.io/webidl/#idl-object\n\t\t    function isObject(x) {\n\t\t        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n\t\t    }\n\t\t    function assertObject(x, context) {\n\t\t        if (!isObject(x)) {\n\t\t            throw new TypeError(`${context} is not an object.`);\n\t\t        }\n\t\t    }\n\t\t    function assertRequiredArgument(x, position, context) {\n\t\t        if (x === undefined) {\n\t\t            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n\t\t        }\n\t\t    }\n\t\t    function assertRequiredField(x, field, context) {\n\t\t        if (x === undefined) {\n\t\t            throw new TypeError(`${field} is required in '${context}'.`);\n\t\t        }\n\t\t    }\n\t\t    // https://heycam.github.io/webidl/#idl-unrestricted-double\n\t\t    function convertUnrestrictedDouble(value) {\n\t\t        return Number(value);\n\t\t    }\n\t\t    function censorNegativeZero(x) {\n\t\t        return x === 0 ? 0 : x;\n\t\t    }\n\t\t    function integerPart(x) {\n\t\t        return censorNegativeZero(MathTrunc(x));\n\t\t    }\n\t\t    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n\t\t    function convertUnsignedLongLongWithEnforceRange(value, context) {\n\t\t        const lowerBound = 0;\n\t\t        const upperBound = Number.MAX_SAFE_INTEGER;\n\t\t        let x = Number(value);\n\t\t        x = censorNegativeZero(x);\n\t\t        if (!NumberIsFinite(x)) {\n\t\t            throw new TypeError(`${context} is not a finite number`);\n\t\t        }\n\t\t        x = integerPart(x);\n\t\t        if (x < lowerBound || x > upperBound) {\n\t\t            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n\t\t        }\n\t\t        if (!NumberIsFinite(x) || x === 0) {\n\t\t            return 0;\n\t\t        }\n\t\t        // TODO Use BigInt if supported?\n\t\t        // let xBigInt = BigInt(integerPart(x));\n\t\t        // xBigInt = BigInt.asUintN(64, xBigInt);\n\t\t        // return Number(xBigInt);\n\t\t        return x;\n\t\t    }\n\n\t\t    function assertReadableStream(x, context) {\n\t\t        if (!IsReadableStream(x)) {\n\t\t            throw new TypeError(`${context} is not a ReadableStream.`);\n\t\t        }\n\t\t    }\n\n\t\t    // Abstract operations for the ReadableStream.\n\t\t    function AcquireReadableStreamDefaultReader(stream) {\n\t\t        return new ReadableStreamDefaultReader(stream);\n\t\t    }\n\t\t    // ReadableStream API exposed for controllers.\n\t\t    function ReadableStreamAddReadRequest(stream, readRequest) {\n\t\t        stream._reader._readRequests.push(readRequest);\n\t\t    }\n\t\t    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n\t\t        const reader = stream._reader;\n\t\t        const readRequest = reader._readRequests.shift();\n\t\t        if (done) {\n\t\t            readRequest._closeSteps();\n\t\t        }\n\t\t        else {\n\t\t            readRequest._chunkSteps(chunk);\n\t\t        }\n\t\t    }\n\t\t    function ReadableStreamGetNumReadRequests(stream) {\n\t\t        return stream._reader._readRequests.length;\n\t\t    }\n\t\t    function ReadableStreamHasDefaultReader(stream) {\n\t\t        const reader = stream._reader;\n\t\t        if (reader === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!IsReadableStreamDefaultReader(reader)) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    /**\n\t\t     * A default reader vended by a {@link ReadableStream}.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableStreamDefaultReader {\n\t\t        constructor(stream) {\n\t\t            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n\t\t            assertReadableStream(stream, 'First parameter');\n\t\t            if (IsReadableStreamLocked(stream)) {\n\t\t                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n\t\t            }\n\t\t            ReadableStreamReaderGenericInitialize(this, stream);\n\t\t            this._readRequests = new SimpleQueue();\n\t\t        }\n\t\t        /**\n\t\t         * Returns a promise that will be fulfilled when the stream becomes closed,\n\t\t         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n\t\t         */\n\t\t        get closed() {\n\t\t            if (!IsReadableStreamDefaultReader(this)) {\n\t\t                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n\t\t            }\n\t\t            return this._closedPromise;\n\t\t        }\n\t\t        /**\n\t\t         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n\t\t         */\n\t\t        cancel(reason = undefined) {\n\t\t            if (!IsReadableStreamDefaultReader(this)) {\n\t\t                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n\t\t            }\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('cancel'));\n\t\t            }\n\t\t            return ReadableStreamReaderGenericCancel(this, reason);\n\t\t        }\n\t\t        /**\n\t\t         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n\t\t         *\n\t\t         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n\t\t         */\n\t\t        read() {\n\t\t            if (!IsReadableStreamDefaultReader(this)) {\n\t\t                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n\t\t            }\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('read from'));\n\t\t            }\n\t\t            let resolvePromise;\n\t\t            let rejectPromise;\n\t\t            const promise = newPromise((resolve, reject) => {\n\t\t                resolvePromise = resolve;\n\t\t                rejectPromise = reject;\n\t\t            });\n\t\t            const readRequest = {\n\t\t                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n\t\t                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n\t\t                _errorSteps: e => rejectPromise(e)\n\t\t            };\n\t\t            ReadableStreamDefaultReaderRead(this, readRequest);\n\t\t            return promise;\n\t\t        }\n\t\t        /**\n\t\t         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n\t\t         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n\t\t         * from now on; otherwise, the reader will appear closed.\n\t\t         *\n\t\t         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n\t\t         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n\t\t         * do so will throw a `TypeError` and leave the reader locked to the stream.\n\t\t         */\n\t\t        releaseLock() {\n\t\t            if (!IsReadableStreamDefaultReader(this)) {\n\t\t                throw defaultReaderBrandCheckException('releaseLock');\n\t\t            }\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return;\n\t\t            }\n\t\t            if (this._readRequests.length > 0) {\n\t\t                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n\t\t            }\n\t\t            ReadableStreamReaderGenericRelease(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n\t\t        cancel: { enumerable: true },\n\t\t        read: { enumerable: true },\n\t\t        releaseLock: { enumerable: true },\n\t\t        closed: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableStreamDefaultReader',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the readers.\n\t\t    function IsReadableStreamDefaultReader(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableStreamDefaultReader;\n\t\t    }\n\t\t    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n\t\t        const stream = reader._ownerReadableStream;\n\t\t        stream._disturbed = true;\n\t\t        if (stream._state === 'closed') {\n\t\t            readRequest._closeSteps();\n\t\t        }\n\t\t        else if (stream._state === 'errored') {\n\t\t            readRequest._errorSteps(stream._storedError);\n\t\t        }\n\t\t        else {\n\t\t            stream._readableStreamController[PullSteps](readRequest);\n\t\t        }\n\t\t    }\n\t\t    // Helper functions for the ReadableStreamDefaultReader.\n\t\t    function defaultReaderBrandCheckException(name) {\n\t\t        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n\t\t    }\n\n\t\t    /// <reference lib=\"es2018.asynciterable\" />\n\t\t    /* eslint-disable @typescript-eslint/no-empty-function */\n\t\t    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n\t\t    /// <reference lib=\"es2018.asynciterable\" />\n\t\t    class ReadableStreamAsyncIteratorImpl {\n\t\t        constructor(reader, preventCancel) {\n\t\t            this._ongoingPromise = undefined;\n\t\t            this._isFinished = false;\n\t\t            this._reader = reader;\n\t\t            this._preventCancel = preventCancel;\n\t\t        }\n\t\t        next() {\n\t\t            const nextSteps = () => this._nextSteps();\n\t\t            this._ongoingPromise = this._ongoingPromise ?\n\t\t                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n\t\t                nextSteps();\n\t\t            return this._ongoingPromise;\n\t\t        }\n\t\t        return(value) {\n\t\t            const returnSteps = () => this._returnSteps(value);\n\t\t            return this._ongoingPromise ?\n\t\t                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n\t\t                returnSteps();\n\t\t        }\n\t\t        _nextSteps() {\n\t\t            if (this._isFinished) {\n\t\t                return Promise.resolve({ value: undefined, done: true });\n\t\t            }\n\t\t            const reader = this._reader;\n\t\t            if (reader._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('iterate'));\n\t\t            }\n\t\t            let resolvePromise;\n\t\t            let rejectPromise;\n\t\t            const promise = newPromise((resolve, reject) => {\n\t\t                resolvePromise = resolve;\n\t\t                rejectPromise = reject;\n\t\t            });\n\t\t            const readRequest = {\n\t\t                _chunkSteps: chunk => {\n\t\t                    this._ongoingPromise = undefined;\n\t\t                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n\t\t                    // FIXME Is this a bug in the specification, or in the test?\n\t\t                    queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n\t\t                },\n\t\t                _closeSteps: () => {\n\t\t                    this._ongoingPromise = undefined;\n\t\t                    this._isFinished = true;\n\t\t                    ReadableStreamReaderGenericRelease(reader);\n\t\t                    resolvePromise({ value: undefined, done: true });\n\t\t                },\n\t\t                _errorSteps: reason => {\n\t\t                    this._ongoingPromise = undefined;\n\t\t                    this._isFinished = true;\n\t\t                    ReadableStreamReaderGenericRelease(reader);\n\t\t                    rejectPromise(reason);\n\t\t                }\n\t\t            };\n\t\t            ReadableStreamDefaultReaderRead(reader, readRequest);\n\t\t            return promise;\n\t\t        }\n\t\t        _returnSteps(value) {\n\t\t            if (this._isFinished) {\n\t\t                return Promise.resolve({ value, done: true });\n\t\t            }\n\t\t            this._isFinished = true;\n\t\t            const reader = this._reader;\n\t\t            if (reader._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('finish iterating'));\n\t\t            }\n\t\t            if (!this._preventCancel) {\n\t\t                const result = ReadableStreamReaderGenericCancel(reader, value);\n\t\t                ReadableStreamReaderGenericRelease(reader);\n\t\t                return transformPromiseWith(result, () => ({ value, done: true }));\n\t\t            }\n\t\t            ReadableStreamReaderGenericRelease(reader);\n\t\t            return promiseResolvedWith({ value, done: true });\n\t\t        }\n\t\t    }\n\t\t    const ReadableStreamAsyncIteratorPrototype = {\n\t\t        next() {\n\t\t            if (!IsReadableStreamAsyncIterator(this)) {\n\t\t                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n\t\t            }\n\t\t            return this._asyncIteratorImpl.next();\n\t\t        },\n\t\t        return(value) {\n\t\t            if (!IsReadableStreamAsyncIterator(this)) {\n\t\t                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n\t\t            }\n\t\t            return this._asyncIteratorImpl.return(value);\n\t\t        }\n\t\t    };\n\t\t    if (AsyncIteratorPrototype !== undefined) {\n\t\t        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n\t\t    }\n\t\t    // Abstract operations for the ReadableStream.\n\t\t    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n\t\t        const reader = AcquireReadableStreamDefaultReader(stream);\n\t\t        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n\t\t        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n\t\t        iterator._asyncIteratorImpl = impl;\n\t\t        return iterator;\n\t\t    }\n\t\t    function IsReadableStreamAsyncIterator(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n\t\t            return false;\n\t\t        }\n\t\t        try {\n\t\t            // noinspection SuspiciousTypeOfGuard\n\t\t            return x._asyncIteratorImpl instanceof\n\t\t                ReadableStreamAsyncIteratorImpl;\n\t\t        }\n\t\t        catch (_a) {\n\t\t            return false;\n\t\t        }\n\t\t    }\n\t\t    // Helper functions for the ReadableStream.\n\t\t    function streamAsyncIteratorBrandCheckException(name) {\n\t\t        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n\t\t    }\n\n\t\t    /// <reference lib=\"es2015.core\" />\n\t\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n\t\t    const NumberIsNaN = Number.isNaN || function (x) {\n\t\t        // eslint-disable-next-line no-self-compare\n\t\t        return x !== x;\n\t\t    };\n\n\t\t    function CreateArrayFromList(elements) {\n\t\t        // We use arrays to represent lists, so this is basically a no-op.\n\t\t        // Do a slice though just in case we happen to depend on the unique-ness.\n\t\t        return elements.slice();\n\t\t    }\n\t\t    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n\t\t        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n\t\t    }\n\t\t    // Not implemented correctly\n\t\t    function TransferArrayBuffer(O) {\n\t\t        return O;\n\t\t    }\n\t\t    // Not implemented correctly\n\t\t    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t    function IsDetachedBuffer(O) {\n\t\t        return false;\n\t\t    }\n\t\t    function ArrayBufferSlice(buffer, begin, end) {\n\t\t        // ArrayBuffer.prototype.slice is not available on IE10\n\t\t        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n\t\t        if (buffer.slice) {\n\t\t            return buffer.slice(begin, end);\n\t\t        }\n\t\t        const length = end - begin;\n\t\t        const slice = new ArrayBuffer(length);\n\t\t        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n\t\t        return slice;\n\t\t    }\n\n\t\t    function IsNonNegativeNumber(v) {\n\t\t        if (typeof v !== 'number') {\n\t\t            return false;\n\t\t        }\n\t\t        if (NumberIsNaN(v)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (v < 0) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    function CloneAsUint8Array(O) {\n\t\t        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n\t\t        return new Uint8Array(buffer);\n\t\t    }\n\n\t\t    function DequeueValue(container) {\n\t\t        const pair = container._queue.shift();\n\t\t        container._queueTotalSize -= pair.size;\n\t\t        if (container._queueTotalSize < 0) {\n\t\t            container._queueTotalSize = 0;\n\t\t        }\n\t\t        return pair.value;\n\t\t    }\n\t\t    function EnqueueValueWithSize(container, value, size) {\n\t\t        if (!IsNonNegativeNumber(size) || size === Infinity) {\n\t\t            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n\t\t        }\n\t\t        container._queue.push({ value, size });\n\t\t        container._queueTotalSize += size;\n\t\t    }\n\t\t    function PeekQueueValue(container) {\n\t\t        const pair = container._queue.peek();\n\t\t        return pair.value;\n\t\t    }\n\t\t    function ResetQueue(container) {\n\t\t        container._queue = new SimpleQueue();\n\t\t        container._queueTotalSize = 0;\n\t\t    }\n\n\t\t    /**\n\t\t     * A pull-into request in a {@link ReadableByteStreamController}.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableStreamBYOBRequest {\n\t\t        constructor() {\n\t\t            throw new TypeError('Illegal constructor');\n\t\t        }\n\t\t        /**\n\t\t         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n\t\t         */\n\t\t        get view() {\n\t\t            if (!IsReadableStreamBYOBRequest(this)) {\n\t\t                throw byobRequestBrandCheckException('view');\n\t\t            }\n\t\t            return this._view;\n\t\t        }\n\t\t        respond(bytesWritten) {\n\t\t            if (!IsReadableStreamBYOBRequest(this)) {\n\t\t                throw byobRequestBrandCheckException('respond');\n\t\t            }\n\t\t            assertRequiredArgument(bytesWritten, 1, 'respond');\n\t\t            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n\t\t            if (this._associatedReadableByteStreamController === undefined) {\n\t\t                throw new TypeError('This BYOB request has been invalidated');\n\t\t            }\n\t\t            if (IsDetachedBuffer(this._view.buffer)) ;\n\t\t            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n\t\t        }\n\t\t        respondWithNewView(view) {\n\t\t            if (!IsReadableStreamBYOBRequest(this)) {\n\t\t                throw byobRequestBrandCheckException('respondWithNewView');\n\t\t            }\n\t\t            assertRequiredArgument(view, 1, 'respondWithNewView');\n\t\t            if (!ArrayBuffer.isView(view)) {\n\t\t                throw new TypeError('You can only respond with array buffer views');\n\t\t            }\n\t\t            if (this._associatedReadableByteStreamController === undefined) {\n\t\t                throw new TypeError('This BYOB request has been invalidated');\n\t\t            }\n\t\t            if (IsDetachedBuffer(view.buffer)) ;\n\t\t            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n\t\t        respond: { enumerable: true },\n\t\t        respondWithNewView: { enumerable: true },\n\t\t        view: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableStreamBYOBRequest',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    /**\n\t\t     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableByteStreamController {\n\t\t        constructor() {\n\t\t            throw new TypeError('Illegal constructor');\n\t\t        }\n\t\t        /**\n\t\t         * Returns the current BYOB pull request, or `null` if there isn't one.\n\t\t         */\n\t\t        get byobRequest() {\n\t\t            if (!IsReadableByteStreamController(this)) {\n\t\t                throw byteStreamControllerBrandCheckException('byobRequest');\n\t\t            }\n\t\t            return ReadableByteStreamControllerGetBYOBRequest(this);\n\t\t        }\n\t\t        /**\n\t\t         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n\t\t         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n\t\t         */\n\t\t        get desiredSize() {\n\t\t            if (!IsReadableByteStreamController(this)) {\n\t\t                throw byteStreamControllerBrandCheckException('desiredSize');\n\t\t            }\n\t\t            return ReadableByteStreamControllerGetDesiredSize(this);\n\t\t        }\n\t\t        /**\n\t\t         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n\t\t         * the stream, but once those are read, the stream will become closed.\n\t\t         */\n\t\t        close() {\n\t\t            if (!IsReadableByteStreamController(this)) {\n\t\t                throw byteStreamControllerBrandCheckException('close');\n\t\t            }\n\t\t            if (this._closeRequested) {\n\t\t                throw new TypeError('The stream has already been closed; do not close it again!');\n\t\t            }\n\t\t            const state = this._controlledReadableByteStream._state;\n\t\t            if (state !== 'readable') {\n\t\t                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n\t\t            }\n\t\t            ReadableByteStreamControllerClose(this);\n\t\t        }\n\t\t        enqueue(chunk) {\n\t\t            if (!IsReadableByteStreamController(this)) {\n\t\t                throw byteStreamControllerBrandCheckException('enqueue');\n\t\t            }\n\t\t            assertRequiredArgument(chunk, 1, 'enqueue');\n\t\t            if (!ArrayBuffer.isView(chunk)) {\n\t\t                throw new TypeError('chunk must be an array buffer view');\n\t\t            }\n\t\t            if (chunk.byteLength === 0) {\n\t\t                throw new TypeError('chunk must have non-zero byteLength');\n\t\t            }\n\t\t            if (chunk.buffer.byteLength === 0) {\n\t\t                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n\t\t            }\n\t\t            if (this._closeRequested) {\n\t\t                throw new TypeError('stream is closed or draining');\n\t\t            }\n\t\t            const state = this._controlledReadableByteStream._state;\n\t\t            if (state !== 'readable') {\n\t\t                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n\t\t            }\n\t\t            ReadableByteStreamControllerEnqueue(this, chunk);\n\t\t        }\n\t\t        /**\n\t\t         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n\t\t         */\n\t\t        error(e = undefined) {\n\t\t            if (!IsReadableByteStreamController(this)) {\n\t\t                throw byteStreamControllerBrandCheckException('error');\n\t\t            }\n\t\t            ReadableByteStreamControllerError(this, e);\n\t\t        }\n\t\t        /** @internal */\n\t\t        [CancelSteps](reason) {\n\t\t            ReadableByteStreamControllerClearPendingPullIntos(this);\n\t\t            ResetQueue(this);\n\t\t            const result = this._cancelAlgorithm(reason);\n\t\t            ReadableByteStreamControllerClearAlgorithms(this);\n\t\t            return result;\n\t\t        }\n\t\t        /** @internal */\n\t\t        [PullSteps](readRequest) {\n\t\t            const stream = this._controlledReadableByteStream;\n\t\t            if (this._queueTotalSize > 0) {\n\t\t                const entry = this._queue.shift();\n\t\t                this._queueTotalSize -= entry.byteLength;\n\t\t                ReadableByteStreamControllerHandleQueueDrain(this);\n\t\t                const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n\t\t                readRequest._chunkSteps(view);\n\t\t                return;\n\t\t            }\n\t\t            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n\t\t            if (autoAllocateChunkSize !== undefined) {\n\t\t                let buffer;\n\t\t                try {\n\t\t                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n\t\t                }\n\t\t                catch (bufferE) {\n\t\t                    readRequest._errorSteps(bufferE);\n\t\t                    return;\n\t\t                }\n\t\t                const pullIntoDescriptor = {\n\t\t                    buffer,\n\t\t                    bufferByteLength: autoAllocateChunkSize,\n\t\t                    byteOffset: 0,\n\t\t                    byteLength: autoAllocateChunkSize,\n\t\t                    bytesFilled: 0,\n\t\t                    elementSize: 1,\n\t\t                    viewConstructor: Uint8Array,\n\t\t                    readerType: 'default'\n\t\t                };\n\t\t                this._pendingPullIntos.push(pullIntoDescriptor);\n\t\t            }\n\t\t            ReadableStreamAddReadRequest(stream, readRequest);\n\t\t            ReadableByteStreamControllerCallPullIfNeeded(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableByteStreamController.prototype, {\n\t\t        close: { enumerable: true },\n\t\t        enqueue: { enumerable: true },\n\t\t        error: { enumerable: true },\n\t\t        byobRequest: { enumerable: true },\n\t\t        desiredSize: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableByteStreamController',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the ReadableByteStreamController.\n\t\t    function IsReadableByteStreamController(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableByteStreamController;\n\t\t    }\n\t\t    function IsReadableStreamBYOBRequest(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableStreamBYOBRequest;\n\t\t    }\n\t\t    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n\t\t        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n\t\t        if (!shouldPull) {\n\t\t            return;\n\t\t        }\n\t\t        if (controller._pulling) {\n\t\t            controller._pullAgain = true;\n\t\t            return;\n\t\t        }\n\t\t        controller._pulling = true;\n\t\t        // TODO: Test controller argument\n\t\t        const pullPromise = controller._pullAlgorithm();\n\t\t        uponPromise(pullPromise, () => {\n\t\t            controller._pulling = false;\n\t\t            if (controller._pullAgain) {\n\t\t                controller._pullAgain = false;\n\t\t                ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t            }\n\t\t        }, e => {\n\t\t            ReadableByteStreamControllerError(controller, e);\n\t\t        });\n\t\t    }\n\t\t    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n\t\t        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t\t        controller._pendingPullIntos = new SimpleQueue();\n\t\t    }\n\t\t    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n\t\t        let done = false;\n\t\t        if (stream._state === 'closed') {\n\t\t            done = true;\n\t\t        }\n\t\t        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\t\t        if (pullIntoDescriptor.readerType === 'default') {\n\t\t            ReadableStreamFulfillReadRequest(stream, filledView, done);\n\t\t        }\n\t\t        else {\n\t\t            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n\t\t        }\n\t\t    }\n\t\t    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n\t\t        const bytesFilled = pullIntoDescriptor.bytesFilled;\n\t\t        const elementSize = pullIntoDescriptor.elementSize;\n\t\t        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n\t\t    }\n\t\t    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n\t\t        controller._queue.push({ buffer, byteOffset, byteLength });\n\t\t        controller._queueTotalSize += byteLength;\n\t\t    }\n\t\t    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n\t\t        const elementSize = pullIntoDescriptor.elementSize;\n\t\t        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\t\t        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n\t\t        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n\t\t        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\t\t        let totalBytesToCopyRemaining = maxBytesToCopy;\n\t\t        let ready = false;\n\t\t        if (maxAlignedBytes > currentAlignedBytes) {\n\t\t            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n\t\t            ready = true;\n\t\t        }\n\t\t        const queue = controller._queue;\n\t\t        while (totalBytesToCopyRemaining > 0) {\n\t\t            const headOfQueue = queue.peek();\n\t\t            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\t\t            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n\t\t            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\t\t            if (headOfQueue.byteLength === bytesToCopy) {\n\t\t                queue.shift();\n\t\t            }\n\t\t            else {\n\t\t                headOfQueue.byteOffset += bytesToCopy;\n\t\t                headOfQueue.byteLength -= bytesToCopy;\n\t\t            }\n\t\t            controller._queueTotalSize -= bytesToCopy;\n\t\t            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\t\t            totalBytesToCopyRemaining -= bytesToCopy;\n\t\t        }\n\t\t        return ready;\n\t\t    }\n\t\t    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n\t\t        pullIntoDescriptor.bytesFilled += size;\n\t\t    }\n\t\t    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n\t\t        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n\t\t            ReadableByteStreamControllerClearAlgorithms(controller);\n\t\t            ReadableStreamClose(controller._controlledReadableByteStream);\n\t\t        }\n\t\t        else {\n\t\t            ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t        }\n\t\t    }\n\t\t    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n\t\t        if (controller._byobRequest === null) {\n\t\t            return;\n\t\t        }\n\t\t        controller._byobRequest._associatedReadableByteStreamController = undefined;\n\t\t        controller._byobRequest._view = null;\n\t\t        controller._byobRequest = null;\n\t\t    }\n\t\t    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n\t\t        while (controller._pendingPullIntos.length > 0) {\n\t\t            if (controller._queueTotalSize === 0) {\n\t\t                return;\n\t\t            }\n\t\t            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n\t\t            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n\t\t                ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t\t                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\t\t            }\n\t\t        }\n\t\t    }\n\t\t    function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        let elementSize = 1;\n\t\t        if (view.constructor !== DataView) {\n\t\t            elementSize = view.constructor.BYTES_PER_ELEMENT;\n\t\t        }\n\t\t        const ctor = view.constructor;\n\t\t        // try {\n\t\t        const buffer = TransferArrayBuffer(view.buffer);\n\t\t        // } catch (e) {\n\t\t        //   readIntoRequest._errorSteps(e);\n\t\t        //   return;\n\t\t        // }\n\t\t        const pullIntoDescriptor = {\n\t\t            buffer,\n\t\t            bufferByteLength: buffer.byteLength,\n\t\t            byteOffset: view.byteOffset,\n\t\t            byteLength: view.byteLength,\n\t\t            bytesFilled: 0,\n\t\t            elementSize,\n\t\t            viewConstructor: ctor,\n\t\t            readerType: 'byob'\n\t\t        };\n\t\t        if (controller._pendingPullIntos.length > 0) {\n\t\t            controller._pendingPullIntos.push(pullIntoDescriptor);\n\t\t            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n\t\t            // - No change happens on desiredSize\n\t\t            // - The source has already been notified of that there's at least 1 pending read(view)\n\t\t            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n\t\t            return;\n\t\t        }\n\t\t        if (stream._state === 'closed') {\n\t\t            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n\t\t            readIntoRequest._closeSteps(emptyView);\n\t\t            return;\n\t\t        }\n\t\t        if (controller._queueTotalSize > 0) {\n\t\t            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n\t\t                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\t\t                ReadableByteStreamControllerHandleQueueDrain(controller);\n\t\t                readIntoRequest._chunkSteps(filledView);\n\t\t                return;\n\t\t            }\n\t\t            if (controller._closeRequested) {\n\t\t                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n\t\t                ReadableByteStreamControllerError(controller, e);\n\t\t                readIntoRequest._errorSteps(e);\n\t\t                return;\n\t\t            }\n\t\t        }\n\t\t        controller._pendingPullIntos.push(pullIntoDescriptor);\n\t\t        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n\t\t        ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t    }\n\t\t    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        if (ReadableStreamHasBYOBReader(stream)) {\n\t\t            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n\t\t                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t\t                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n\t\t            }\n\t\t        }\n\t\t    }\n\t\t    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n\t\t        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\t\t        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n\t\t            return;\n\t\t        }\n\t\t        ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t\t        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n\t\t        if (remainderSize > 0) {\n\t\t            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n\t\t            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n\t\t            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n\t\t        }\n\t\t        pullIntoDescriptor.bytesFilled -= remainderSize;\n\t\t        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\t\t        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n\t\t    }\n\t\t    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n\t\t        const firstDescriptor = controller._pendingPullIntos.peek();\n\t\t        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t\t        const state = controller._controlledReadableByteStream._state;\n\t\t        if (state === 'closed') {\n\t\t            ReadableByteStreamControllerRespondInClosedState(controller);\n\t\t        }\n\t\t        else {\n\t\t            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n\t\t        }\n\t\t        ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t    }\n\t\t    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n\t\t        const descriptor = controller._pendingPullIntos.shift();\n\t\t        return descriptor;\n\t\t    }\n\t\t    function ReadableByteStreamControllerShouldCallPull(controller) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        if (stream._state !== 'readable') {\n\t\t            return false;\n\t\t        }\n\t\t        if (controller._closeRequested) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!controller._started) {\n\t\t            return false;\n\t\t        }\n\t\t        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t\t            return true;\n\t\t        }\n\t\t        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n\t\t            return true;\n\t\t        }\n\t\t        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n\t\t        if (desiredSize > 0) {\n\t\t            return true;\n\t\t        }\n\t\t        return false;\n\t\t    }\n\t\t    function ReadableByteStreamControllerClearAlgorithms(controller) {\n\t\t        controller._pullAlgorithm = undefined;\n\t\t        controller._cancelAlgorithm = undefined;\n\t\t    }\n\t\t    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\t\t    function ReadableByteStreamControllerClose(controller) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        if (controller._closeRequested || stream._state !== 'readable') {\n\t\t            return;\n\t\t        }\n\t\t        if (controller._queueTotalSize > 0) {\n\t\t            controller._closeRequested = true;\n\t\t            return;\n\t\t        }\n\t\t        if (controller._pendingPullIntos.length > 0) {\n\t\t            const firstPendingPullInto = controller._pendingPullIntos.peek();\n\t\t            if (firstPendingPullInto.bytesFilled > 0) {\n\t\t                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n\t\t                ReadableByteStreamControllerError(controller, e);\n\t\t                throw e;\n\t\t            }\n\t\t        }\n\t\t        ReadableByteStreamControllerClearAlgorithms(controller);\n\t\t        ReadableStreamClose(stream);\n\t\t    }\n\t\t    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        if (controller._closeRequested || stream._state !== 'readable') {\n\t\t            return;\n\t\t        }\n\t\t        const buffer = chunk.buffer;\n\t\t        const byteOffset = chunk.byteOffset;\n\t\t        const byteLength = chunk.byteLength;\n\t\t        const transferredBuffer = TransferArrayBuffer(buffer);\n\t\t        if (controller._pendingPullIntos.length > 0) {\n\t\t            const firstPendingPullInto = controller._pendingPullIntos.peek();\n\t\t            if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;\n\t\t            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n\t\t        }\n\t\t        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t\t        if (ReadableStreamHasDefaultReader(stream)) {\n\t\t            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n\t\t                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t\t            }\n\t\t            else {\n\t\t                if (controller._pendingPullIntos.length > 0) {\n\t\t                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t\t                }\n\t\t                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n\t\t                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n\t\t            }\n\t\t        }\n\t\t        else if (ReadableStreamHasBYOBReader(stream)) {\n\t\t            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n\t\t            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t\t            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n\t\t        }\n\t\t        else {\n\t\t            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t\t        }\n\t\t        ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t    }\n\t\t    function ReadableByteStreamControllerError(controller, e) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        if (stream._state !== 'readable') {\n\t\t            return;\n\t\t        }\n\t\t        ReadableByteStreamControllerClearPendingPullIntos(controller);\n\t\t        ResetQueue(controller);\n\t\t        ReadableByteStreamControllerClearAlgorithms(controller);\n\t\t        ReadableStreamError(stream, e);\n\t\t    }\n\t\t    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n\t\t        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n\t\t            const firstDescriptor = controller._pendingPullIntos.peek();\n\t\t            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\t\t            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n\t\t            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n\t\t            controller._byobRequest = byobRequest;\n\t\t        }\n\t\t        return controller._byobRequest;\n\t\t    }\n\t\t    function ReadableByteStreamControllerGetDesiredSize(controller) {\n\t\t        const state = controller._controlledReadableByteStream._state;\n\t\t        if (state === 'errored') {\n\t\t            return null;\n\t\t        }\n\t\t        if (state === 'closed') {\n\t\t            return 0;\n\t\t        }\n\t\t        return controller._strategyHWM - controller._queueTotalSize;\n\t\t    }\n\t\t    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n\t\t        const firstDescriptor = controller._pendingPullIntos.peek();\n\t\t        const state = controller._controlledReadableByteStream._state;\n\t\t        if (state === 'closed') {\n\t\t            if (bytesWritten !== 0) {\n\t\t                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n\t\t            }\n\t\t        }\n\t\t        else {\n\t\t            if (bytesWritten === 0) {\n\t\t                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n\t\t            }\n\t\t            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n\t\t                throw new RangeError('bytesWritten out of range');\n\t\t            }\n\t\t        }\n\t\t        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\t\t        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n\t\t    }\n\t\t    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n\t\t        const firstDescriptor = controller._pendingPullIntos.peek();\n\t\t        const state = controller._controlledReadableByteStream._state;\n\t\t        if (state === 'closed') {\n\t\t            if (view.byteLength !== 0) {\n\t\t                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n\t\t            }\n\t\t        }\n\t\t        else {\n\t\t            if (view.byteLength === 0) {\n\t\t                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n\t\t            }\n\t\t        }\n\t\t        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n\t\t            throw new RangeError('The region specified by view does not match byobRequest');\n\t\t        }\n\t\t        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n\t\t            throw new RangeError('The buffer of view has different capacity than byobRequest');\n\t\t        }\n\t\t        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n\t\t            throw new RangeError('The region specified by view is larger than byobRequest');\n\t\t        }\n\t\t        const viewByteLength = view.byteLength;\n\t\t        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n\t\t        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n\t\t    }\n\t\t    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n\t\t        controller._controlledReadableByteStream = stream;\n\t\t        controller._pullAgain = false;\n\t\t        controller._pulling = false;\n\t\t        controller._byobRequest = null;\n\t\t        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n\t\t        controller._queue = controller._queueTotalSize = undefined;\n\t\t        ResetQueue(controller);\n\t\t        controller._closeRequested = false;\n\t\t        controller._started = false;\n\t\t        controller._strategyHWM = highWaterMark;\n\t\t        controller._pullAlgorithm = pullAlgorithm;\n\t\t        controller._cancelAlgorithm = cancelAlgorithm;\n\t\t        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n\t\t        controller._pendingPullIntos = new SimpleQueue();\n\t\t        stream._readableStreamController = controller;\n\t\t        const startResult = startAlgorithm();\n\t\t        uponPromise(promiseResolvedWith(startResult), () => {\n\t\t            controller._started = true;\n\t\t            ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t        }, r => {\n\t\t            ReadableByteStreamControllerError(controller, r);\n\t\t        });\n\t\t    }\n\t\t    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n\t\t        const controller = Object.create(ReadableByteStreamController.prototype);\n\t\t        let startAlgorithm = () => undefined;\n\t\t        let pullAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        if (underlyingByteSource.start !== undefined) {\n\t\t            startAlgorithm = () => underlyingByteSource.start(controller);\n\t\t        }\n\t\t        if (underlyingByteSource.pull !== undefined) {\n\t\t            pullAlgorithm = () => underlyingByteSource.pull(controller);\n\t\t        }\n\t\t        if (underlyingByteSource.cancel !== undefined) {\n\t\t            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n\t\t        }\n\t\t        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n\t\t        if (autoAllocateChunkSize === 0) {\n\t\t            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n\t\t        }\n\t\t        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n\t\t    }\n\t\t    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n\t\t        request._associatedReadableByteStreamController = controller;\n\t\t        request._view = view;\n\t\t    }\n\t\t    // Helper functions for the ReadableStreamBYOBRequest.\n\t\t    function byobRequestBrandCheckException(name) {\n\t\t        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n\t\t    }\n\t\t    // Helper functions for the ReadableByteStreamController.\n\t\t    function byteStreamControllerBrandCheckException(name) {\n\t\t        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n\t\t    }\n\n\t\t    // Abstract operations for the ReadableStream.\n\t\t    function AcquireReadableStreamBYOBReader(stream) {\n\t\t        return new ReadableStreamBYOBReader(stream);\n\t\t    }\n\t\t    // ReadableStream API exposed for controllers.\n\t\t    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n\t\t        stream._reader._readIntoRequests.push(readIntoRequest);\n\t\t    }\n\t\t    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n\t\t        const reader = stream._reader;\n\t\t        const readIntoRequest = reader._readIntoRequests.shift();\n\t\t        if (done) {\n\t\t            readIntoRequest._closeSteps(chunk);\n\t\t        }\n\t\t        else {\n\t\t            readIntoRequest._chunkSteps(chunk);\n\t\t        }\n\t\t    }\n\t\t    function ReadableStreamGetNumReadIntoRequests(stream) {\n\t\t        return stream._reader._readIntoRequests.length;\n\t\t    }\n\t\t    function ReadableStreamHasBYOBReader(stream) {\n\t\t        const reader = stream._reader;\n\t\t        if (reader === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!IsReadableStreamBYOBReader(reader)) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    /**\n\t\t     * A BYOB reader vended by a {@link ReadableStream}.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableStreamBYOBReader {\n\t\t        constructor(stream) {\n\t\t            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n\t\t            assertReadableStream(stream, 'First parameter');\n\t\t            if (IsReadableStreamLocked(stream)) {\n\t\t                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n\t\t            }\n\t\t            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n\t\t                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n\t\t                    'source');\n\t\t            }\n\t\t            ReadableStreamReaderGenericInitialize(this, stream);\n\t\t            this._readIntoRequests = new SimpleQueue();\n\t\t        }\n\t\t        /**\n\t\t         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n\t\t         * the reader's lock is released before the stream finishes closing.\n\t\t         */\n\t\t        get closed() {\n\t\t            if (!IsReadableStreamBYOBReader(this)) {\n\t\t                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n\t\t            }\n\t\t            return this._closedPromise;\n\t\t        }\n\t\t        /**\n\t\t         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n\t\t         */\n\t\t        cancel(reason = undefined) {\n\t\t            if (!IsReadableStreamBYOBReader(this)) {\n\t\t                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n\t\t            }\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('cancel'));\n\t\t            }\n\t\t            return ReadableStreamReaderGenericCancel(this, reason);\n\t\t        }\n\t\t        /**\n\t\t         * Attempts to reads bytes into view, and returns a promise resolved with the result.\n\t\t         *\n\t\t         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n\t\t         */\n\t\t        read(view) {\n\t\t            if (!IsReadableStreamBYOBReader(this)) {\n\t\t                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n\t\t            }\n\t\t            if (!ArrayBuffer.isView(view)) {\n\t\t                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n\t\t            }\n\t\t            if (view.byteLength === 0) {\n\t\t                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n\t\t            }\n\t\t            if (view.buffer.byteLength === 0) {\n\t\t                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n\t\t            }\n\t\t            if (IsDetachedBuffer(view.buffer)) ;\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('read from'));\n\t\t            }\n\t\t            let resolvePromise;\n\t\t            let rejectPromise;\n\t\t            const promise = newPromise((resolve, reject) => {\n\t\t                resolvePromise = resolve;\n\t\t                rejectPromise = reject;\n\t\t            });\n\t\t            const readIntoRequest = {\n\t\t                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n\t\t                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n\t\t                _errorSteps: e => rejectPromise(e)\n\t\t            };\n\t\t            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n\t\t            return promise;\n\t\t        }\n\t\t        /**\n\t\t         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n\t\t         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n\t\t         * from now on; otherwise, the reader will appear closed.\n\t\t         *\n\t\t         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n\t\t         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n\t\t         * do so will throw a `TypeError` and leave the reader locked to the stream.\n\t\t         */\n\t\t        releaseLock() {\n\t\t            if (!IsReadableStreamBYOBReader(this)) {\n\t\t                throw byobReaderBrandCheckException('releaseLock');\n\t\t            }\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return;\n\t\t            }\n\t\t            if (this._readIntoRequests.length > 0) {\n\t\t                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n\t\t            }\n\t\t            ReadableStreamReaderGenericRelease(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n\t\t        cancel: { enumerable: true },\n\t\t        read: { enumerable: true },\n\t\t        releaseLock: { enumerable: true },\n\t\t        closed: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableStreamBYOBReader',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the readers.\n\t\t    function IsReadableStreamBYOBReader(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableStreamBYOBReader;\n\t\t    }\n\t\t    function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n\t\t        const stream = reader._ownerReadableStream;\n\t\t        stream._disturbed = true;\n\t\t        if (stream._state === 'errored') {\n\t\t            readIntoRequest._errorSteps(stream._storedError);\n\t\t        }\n\t\t        else {\n\t\t            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n\t\t        }\n\t\t    }\n\t\t    // Helper functions for the ReadableStreamBYOBReader.\n\t\t    function byobReaderBrandCheckException(name) {\n\t\t        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n\t\t    }\n\n\t\t    function ExtractHighWaterMark(strategy, defaultHWM) {\n\t\t        const { highWaterMark } = strategy;\n\t\t        if (highWaterMark === undefined) {\n\t\t            return defaultHWM;\n\t\t        }\n\t\t        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n\t\t            throw new RangeError('Invalid highWaterMark');\n\t\t        }\n\t\t        return highWaterMark;\n\t\t    }\n\t\t    function ExtractSizeAlgorithm(strategy) {\n\t\t        const { size } = strategy;\n\t\t        if (!size) {\n\t\t            return () => 1;\n\t\t        }\n\t\t        return size;\n\t\t    }\n\n\t\t    function convertQueuingStrategy(init, context) {\n\t\t        assertDictionary(init, context);\n\t\t        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n\t\t        const size = init === null || init === void 0 ? void 0 : init.size;\n\t\t        return {\n\t\t            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n\t\t            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n\t\t        };\n\t\t    }\n\t\t    function convertQueuingStrategySize(fn, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return chunk => convertUnrestrictedDouble(fn(chunk));\n\t\t    }\n\n\t\t    function convertUnderlyingSink(original, context) {\n\t\t        assertDictionary(original, context);\n\t\t        const abort = original === null || original === void 0 ? void 0 : original.abort;\n\t\t        const close = original === null || original === void 0 ? void 0 : original.close;\n\t\t        const start = original === null || original === void 0 ? void 0 : original.start;\n\t\t        const type = original === null || original === void 0 ? void 0 : original.type;\n\t\t        const write = original === null || original === void 0 ? void 0 : original.write;\n\t\t        return {\n\t\t            abort: abort === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n\t\t            close: close === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n\t\t            start: start === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n\t\t            write: write === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n\t\t            type\n\t\t        };\n\t\t    }\n\t\t    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (reason) => promiseCall(fn, original, [reason]);\n\t\t    }\n\t\t    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return () => promiseCall(fn, original, []);\n\t\t    }\n\t\t    function convertUnderlyingSinkStartCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (controller) => reflectCall(fn, original, [controller]);\n\t\t    }\n\t\t    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n\t\t    }\n\n\t\t    function assertWritableStream(x, context) {\n\t\t        if (!IsWritableStream(x)) {\n\t\t            throw new TypeError(`${context} is not a WritableStream.`);\n\t\t        }\n\t\t    }\n\n\t\t    function isAbortSignal(value) {\n\t\t        if (typeof value !== 'object' || value === null) {\n\t\t            return false;\n\t\t        }\n\t\t        try {\n\t\t            return typeof value.aborted === 'boolean';\n\t\t        }\n\t\t        catch (_a) {\n\t\t            // AbortSignal.prototype.aborted throws if its brand check fails\n\t\t            return false;\n\t\t        }\n\t\t    }\n\t\t    const supportsAbortController = typeof AbortController === 'function';\n\t\t    /**\n\t\t     * Construct a new AbortController, if supported by the platform.\n\t\t     *\n\t\t     * @internal\n\t\t     */\n\t\t    function createAbortController() {\n\t\t        if (supportsAbortController) {\n\t\t            return new AbortController();\n\t\t        }\n\t\t        return undefined;\n\t\t    }\n\n\t\t    /**\n\t\t     * A writable stream represents a destination for data, into which you can write.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class WritableStream {\n\t\t        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n\t\t            if (rawUnderlyingSink === undefined) {\n\t\t                rawUnderlyingSink = null;\n\t\t            }\n\t\t            else {\n\t\t                assertObject(rawUnderlyingSink, 'First parameter');\n\t\t            }\n\t\t            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n\t\t            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n\t\t            InitializeWritableStream(this);\n\t\t            const type = underlyingSink.type;\n\t\t            if (type !== undefined) {\n\t\t                throw new RangeError('Invalid type is specified');\n\t\t            }\n\t\t            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n\t\t            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n\t\t            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n\t\t        }\n\t\t        /**\n\t\t         * Returns whether or not the writable stream is locked to a writer.\n\t\t         */\n\t\t        get locked() {\n\t\t            if (!IsWritableStream(this)) {\n\t\t                throw streamBrandCheckException$2('locked');\n\t\t            }\n\t\t            return IsWritableStreamLocked(this);\n\t\t        }\n\t\t        /**\n\t\t         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n\t\t         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n\t\t         * mechanism of the underlying sink.\n\t\t         *\n\t\t         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n\t\t         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n\t\t         * the stream) if the stream is currently locked.\n\t\t         */\n\t\t        abort(reason = undefined) {\n\t\t            if (!IsWritableStream(this)) {\n\t\t                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n\t\t            }\n\t\t            if (IsWritableStreamLocked(this)) {\n\t\t                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n\t\t            }\n\t\t            return WritableStreamAbort(this, reason);\n\t\t        }\n\t\t        /**\n\t\t         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n\t\t         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n\t\t         *\n\t\t         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n\t\t         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n\t\t         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n\t\t         */\n\t\t        close() {\n\t\t            if (!IsWritableStream(this)) {\n\t\t                return promiseRejectedWith(streamBrandCheckException$2('close'));\n\t\t            }\n\t\t            if (IsWritableStreamLocked(this)) {\n\t\t                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n\t\t            }\n\t\t            if (WritableStreamCloseQueuedOrInFlight(this)) {\n\t\t                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n\t\t            }\n\t\t            return WritableStreamClose(this);\n\t\t        }\n\t\t        /**\n\t\t         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n\t\t         * is locked, no other writer can be acquired until this one is released.\n\t\t         *\n\t\t         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n\t\t         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n\t\t         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n\t\t         */\n\t\t        getWriter() {\n\t\t            if (!IsWritableStream(this)) {\n\t\t                throw streamBrandCheckException$2('getWriter');\n\t\t            }\n\t\t            return AcquireWritableStreamDefaultWriter(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(WritableStream.prototype, {\n\t\t        abort: { enumerable: true },\n\t\t        close: { enumerable: true },\n\t\t        getWriter: { enumerable: true },\n\t\t        locked: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'WritableStream',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the WritableStream.\n\t\t    function AcquireWritableStreamDefaultWriter(stream) {\n\t\t        return new WritableStreamDefaultWriter(stream);\n\t\t    }\n\t\t    // Throws if and only if startAlgorithm throws.\n\t\t    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n\t\t        const stream = Object.create(WritableStream.prototype);\n\t\t        InitializeWritableStream(stream);\n\t\t        const controller = Object.create(WritableStreamDefaultController.prototype);\n\t\t        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n\t\t        return stream;\n\t\t    }\n\t\t    function InitializeWritableStream(stream) {\n\t\t        stream._state = 'writable';\n\t\t        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n\t\t        // 'erroring' or 'errored'. May be set to an undefined value.\n\t\t        stream._storedError = undefined;\n\t\t        stream._writer = undefined;\n\t\t        // Initialize to undefined first because the constructor of the controller checks this\n\t\t        // variable to validate the caller.\n\t\t        stream._writableStreamController = undefined;\n\t\t        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n\t\t        // producer without waiting for the queued writes to finish.\n\t\t        stream._writeRequests = new SimpleQueue();\n\t\t        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n\t\t        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n\t\t        stream._inFlightWriteRequest = undefined;\n\t\t        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n\t\t        // has been detached.\n\t\t        stream._closeRequest = undefined;\n\t\t        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n\t\t        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n\t\t        stream._inFlightCloseRequest = undefined;\n\t\t        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n\t\t        stream._pendingAbortRequest = undefined;\n\t\t        // The backpressure signal set by the controller.\n\t\t        stream._backpressure = false;\n\t\t    }\n\t\t    function IsWritableStream(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof WritableStream;\n\t\t    }\n\t\t    function IsWritableStreamLocked(stream) {\n\t\t        if (stream._writer === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    function WritableStreamAbort(stream, reason) {\n\t\t        var _a;\n\t\t        if (stream._state === 'closed' || stream._state === 'errored') {\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        stream._writableStreamController._abortReason = reason;\n\t\t        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n\t\t        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n\t\t        // but it doesn't know that signaling abort runs author code that might have changed the state.\n\t\t        // Widen the type again by casting to WritableStreamState.\n\t\t        const state = stream._state;\n\t\t        if (state === 'closed' || state === 'errored') {\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        if (stream._pendingAbortRequest !== undefined) {\n\t\t            return stream._pendingAbortRequest._promise;\n\t\t        }\n\t\t        let wasAlreadyErroring = false;\n\t\t        if (state === 'erroring') {\n\t\t            wasAlreadyErroring = true;\n\t\t            // reason will not be used, so don't keep a reference to it.\n\t\t            reason = undefined;\n\t\t        }\n\t\t        const promise = newPromise((resolve, reject) => {\n\t\t            stream._pendingAbortRequest = {\n\t\t                _promise: undefined,\n\t\t                _resolve: resolve,\n\t\t                _reject: reject,\n\t\t                _reason: reason,\n\t\t                _wasAlreadyErroring: wasAlreadyErroring\n\t\t            };\n\t\t        });\n\t\t        stream._pendingAbortRequest._promise = promise;\n\t\t        if (!wasAlreadyErroring) {\n\t\t            WritableStreamStartErroring(stream, reason);\n\t\t        }\n\t\t        return promise;\n\t\t    }\n\t\t    function WritableStreamClose(stream) {\n\t\t        const state = stream._state;\n\t\t        if (state === 'closed' || state === 'errored') {\n\t\t            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n\t\t        }\n\t\t        const promise = newPromise((resolve, reject) => {\n\t\t            const closeRequest = {\n\t\t                _resolve: resolve,\n\t\t                _reject: reject\n\t\t            };\n\t\t            stream._closeRequest = closeRequest;\n\t\t        });\n\t\t        const writer = stream._writer;\n\t\t        if (writer !== undefined && stream._backpressure && state === 'writable') {\n\t\t            defaultWriterReadyPromiseResolve(writer);\n\t\t        }\n\t\t        WritableStreamDefaultControllerClose(stream._writableStreamController);\n\t\t        return promise;\n\t\t    }\n\t\t    // WritableStream API exposed for controllers.\n\t\t    function WritableStreamAddWriteRequest(stream) {\n\t\t        const promise = newPromise((resolve, reject) => {\n\t\t            const writeRequest = {\n\t\t                _resolve: resolve,\n\t\t                _reject: reject\n\t\t            };\n\t\t            stream._writeRequests.push(writeRequest);\n\t\t        });\n\t\t        return promise;\n\t\t    }\n\t\t    function WritableStreamDealWithRejection(stream, error) {\n\t\t        const state = stream._state;\n\t\t        if (state === 'writable') {\n\t\t            WritableStreamStartErroring(stream, error);\n\t\t            return;\n\t\t        }\n\t\t        WritableStreamFinishErroring(stream);\n\t\t    }\n\t\t    function WritableStreamStartErroring(stream, reason) {\n\t\t        const controller = stream._writableStreamController;\n\t\t        stream._state = 'erroring';\n\t\t        stream._storedError = reason;\n\t\t        const writer = stream._writer;\n\t\t        if (writer !== undefined) {\n\t\t            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n\t\t        }\n\t\t        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n\t\t            WritableStreamFinishErroring(stream);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamFinishErroring(stream) {\n\t\t        stream._state = 'errored';\n\t\t        stream._writableStreamController[ErrorSteps]();\n\t\t        const storedError = stream._storedError;\n\t\t        stream._writeRequests.forEach(writeRequest => {\n\t\t            writeRequest._reject(storedError);\n\t\t        });\n\t\t        stream._writeRequests = new SimpleQueue();\n\t\t        if (stream._pendingAbortRequest === undefined) {\n\t\t            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t\t            return;\n\t\t        }\n\t\t        const abortRequest = stream._pendingAbortRequest;\n\t\t        stream._pendingAbortRequest = undefined;\n\t\t        if (abortRequest._wasAlreadyErroring) {\n\t\t            abortRequest._reject(storedError);\n\t\t            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t\t            return;\n\t\t        }\n\t\t        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n\t\t        uponPromise(promise, () => {\n\t\t            abortRequest._resolve();\n\t\t            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t\t        }, (reason) => {\n\t\t            abortRequest._reject(reason);\n\t\t            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t\t        });\n\t\t    }\n\t\t    function WritableStreamFinishInFlightWrite(stream) {\n\t\t        stream._inFlightWriteRequest._resolve(undefined);\n\t\t        stream._inFlightWriteRequest = undefined;\n\t\t    }\n\t\t    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n\t\t        stream._inFlightWriteRequest._reject(error);\n\t\t        stream._inFlightWriteRequest = undefined;\n\t\t        WritableStreamDealWithRejection(stream, error);\n\t\t    }\n\t\t    function WritableStreamFinishInFlightClose(stream) {\n\t\t        stream._inFlightCloseRequest._resolve(undefined);\n\t\t        stream._inFlightCloseRequest = undefined;\n\t\t        const state = stream._state;\n\t\t        if (state === 'erroring') {\n\t\t            // The error was too late to do anything, so it is ignored.\n\t\t            stream._storedError = undefined;\n\t\t            if (stream._pendingAbortRequest !== undefined) {\n\t\t                stream._pendingAbortRequest._resolve();\n\t\t                stream._pendingAbortRequest = undefined;\n\t\t            }\n\t\t        }\n\t\t        stream._state = 'closed';\n\t\t        const writer = stream._writer;\n\t\t        if (writer !== undefined) {\n\t\t            defaultWriterClosedPromiseResolve(writer);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n\t\t        stream._inFlightCloseRequest._reject(error);\n\t\t        stream._inFlightCloseRequest = undefined;\n\t\t        // Never execute sink abort() after sink close().\n\t\t        if (stream._pendingAbortRequest !== undefined) {\n\t\t            stream._pendingAbortRequest._reject(error);\n\t\t            stream._pendingAbortRequest = undefined;\n\t\t        }\n\t\t        WritableStreamDealWithRejection(stream, error);\n\t\t    }\n\t\t    // TODO(ricea): Fix alphabetical order.\n\t\t    function WritableStreamCloseQueuedOrInFlight(stream) {\n\t\t        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    function WritableStreamHasOperationMarkedInFlight(stream) {\n\t\t        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    function WritableStreamMarkCloseRequestInFlight(stream) {\n\t\t        stream._inFlightCloseRequest = stream._closeRequest;\n\t\t        stream._closeRequest = undefined;\n\t\t    }\n\t\t    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n\t\t        stream._inFlightWriteRequest = stream._writeRequests.shift();\n\t\t    }\n\t\t    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n\t\t        if (stream._closeRequest !== undefined) {\n\t\t            stream._closeRequest._reject(stream._storedError);\n\t\t            stream._closeRequest = undefined;\n\t\t        }\n\t\t        const writer = stream._writer;\n\t\t        if (writer !== undefined) {\n\t\t            defaultWriterClosedPromiseReject(writer, stream._storedError);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamUpdateBackpressure(stream, backpressure) {\n\t\t        const writer = stream._writer;\n\t\t        if (writer !== undefined && backpressure !== stream._backpressure) {\n\t\t            if (backpressure) {\n\t\t                defaultWriterReadyPromiseReset(writer);\n\t\t            }\n\t\t            else {\n\t\t                defaultWriterReadyPromiseResolve(writer);\n\t\t            }\n\t\t        }\n\t\t        stream._backpressure = backpressure;\n\t\t    }\n\t\t    /**\n\t\t     * A default writer vended by a {@link WritableStream}.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class WritableStreamDefaultWriter {\n\t\t        constructor(stream) {\n\t\t            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n\t\t            assertWritableStream(stream, 'First parameter');\n\t\t            if (IsWritableStreamLocked(stream)) {\n\t\t                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n\t\t            }\n\t\t            this._ownerWritableStream = stream;\n\t\t            stream._writer = this;\n\t\t            const state = stream._state;\n\t\t            if (state === 'writable') {\n\t\t                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n\t\t                    defaultWriterReadyPromiseInitialize(this);\n\t\t                }\n\t\t                else {\n\t\t                    defaultWriterReadyPromiseInitializeAsResolved(this);\n\t\t                }\n\t\t                defaultWriterClosedPromiseInitialize(this);\n\t\t            }\n\t\t            else if (state === 'erroring') {\n\t\t                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n\t\t                defaultWriterClosedPromiseInitialize(this);\n\t\t            }\n\t\t            else if (state === 'closed') {\n\t\t                defaultWriterReadyPromiseInitializeAsResolved(this);\n\t\t                defaultWriterClosedPromiseInitializeAsResolved(this);\n\t\t            }\n\t\t            else {\n\t\t                const storedError = stream._storedError;\n\t\t                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n\t\t                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n\t\t            }\n\t\t        }\n\t\t        /**\n\t\t         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n\t\t         * the writer\u2019s lock is released before the stream finishes closing.\n\t\t         */\n\t\t        get closed() {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n\t\t            }\n\t\t            return this._closedPromise;\n\t\t        }\n\t\t        /**\n\t\t         * Returns the desired size to fill the stream\u2019s internal queue. It can be negative, if the queue is over-full.\n\t\t         * A producer can use this information to determine the right amount of data to write.\n\t\t         *\n\t\t         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n\t\t         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n\t\t         * the writer\u2019s lock is released.\n\t\t         */\n\t\t        get desiredSize() {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                throw defaultWriterBrandCheckException('desiredSize');\n\t\t            }\n\t\t            if (this._ownerWritableStream === undefined) {\n\t\t                throw defaultWriterLockException('desiredSize');\n\t\t            }\n\t\t            return WritableStreamDefaultWriterGetDesiredSize(this);\n\t\t        }\n\t\t        /**\n\t\t         * Returns a promise that will be fulfilled when the desired size to fill the stream\u2019s internal queue transitions\n\t\t         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n\t\t         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n\t\t         *\n\t\t         * If the stream becomes errored or aborted, or the writer\u2019s lock is released, the returned promise will become\n\t\t         * rejected.\n\t\t         */\n\t\t        get ready() {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n\t\t            }\n\t\t            return this._readyPromise;\n\t\t        }\n\t\t        /**\n\t\t         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n\t\t         */\n\t\t        abort(reason = undefined) {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n\t\t            }\n\t\t            if (this._ownerWritableStream === undefined) {\n\t\t                return promiseRejectedWith(defaultWriterLockException('abort'));\n\t\t            }\n\t\t            return WritableStreamDefaultWriterAbort(this, reason);\n\t\t        }\n\t\t        /**\n\t\t         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n\t\t         */\n\t\t        close() {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n\t\t            }\n\t\t            const stream = this._ownerWritableStream;\n\t\t            if (stream === undefined) {\n\t\t                return promiseRejectedWith(defaultWriterLockException('close'));\n\t\t            }\n\t\t            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n\t\t                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n\t\t            }\n\t\t            return WritableStreamDefaultWriterClose(this);\n\t\t        }\n\t\t        /**\n\t\t         * Releases the writer\u2019s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n\t\t         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n\t\t         * now on; otherwise, the writer will appear closed.\n\t\t         *\n\t\t         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n\t\t         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n\t\t         * It\u2019s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n\t\t         * other producers from writing in an interleaved manner.\n\t\t         */\n\t\t        releaseLock() {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                throw defaultWriterBrandCheckException('releaseLock');\n\t\t            }\n\t\t            const stream = this._ownerWritableStream;\n\t\t            if (stream === undefined) {\n\t\t                return;\n\t\t            }\n\t\t            WritableStreamDefaultWriterRelease(this);\n\t\t        }\n\t\t        write(chunk = undefined) {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n\t\t            }\n\t\t            if (this._ownerWritableStream === undefined) {\n\t\t                return promiseRejectedWith(defaultWriterLockException('write to'));\n\t\t            }\n\t\t            return WritableStreamDefaultWriterWrite(this, chunk);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n\t\t        abort: { enumerable: true },\n\t\t        close: { enumerable: true },\n\t\t        releaseLock: { enumerable: true },\n\t\t        write: { enumerable: true },\n\t\t        closed: { enumerable: true },\n\t\t        desiredSize: { enumerable: true },\n\t\t        ready: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'WritableStreamDefaultWriter',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the WritableStreamDefaultWriter.\n\t\t    function IsWritableStreamDefaultWriter(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof WritableStreamDefaultWriter;\n\t\t    }\n\t\t    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\t\t    function WritableStreamDefaultWriterAbort(writer, reason) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        return WritableStreamAbort(stream, reason);\n\t\t    }\n\t\t    function WritableStreamDefaultWriterClose(writer) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        return WritableStreamClose(stream);\n\t\t    }\n\t\t    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        const state = stream._state;\n\t\t        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        if (state === 'errored') {\n\t\t            return promiseRejectedWith(stream._storedError);\n\t\t        }\n\t\t        return WritableStreamDefaultWriterClose(writer);\n\t\t    }\n\t\t    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n\t\t        if (writer._closedPromiseState === 'pending') {\n\t\t            defaultWriterClosedPromiseReject(writer, error);\n\t\t        }\n\t\t        else {\n\t\t            defaultWriterClosedPromiseResetToRejected(writer, error);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n\t\t        if (writer._readyPromiseState === 'pending') {\n\t\t            defaultWriterReadyPromiseReject(writer, error);\n\t\t        }\n\t\t        else {\n\t\t            defaultWriterReadyPromiseResetToRejected(writer, error);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        const state = stream._state;\n\t\t        if (state === 'errored' || state === 'erroring') {\n\t\t            return null;\n\t\t        }\n\t\t        if (state === 'closed') {\n\t\t            return 0;\n\t\t        }\n\t\t        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n\t\t    }\n\t\t    function WritableStreamDefaultWriterRelease(writer) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n\t\t        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\t\t        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n\t\t        // rejected until afterwards. This means that simply testing state will not work.\n\t\t        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\t\t        stream._writer = undefined;\n\t\t        writer._ownerWritableStream = undefined;\n\t\t    }\n\t\t    function WritableStreamDefaultWriterWrite(writer, chunk) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        const controller = stream._writableStreamController;\n\t\t        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\t\t        if (stream !== writer._ownerWritableStream) {\n\t\t            return promiseRejectedWith(defaultWriterLockException('write to'));\n\t\t        }\n\t\t        const state = stream._state;\n\t\t        if (state === 'errored') {\n\t\t            return promiseRejectedWith(stream._storedError);\n\t\t        }\n\t\t        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n\t\t            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n\t\t        }\n\t\t        if (state === 'erroring') {\n\t\t            return promiseRejectedWith(stream._storedError);\n\t\t        }\n\t\t        const promise = WritableStreamAddWriteRequest(stream);\n\t\t        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\t\t        return promise;\n\t\t    }\n\t\t    const closeSentinel = {};\n\t\t    /**\n\t\t     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class WritableStreamDefaultController {\n\t\t        constructor() {\n\t\t            throw new TypeError('Illegal constructor');\n\t\t        }\n\t\t        /**\n\t\t         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n\t\t         *\n\t\t         * @deprecated\n\t\t         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n\t\t         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n\t\t         */\n\t\t        get abortReason() {\n\t\t            if (!IsWritableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$2('abortReason');\n\t\t            }\n\t\t            return this._abortReason;\n\t\t        }\n\t\t        /**\n\t\t         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n\t\t         */\n\t\t        get signal() {\n\t\t            if (!IsWritableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$2('signal');\n\t\t            }\n\t\t            if (this._abortController === undefined) {\n\t\t                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n\t\t                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n\t\t                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n\t\t                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n\t\t            }\n\t\t            return this._abortController.signal;\n\t\t        }\n\t\t        /**\n\t\t         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n\t\t         *\n\t\t         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n\t\t         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n\t\t         * normal lifecycle of interactions with the underlying sink.\n\t\t         */\n\t\t        error(e = undefined) {\n\t\t            if (!IsWritableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$2('error');\n\t\t            }\n\t\t            const state = this._controlledWritableStream._state;\n\t\t            if (state !== 'writable') {\n\t\t                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n\t\t                // just treat it as a no-op.\n\t\t                return;\n\t\t            }\n\t\t            WritableStreamDefaultControllerError(this, e);\n\t\t        }\n\t\t        /** @internal */\n\t\t        [AbortSteps](reason) {\n\t\t            const result = this._abortAlgorithm(reason);\n\t\t            WritableStreamDefaultControllerClearAlgorithms(this);\n\t\t            return result;\n\t\t        }\n\t\t        /** @internal */\n\t\t        [ErrorSteps]() {\n\t\t            ResetQueue(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(WritableStreamDefaultController.prototype, {\n\t\t        abortReason: { enumerable: true },\n\t\t        signal: { enumerable: true },\n\t\t        error: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'WritableStreamDefaultController',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations implementing interface required by the WritableStream.\n\t\t    function IsWritableStreamDefaultController(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof WritableStreamDefaultController;\n\t\t    }\n\t\t    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n\t\t        controller._controlledWritableStream = stream;\n\t\t        stream._writableStreamController = controller;\n\t\t        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n\t\t        controller._queue = undefined;\n\t\t        controller._queueTotalSize = undefined;\n\t\t        ResetQueue(controller);\n\t\t        controller._abortReason = undefined;\n\t\t        controller._abortController = createAbortController();\n\t\t        controller._started = false;\n\t\t        controller._strategySizeAlgorithm = sizeAlgorithm;\n\t\t        controller._strategyHWM = highWaterMark;\n\t\t        controller._writeAlgorithm = writeAlgorithm;\n\t\t        controller._closeAlgorithm = closeAlgorithm;\n\t\t        controller._abortAlgorithm = abortAlgorithm;\n\t\t        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n\t\t        WritableStreamUpdateBackpressure(stream, backpressure);\n\t\t        const startResult = startAlgorithm();\n\t\t        const startPromise = promiseResolvedWith(startResult);\n\t\t        uponPromise(startPromise, () => {\n\t\t            controller._started = true;\n\t\t            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t\t        }, r => {\n\t\t            controller._started = true;\n\t\t            WritableStreamDealWithRejection(stream, r);\n\t\t        });\n\t\t    }\n\t\t    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n\t\t        const controller = Object.create(WritableStreamDefaultController.prototype);\n\t\t        let startAlgorithm = () => undefined;\n\t\t        let writeAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        let closeAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        let abortAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        if (underlyingSink.start !== undefined) {\n\t\t            startAlgorithm = () => underlyingSink.start(controller);\n\t\t        }\n\t\t        if (underlyingSink.write !== undefined) {\n\t\t            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n\t\t        }\n\t\t        if (underlyingSink.close !== undefined) {\n\t\t            closeAlgorithm = () => underlyingSink.close();\n\t\t        }\n\t\t        if (underlyingSink.abort !== undefined) {\n\t\t            abortAlgorithm = reason => underlyingSink.abort(reason);\n\t\t        }\n\t\t        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n\t\t    }\n\t\t    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n\t\t    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n\t\t        controller._writeAlgorithm = undefined;\n\t\t        controller._closeAlgorithm = undefined;\n\t\t        controller._abortAlgorithm = undefined;\n\t\t        controller._strategySizeAlgorithm = undefined;\n\t\t    }\n\t\t    function WritableStreamDefaultControllerClose(controller) {\n\t\t        EnqueueValueWithSize(controller, closeSentinel, 0);\n\t\t        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t\t    }\n\t\t    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n\t\t        try {\n\t\t            return controller._strategySizeAlgorithm(chunk);\n\t\t        }\n\t\t        catch (chunkSizeE) {\n\t\t            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n\t\t            return 1;\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n\t\t        return controller._strategyHWM - controller._queueTotalSize;\n\t\t    }\n\t\t    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n\t\t        try {\n\t\t            EnqueueValueWithSize(controller, chunk, chunkSize);\n\t\t        }\n\t\t        catch (enqueueE) {\n\t\t            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n\t\t            return;\n\t\t        }\n\t\t        const stream = controller._controlledWritableStream;\n\t\t        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n\t\t            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n\t\t            WritableStreamUpdateBackpressure(stream, backpressure);\n\t\t        }\n\t\t        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t\t    }\n\t\t    // Abstract operations for the WritableStreamDefaultController.\n\t\t    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n\t\t        const stream = controller._controlledWritableStream;\n\t\t        if (!controller._started) {\n\t\t            return;\n\t\t        }\n\t\t        if (stream._inFlightWriteRequest !== undefined) {\n\t\t            return;\n\t\t        }\n\t\t        const state = stream._state;\n\t\t        if (state === 'erroring') {\n\t\t            WritableStreamFinishErroring(stream);\n\t\t            return;\n\t\t        }\n\t\t        if (controller._queue.length === 0) {\n\t\t            return;\n\t\t        }\n\t\t        const value = PeekQueueValue(controller);\n\t\t        if (value === closeSentinel) {\n\t\t            WritableStreamDefaultControllerProcessClose(controller);\n\t\t        }\n\t\t        else {\n\t\t            WritableStreamDefaultControllerProcessWrite(controller, value);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n\t\t        if (controller._controlledWritableStream._state === 'writable') {\n\t\t            WritableStreamDefaultControllerError(controller, error);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamDefaultControllerProcessClose(controller) {\n\t\t        const stream = controller._controlledWritableStream;\n\t\t        WritableStreamMarkCloseRequestInFlight(stream);\n\t\t        DequeueValue(controller);\n\t\t        const sinkClosePromise = controller._closeAlgorithm();\n\t\t        WritableStreamDefaultControllerClearAlgorithms(controller);\n\t\t        uponPromise(sinkClosePromise, () => {\n\t\t            WritableStreamFinishInFlightClose(stream);\n\t\t        }, reason => {\n\t\t            WritableStreamFinishInFlightCloseWithError(stream, reason);\n\t\t        });\n\t\t    }\n\t\t    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n\t\t        const stream = controller._controlledWritableStream;\n\t\t        WritableStreamMarkFirstWriteRequestInFlight(stream);\n\t\t        const sinkWritePromise = controller._writeAlgorithm(chunk);\n\t\t        uponPromise(sinkWritePromise, () => {\n\t\t            WritableStreamFinishInFlightWrite(stream);\n\t\t            const state = stream._state;\n\t\t            DequeueValue(controller);\n\t\t            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n\t\t                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n\t\t                WritableStreamUpdateBackpressure(stream, backpressure);\n\t\t            }\n\t\t            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t\t        }, reason => {\n\t\t            if (stream._state === 'writable') {\n\t\t                WritableStreamDefaultControllerClearAlgorithms(controller);\n\t\t            }\n\t\t            WritableStreamFinishInFlightWriteWithError(stream, reason);\n\t\t        });\n\t\t    }\n\t\t    function WritableStreamDefaultControllerGetBackpressure(controller) {\n\t\t        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n\t\t        return desiredSize <= 0;\n\t\t    }\n\t\t    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\t\t    function WritableStreamDefaultControllerError(controller, error) {\n\t\t        const stream = controller._controlledWritableStream;\n\t\t        WritableStreamDefaultControllerClearAlgorithms(controller);\n\t\t        WritableStreamStartErroring(stream, error);\n\t\t    }\n\t\t    // Helper functions for the WritableStream.\n\t\t    function streamBrandCheckException$2(name) {\n\t\t        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n\t\t    }\n\t\t    // Helper functions for the WritableStreamDefaultController.\n\t\t    function defaultControllerBrandCheckException$2(name) {\n\t\t        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n\t\t    }\n\t\t    // Helper functions for the WritableStreamDefaultWriter.\n\t\t    function defaultWriterBrandCheckException(name) {\n\t\t        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n\t\t    }\n\t\t    function defaultWriterLockException(name) {\n\t\t        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n\t\t    }\n\t\t    function defaultWriterClosedPromiseInitialize(writer) {\n\t\t        writer._closedPromise = newPromise((resolve, reject) => {\n\t\t            writer._closedPromise_resolve = resolve;\n\t\t            writer._closedPromise_reject = reject;\n\t\t            writer._closedPromiseState = 'pending';\n\t\t        });\n\t\t    }\n\t\t    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n\t\t        defaultWriterClosedPromiseInitialize(writer);\n\t\t        defaultWriterClosedPromiseReject(writer, reason);\n\t\t    }\n\t\t    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n\t\t        defaultWriterClosedPromiseInitialize(writer);\n\t\t        defaultWriterClosedPromiseResolve(writer);\n\t\t    }\n\t\t    function defaultWriterClosedPromiseReject(writer, reason) {\n\t\t        if (writer._closedPromise_reject === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        setPromiseIsHandledToTrue(writer._closedPromise);\n\t\t        writer._closedPromise_reject(reason);\n\t\t        writer._closedPromise_resolve = undefined;\n\t\t        writer._closedPromise_reject = undefined;\n\t\t        writer._closedPromiseState = 'rejected';\n\t\t    }\n\t\t    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n\t\t        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n\t\t    }\n\t\t    function defaultWriterClosedPromiseResolve(writer) {\n\t\t        if (writer._closedPromise_resolve === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        writer._closedPromise_resolve(undefined);\n\t\t        writer._closedPromise_resolve = undefined;\n\t\t        writer._closedPromise_reject = undefined;\n\t\t        writer._closedPromiseState = 'resolved';\n\t\t    }\n\t\t    function defaultWriterReadyPromiseInitialize(writer) {\n\t\t        writer._readyPromise = newPromise((resolve, reject) => {\n\t\t            writer._readyPromise_resolve = resolve;\n\t\t            writer._readyPromise_reject = reject;\n\t\t        });\n\t\t        writer._readyPromiseState = 'pending';\n\t\t    }\n\t\t    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n\t\t        defaultWriterReadyPromiseInitialize(writer);\n\t\t        defaultWriterReadyPromiseReject(writer, reason);\n\t\t    }\n\t\t    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n\t\t        defaultWriterReadyPromiseInitialize(writer);\n\t\t        defaultWriterReadyPromiseResolve(writer);\n\t\t    }\n\t\t    function defaultWriterReadyPromiseReject(writer, reason) {\n\t\t        if (writer._readyPromise_reject === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        setPromiseIsHandledToTrue(writer._readyPromise);\n\t\t        writer._readyPromise_reject(reason);\n\t\t        writer._readyPromise_resolve = undefined;\n\t\t        writer._readyPromise_reject = undefined;\n\t\t        writer._readyPromiseState = 'rejected';\n\t\t    }\n\t\t    function defaultWriterReadyPromiseReset(writer) {\n\t\t        defaultWriterReadyPromiseInitialize(writer);\n\t\t    }\n\t\t    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n\t\t        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n\t\t    }\n\t\t    function defaultWriterReadyPromiseResolve(writer) {\n\t\t        if (writer._readyPromise_resolve === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        writer._readyPromise_resolve(undefined);\n\t\t        writer._readyPromise_resolve = undefined;\n\t\t        writer._readyPromise_reject = undefined;\n\t\t        writer._readyPromiseState = 'fulfilled';\n\t\t    }\n\n\t\t    /// <reference lib=\"dom\" />\n\t\t    const NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n\t\t    /// <reference types=\"node\" />\n\t\t    function isDOMExceptionConstructor(ctor) {\n\t\t        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n\t\t            return false;\n\t\t        }\n\t\t        try {\n\t\t            new ctor();\n\t\t            return true;\n\t\t        }\n\t\t        catch (_a) {\n\t\t            return false;\n\t\t        }\n\t\t    }\n\t\t    function createDOMExceptionPolyfill() {\n\t\t        // eslint-disable-next-line no-shadow\n\t\t        const ctor = function DOMException(message, name) {\n\t\t            this.message = message || '';\n\t\t            this.name = name || 'Error';\n\t\t            if (Error.captureStackTrace) {\n\t\t                Error.captureStackTrace(this, this.constructor);\n\t\t            }\n\t\t        };\n\t\t        ctor.prototype = Object.create(Error.prototype);\n\t\t        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n\t\t        return ctor;\n\t\t    }\n\t\t    // eslint-disable-next-line no-redeclare\n\t\t    const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\n\t\t    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n\t\t        const reader = AcquireReadableStreamDefaultReader(source);\n\t\t        const writer = AcquireWritableStreamDefaultWriter(dest);\n\t\t        source._disturbed = true;\n\t\t        let shuttingDown = false;\n\t\t        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n\t\t        let currentWrite = promiseResolvedWith(undefined);\n\t\t        return newPromise((resolve, reject) => {\n\t\t            let abortAlgorithm;\n\t\t            if (signal !== undefined) {\n\t\t                abortAlgorithm = () => {\n\t\t                    const error = new DOMException$1('Aborted', 'AbortError');\n\t\t                    const actions = [];\n\t\t                    if (!preventAbort) {\n\t\t                        actions.push(() => {\n\t\t                            if (dest._state === 'writable') {\n\t\t                                return WritableStreamAbort(dest, error);\n\t\t                            }\n\t\t                            return promiseResolvedWith(undefined);\n\t\t                        });\n\t\t                    }\n\t\t                    if (!preventCancel) {\n\t\t                        actions.push(() => {\n\t\t                            if (source._state === 'readable') {\n\t\t                                return ReadableStreamCancel(source, error);\n\t\t                            }\n\t\t                            return promiseResolvedWith(undefined);\n\t\t                        });\n\t\t                    }\n\t\t                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n\t\t                };\n\t\t                if (signal.aborted) {\n\t\t                    abortAlgorithm();\n\t\t                    return;\n\t\t                }\n\t\t                signal.addEventListener('abort', abortAlgorithm);\n\t\t            }\n\t\t            // Using reader and writer, read all chunks from this and write them to dest\n\t\t            // - Backpressure must be enforced\n\t\t            // - Shutdown must stop all activity\n\t\t            function pipeLoop() {\n\t\t                return newPromise((resolveLoop, rejectLoop) => {\n\t\t                    function next(done) {\n\t\t                        if (done) {\n\t\t                            resolveLoop();\n\t\t                        }\n\t\t                        else {\n\t\t                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n\t\t                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n\t\t                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n\t\t                        }\n\t\t                    }\n\t\t                    next(false);\n\t\t                });\n\t\t            }\n\t\t            function pipeStep() {\n\t\t                if (shuttingDown) {\n\t\t                    return promiseResolvedWith(true);\n\t\t                }\n\t\t                return PerformPromiseThen(writer._readyPromise, () => {\n\t\t                    return newPromise((resolveRead, rejectRead) => {\n\t\t                        ReadableStreamDefaultReaderRead(reader, {\n\t\t                            _chunkSteps: chunk => {\n\t\t                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n\t\t                                resolveRead(false);\n\t\t                            },\n\t\t                            _closeSteps: () => resolveRead(true),\n\t\t                            _errorSteps: rejectRead\n\t\t                        });\n\t\t                    });\n\t\t                });\n\t\t            }\n\t\t            // Errors must be propagated forward\n\t\t            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n\t\t                if (!preventAbort) {\n\t\t                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n\t\t                }\n\t\t                else {\n\t\t                    shutdown(true, storedError);\n\t\t                }\n\t\t            });\n\t\t            // Errors must be propagated backward\n\t\t            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n\t\t                if (!preventCancel) {\n\t\t                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n\t\t                }\n\t\t                else {\n\t\t                    shutdown(true, storedError);\n\t\t                }\n\t\t            });\n\t\t            // Closing must be propagated forward\n\t\t            isOrBecomesClosed(source, reader._closedPromise, () => {\n\t\t                if (!preventClose) {\n\t\t                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n\t\t                }\n\t\t                else {\n\t\t                    shutdown();\n\t\t                }\n\t\t            });\n\t\t            // Closing must be propagated backward\n\t\t            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n\t\t                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\t\t                if (!preventCancel) {\n\t\t                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n\t\t                }\n\t\t                else {\n\t\t                    shutdown(true, destClosed);\n\t\t                }\n\t\t            }\n\t\t            setPromiseIsHandledToTrue(pipeLoop());\n\t\t            function waitForWritesToFinish() {\n\t\t                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n\t\t                // for that too.\n\t\t                const oldCurrentWrite = currentWrite;\n\t\t                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n\t\t            }\n\t\t            function isOrBecomesErrored(stream, promise, action) {\n\t\t                if (stream._state === 'errored') {\n\t\t                    action(stream._storedError);\n\t\t                }\n\t\t                else {\n\t\t                    uponRejection(promise, action);\n\t\t                }\n\t\t            }\n\t\t            function isOrBecomesClosed(stream, promise, action) {\n\t\t                if (stream._state === 'closed') {\n\t\t                    action();\n\t\t                }\n\t\t                else {\n\t\t                    uponFulfillment(promise, action);\n\t\t                }\n\t\t            }\n\t\t            function shutdownWithAction(action, originalIsError, originalError) {\n\t\t                if (shuttingDown) {\n\t\t                    return;\n\t\t                }\n\t\t                shuttingDown = true;\n\t\t                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n\t\t                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n\t\t                }\n\t\t                else {\n\t\t                    doTheRest();\n\t\t                }\n\t\t                function doTheRest() {\n\t\t                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n\t\t                }\n\t\t            }\n\t\t            function shutdown(isError, error) {\n\t\t                if (shuttingDown) {\n\t\t                    return;\n\t\t                }\n\t\t                shuttingDown = true;\n\t\t                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n\t\t                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n\t\t                }\n\t\t                else {\n\t\t                    finalize(isError, error);\n\t\t                }\n\t\t            }\n\t\t            function finalize(isError, error) {\n\t\t                WritableStreamDefaultWriterRelease(writer);\n\t\t                ReadableStreamReaderGenericRelease(reader);\n\t\t                if (signal !== undefined) {\n\t\t                    signal.removeEventListener('abort', abortAlgorithm);\n\t\t                }\n\t\t                if (isError) {\n\t\t                    reject(error);\n\t\t                }\n\t\t                else {\n\t\t                    resolve(undefined);\n\t\t                }\n\t\t            }\n\t\t        });\n\t\t    }\n\n\t\t    /**\n\t\t     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableStreamDefaultController {\n\t\t        constructor() {\n\t\t            throw new TypeError('Illegal constructor');\n\t\t        }\n\t\t        /**\n\t\t         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n\t\t         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n\t\t         */\n\t\t        get desiredSize() {\n\t\t            if (!IsReadableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$1('desiredSize');\n\t\t            }\n\t\t            return ReadableStreamDefaultControllerGetDesiredSize(this);\n\t\t        }\n\t\t        /**\n\t\t         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n\t\t         * the stream, but once those are read, the stream will become closed.\n\t\t         */\n\t\t        close() {\n\t\t            if (!IsReadableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$1('close');\n\t\t            }\n\t\t            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n\t\t                throw new TypeError('The stream is not in a state that permits close');\n\t\t            }\n\t\t            ReadableStreamDefaultControllerClose(this);\n\t\t        }\n\t\t        enqueue(chunk = undefined) {\n\t\t            if (!IsReadableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$1('enqueue');\n\t\t            }\n\t\t            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n\t\t                throw new TypeError('The stream is not in a state that permits enqueue');\n\t\t            }\n\t\t            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n\t\t        }\n\t\t        /**\n\t\t         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n\t\t         */\n\t\t        error(e = undefined) {\n\t\t            if (!IsReadableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$1('error');\n\t\t            }\n\t\t            ReadableStreamDefaultControllerError(this, e);\n\t\t        }\n\t\t        /** @internal */\n\t\t        [CancelSteps](reason) {\n\t\t            ResetQueue(this);\n\t\t            const result = this._cancelAlgorithm(reason);\n\t\t            ReadableStreamDefaultControllerClearAlgorithms(this);\n\t\t            return result;\n\t\t        }\n\t\t        /** @internal */\n\t\t        [PullSteps](readRequest) {\n\t\t            const stream = this._controlledReadableStream;\n\t\t            if (this._queue.length > 0) {\n\t\t                const chunk = DequeueValue(this);\n\t\t                if (this._closeRequested && this._queue.length === 0) {\n\t\t                    ReadableStreamDefaultControllerClearAlgorithms(this);\n\t\t                    ReadableStreamClose(stream);\n\t\t                }\n\t\t                else {\n\t\t                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n\t\t                }\n\t\t                readRequest._chunkSteps(chunk);\n\t\t            }\n\t\t            else {\n\t\t                ReadableStreamAddReadRequest(stream, readRequest);\n\t\t                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n\t\t            }\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n\t\t        close: { enumerable: true },\n\t\t        enqueue: { enumerable: true },\n\t\t        error: { enumerable: true },\n\t\t        desiredSize: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableStreamDefaultController',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the ReadableStreamDefaultController.\n\t\t    function IsReadableStreamDefaultController(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableStreamDefaultController;\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n\t\t        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n\t\t        if (!shouldPull) {\n\t\t            return;\n\t\t        }\n\t\t        if (controller._pulling) {\n\t\t            controller._pullAgain = true;\n\t\t            return;\n\t\t        }\n\t\t        controller._pulling = true;\n\t\t        const pullPromise = controller._pullAlgorithm();\n\t\t        uponPromise(pullPromise, () => {\n\t\t            controller._pulling = false;\n\t\t            if (controller._pullAgain) {\n\t\t                controller._pullAgain = false;\n\t\t                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t\t            }\n\t\t        }, e => {\n\t\t            ReadableStreamDefaultControllerError(controller, e);\n\t\t        });\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n\t\t        const stream = controller._controlledReadableStream;\n\t\t        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!controller._started) {\n\t\t            return false;\n\t\t        }\n\t\t        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t\t            return true;\n\t\t        }\n\t\t        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n\t\t        if (desiredSize > 0) {\n\t\t            return true;\n\t\t        }\n\t\t        return false;\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n\t\t        controller._pullAlgorithm = undefined;\n\t\t        controller._cancelAlgorithm = undefined;\n\t\t        controller._strategySizeAlgorithm = undefined;\n\t\t    }\n\t\t    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\t\t    function ReadableStreamDefaultControllerClose(controller) {\n\t\t        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n\t\t            return;\n\t\t        }\n\t\t        const stream = controller._controlledReadableStream;\n\t\t        controller._closeRequested = true;\n\t\t        if (controller._queue.length === 0) {\n\t\t            ReadableStreamDefaultControllerClearAlgorithms(controller);\n\t\t            ReadableStreamClose(stream);\n\t\t        }\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n\t\t        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n\t\t            return;\n\t\t        }\n\t\t        const stream = controller._controlledReadableStream;\n\t\t        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t\t            ReadableStreamFulfillReadRequest(stream, chunk, false);\n\t\t        }\n\t\t        else {\n\t\t            let chunkSize;\n\t\t            try {\n\t\t                chunkSize = controller._strategySizeAlgorithm(chunk);\n\t\t            }\n\t\t            catch (chunkSizeE) {\n\t\t                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n\t\t                throw chunkSizeE;\n\t\t            }\n\t\t            try {\n\t\t                EnqueueValueWithSize(controller, chunk, chunkSize);\n\t\t            }\n\t\t            catch (enqueueE) {\n\t\t                ReadableStreamDefaultControllerError(controller, enqueueE);\n\t\t                throw enqueueE;\n\t\t            }\n\t\t        }\n\t\t        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerError(controller, e) {\n\t\t        const stream = controller._controlledReadableStream;\n\t\t        if (stream._state !== 'readable') {\n\t\t            return;\n\t\t        }\n\t\t        ResetQueue(controller);\n\t\t        ReadableStreamDefaultControllerClearAlgorithms(controller);\n\t\t        ReadableStreamError(stream, e);\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n\t\t        const state = controller._controlledReadableStream._state;\n\t\t        if (state === 'errored') {\n\t\t            return null;\n\t\t        }\n\t\t        if (state === 'closed') {\n\t\t            return 0;\n\t\t        }\n\t\t        return controller._strategyHWM - controller._queueTotalSize;\n\t\t    }\n\t\t    // This is used in the implementation of TransformStream.\n\t\t    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n\t\t        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n\t\t        const state = controller._controlledReadableStream._state;\n\t\t        if (!controller._closeRequested && state === 'readable') {\n\t\t            return true;\n\t\t        }\n\t\t        return false;\n\t\t    }\n\t\t    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n\t\t        controller._controlledReadableStream = stream;\n\t\t        controller._queue = undefined;\n\t\t        controller._queueTotalSize = undefined;\n\t\t        ResetQueue(controller);\n\t\t        controller._started = false;\n\t\t        controller._closeRequested = false;\n\t\t        controller._pullAgain = false;\n\t\t        controller._pulling = false;\n\t\t        controller._strategySizeAlgorithm = sizeAlgorithm;\n\t\t        controller._strategyHWM = highWaterMark;\n\t\t        controller._pullAlgorithm = pullAlgorithm;\n\t\t        controller._cancelAlgorithm = cancelAlgorithm;\n\t\t        stream._readableStreamController = controller;\n\t\t        const startResult = startAlgorithm();\n\t\t        uponPromise(promiseResolvedWith(startResult), () => {\n\t\t            controller._started = true;\n\t\t            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t\t        }, r => {\n\t\t            ReadableStreamDefaultControllerError(controller, r);\n\t\t        });\n\t\t    }\n\t\t    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n\t\t        const controller = Object.create(ReadableStreamDefaultController.prototype);\n\t\t        let startAlgorithm = () => undefined;\n\t\t        let pullAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        if (underlyingSource.start !== undefined) {\n\t\t            startAlgorithm = () => underlyingSource.start(controller);\n\t\t        }\n\t\t        if (underlyingSource.pull !== undefined) {\n\t\t            pullAlgorithm = () => underlyingSource.pull(controller);\n\t\t        }\n\t\t        if (underlyingSource.cancel !== undefined) {\n\t\t            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n\t\t        }\n\t\t        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n\t\t    }\n\t\t    // Helper functions for the ReadableStreamDefaultController.\n\t\t    function defaultControllerBrandCheckException$1(name) {\n\t\t        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n\t\t    }\n\n\t\t    function ReadableStreamTee(stream, cloneForBranch2) {\n\t\t        if (IsReadableByteStreamController(stream._readableStreamController)) {\n\t\t            return ReadableByteStreamTee(stream);\n\t\t        }\n\t\t        return ReadableStreamDefaultTee(stream);\n\t\t    }\n\t\t    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n\t\t        const reader = AcquireReadableStreamDefaultReader(stream);\n\t\t        let reading = false;\n\t\t        let readAgain = false;\n\t\t        let canceled1 = false;\n\t\t        let canceled2 = false;\n\t\t        let reason1;\n\t\t        let reason2;\n\t\t        let branch1;\n\t\t        let branch2;\n\t\t        let resolveCancelPromise;\n\t\t        const cancelPromise = newPromise(resolve => {\n\t\t            resolveCancelPromise = resolve;\n\t\t        });\n\t\t        function pullAlgorithm() {\n\t\t            if (reading) {\n\t\t                readAgain = true;\n\t\t                return promiseResolvedWith(undefined);\n\t\t            }\n\t\t            reading = true;\n\t\t            const readRequest = {\n\t\t                _chunkSteps: chunk => {\n\t\t                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n\t\t                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n\t\t                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n\t\t                    queueMicrotask(() => {\n\t\t                        readAgain = false;\n\t\t                        const chunk1 = chunk;\n\t\t                        const chunk2 = chunk;\n\t\t                        // There is no way to access the cloning code right now in the reference implementation.\n\t\t                        // If we add one then we'll need an implementation for serializable objects.\n\t\t                        // if (!canceled2 && cloneForBranch2) {\n\t\t                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n\t\t                        // }\n\t\t                        if (!canceled1) {\n\t\t                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n\t\t                        }\n\t\t                        if (!canceled2) {\n\t\t                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n\t\t                        }\n\t\t                        reading = false;\n\t\t                        if (readAgain) {\n\t\t                            pullAlgorithm();\n\t\t                        }\n\t\t                    });\n\t\t                },\n\t\t                _closeSteps: () => {\n\t\t                    reading = false;\n\t\t                    if (!canceled1) {\n\t\t                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n\t\t                    }\n\t\t                    if (!canceled2) {\n\t\t                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n\t\t                    }\n\t\t                    if (!canceled1 || !canceled2) {\n\t\t                        resolveCancelPromise(undefined);\n\t\t                    }\n\t\t                },\n\t\t                _errorSteps: () => {\n\t\t                    reading = false;\n\t\t                }\n\t\t            };\n\t\t            ReadableStreamDefaultReaderRead(reader, readRequest);\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        function cancel1Algorithm(reason) {\n\t\t            canceled1 = true;\n\t\t            reason1 = reason;\n\t\t            if (canceled2) {\n\t\t                const compositeReason = CreateArrayFromList([reason1, reason2]);\n\t\t                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t\t                resolveCancelPromise(cancelResult);\n\t\t            }\n\t\t            return cancelPromise;\n\t\t        }\n\t\t        function cancel2Algorithm(reason) {\n\t\t            canceled2 = true;\n\t\t            reason2 = reason;\n\t\t            if (canceled1) {\n\t\t                const compositeReason = CreateArrayFromList([reason1, reason2]);\n\t\t                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t\t                resolveCancelPromise(cancelResult);\n\t\t            }\n\t\t            return cancelPromise;\n\t\t        }\n\t\t        function startAlgorithm() {\n\t\t            // do nothing\n\t\t        }\n\t\t        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n\t\t        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n\t\t        uponRejection(reader._closedPromise, (r) => {\n\t\t            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n\t\t            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n\t\t            if (!canceled1 || !canceled2) {\n\t\t                resolveCancelPromise(undefined);\n\t\t            }\n\t\t        });\n\t\t        return [branch1, branch2];\n\t\t    }\n\t\t    function ReadableByteStreamTee(stream) {\n\t\t        let reader = AcquireReadableStreamDefaultReader(stream);\n\t\t        let reading = false;\n\t\t        let readAgainForBranch1 = false;\n\t\t        let readAgainForBranch2 = false;\n\t\t        let canceled1 = false;\n\t\t        let canceled2 = false;\n\t\t        let reason1;\n\t\t        let reason2;\n\t\t        let branch1;\n\t\t        let branch2;\n\t\t        let resolveCancelPromise;\n\t\t        const cancelPromise = newPromise(resolve => {\n\t\t            resolveCancelPromise = resolve;\n\t\t        });\n\t\t        function forwardReaderError(thisReader) {\n\t\t            uponRejection(thisReader._closedPromise, r => {\n\t\t                if (thisReader !== reader) {\n\t\t                    return;\n\t\t                }\n\t\t                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n\t\t                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n\t\t                if (!canceled1 || !canceled2) {\n\t\t                    resolveCancelPromise(undefined);\n\t\t                }\n\t\t            });\n\t\t        }\n\t\t        function pullWithDefaultReader() {\n\t\t            if (IsReadableStreamBYOBReader(reader)) {\n\t\t                ReadableStreamReaderGenericRelease(reader);\n\t\t                reader = AcquireReadableStreamDefaultReader(stream);\n\t\t                forwardReaderError(reader);\n\t\t            }\n\t\t            const readRequest = {\n\t\t                _chunkSteps: chunk => {\n\t\t                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n\t\t                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n\t\t                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n\t\t                    queueMicrotask(() => {\n\t\t                        readAgainForBranch1 = false;\n\t\t                        readAgainForBranch2 = false;\n\t\t                        const chunk1 = chunk;\n\t\t                        let chunk2 = chunk;\n\t\t                        if (!canceled1 && !canceled2) {\n\t\t                            try {\n\t\t                                chunk2 = CloneAsUint8Array(chunk);\n\t\t                            }\n\t\t                            catch (cloneE) {\n\t\t                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n\t\t                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n\t\t                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n\t\t                                return;\n\t\t                            }\n\t\t                        }\n\t\t                        if (!canceled1) {\n\t\t                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n\t\t                        }\n\t\t                        if (!canceled2) {\n\t\t                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n\t\t                        }\n\t\t                        reading = false;\n\t\t                        if (readAgainForBranch1) {\n\t\t                            pull1Algorithm();\n\t\t                        }\n\t\t                        else if (readAgainForBranch2) {\n\t\t                            pull2Algorithm();\n\t\t                        }\n\t\t                    });\n\t\t                },\n\t\t                _closeSteps: () => {\n\t\t                    reading = false;\n\t\t                    if (!canceled1) {\n\t\t                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n\t\t                    }\n\t\t                    if (!canceled2) {\n\t\t                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n\t\t                    }\n\t\t                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n\t\t                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n\t\t                    }\n\t\t                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n\t\t                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n\t\t                    }\n\t\t                    if (!canceled1 || !canceled2) {\n\t\t                        resolveCancelPromise(undefined);\n\t\t                    }\n\t\t                },\n\t\t                _errorSteps: () => {\n\t\t                    reading = false;\n\t\t                }\n\t\t            };\n\t\t            ReadableStreamDefaultReaderRead(reader, readRequest);\n\t\t        }\n\t\t        function pullWithBYOBReader(view, forBranch2) {\n\t\t            if (IsReadableStreamDefaultReader(reader)) {\n\t\t                ReadableStreamReaderGenericRelease(reader);\n\t\t                reader = AcquireReadableStreamBYOBReader(stream);\n\t\t                forwardReaderError(reader);\n\t\t            }\n\t\t            const byobBranch = forBranch2 ? branch2 : branch1;\n\t\t            const otherBranch = forBranch2 ? branch1 : branch2;\n\t\t            const readIntoRequest = {\n\t\t                _chunkSteps: chunk => {\n\t\t                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n\t\t                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n\t\t                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n\t\t                    queueMicrotask(() => {\n\t\t                        readAgainForBranch1 = false;\n\t\t                        readAgainForBranch2 = false;\n\t\t                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n\t\t                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\t\t                        if (!otherCanceled) {\n\t\t                            let clonedChunk;\n\t\t                            try {\n\t\t                                clonedChunk = CloneAsUint8Array(chunk);\n\t\t                            }\n\t\t                            catch (cloneE) {\n\t\t                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n\t\t                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n\t\t                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n\t\t                                return;\n\t\t                            }\n\t\t                            if (!byobCanceled) {\n\t\t                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n\t\t                            }\n\t\t                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n\t\t                        }\n\t\t                        else if (!byobCanceled) {\n\t\t                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n\t\t                        }\n\t\t                        reading = false;\n\t\t                        if (readAgainForBranch1) {\n\t\t                            pull1Algorithm();\n\t\t                        }\n\t\t                        else if (readAgainForBranch2) {\n\t\t                            pull2Algorithm();\n\t\t                        }\n\t\t                    });\n\t\t                },\n\t\t                _closeSteps: chunk => {\n\t\t                    reading = false;\n\t\t                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n\t\t                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\t\t                    if (!byobCanceled) {\n\t\t                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n\t\t                    }\n\t\t                    if (!otherCanceled) {\n\t\t                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n\t\t                    }\n\t\t                    if (chunk !== undefined) {\n\t\t                        if (!byobCanceled) {\n\t\t                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n\t\t                        }\n\t\t                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n\t\t                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n\t\t                        }\n\t\t                    }\n\t\t                    if (!byobCanceled || !otherCanceled) {\n\t\t                        resolveCancelPromise(undefined);\n\t\t                    }\n\t\t                },\n\t\t                _errorSteps: () => {\n\t\t                    reading = false;\n\t\t                }\n\t\t            };\n\t\t            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n\t\t        }\n\t\t        function pull1Algorithm() {\n\t\t            if (reading) {\n\t\t                readAgainForBranch1 = true;\n\t\t                return promiseResolvedWith(undefined);\n\t\t            }\n\t\t            reading = true;\n\t\t            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n\t\t            if (byobRequest === null) {\n\t\t                pullWithDefaultReader();\n\t\t            }\n\t\t            else {\n\t\t                pullWithBYOBReader(byobRequest._view, false);\n\t\t            }\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        function pull2Algorithm() {\n\t\t            if (reading) {\n\t\t                readAgainForBranch2 = true;\n\t\t                return promiseResolvedWith(undefined);\n\t\t            }\n\t\t            reading = true;\n\t\t            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n\t\t            if (byobRequest === null) {\n\t\t                pullWithDefaultReader();\n\t\t            }\n\t\t            else {\n\t\t                pullWithBYOBReader(byobRequest._view, true);\n\t\t            }\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        function cancel1Algorithm(reason) {\n\t\t            canceled1 = true;\n\t\t            reason1 = reason;\n\t\t            if (canceled2) {\n\t\t                const compositeReason = CreateArrayFromList([reason1, reason2]);\n\t\t                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t\t                resolveCancelPromise(cancelResult);\n\t\t            }\n\t\t            return cancelPromise;\n\t\t        }\n\t\t        function cancel2Algorithm(reason) {\n\t\t            canceled2 = true;\n\t\t            reason2 = reason;\n\t\t            if (canceled1) {\n\t\t                const compositeReason = CreateArrayFromList([reason1, reason2]);\n\t\t                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t\t                resolveCancelPromise(cancelResult);\n\t\t            }\n\t\t            return cancelPromise;\n\t\t        }\n\t\t        function startAlgorithm() {\n\t\t            return;\n\t\t        }\n\t\t        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n\t\t        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n\t\t        forwardReaderError(reader);\n\t\t        return [branch1, branch2];\n\t\t    }\n\n\t\t    function convertUnderlyingDefaultOrByteSource(source, context) {\n\t\t        assertDictionary(source, context);\n\t\t        const original = source;\n\t\t        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n\t\t        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n\t\t        const pull = original === null || original === void 0 ? void 0 : original.pull;\n\t\t        const start = original === null || original === void 0 ? void 0 : original.start;\n\t\t        const type = original === null || original === void 0 ? void 0 : original.type;\n\t\t        return {\n\t\t            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n\t\t                undefined :\n\t\t                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n\t\t            cancel: cancel === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n\t\t            pull: pull === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n\t\t            start: start === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n\t\t            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n\t\t        };\n\t\t    }\n\t\t    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (reason) => promiseCall(fn, original, [reason]);\n\t\t    }\n\t\t    function convertUnderlyingSourcePullCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (controller) => promiseCall(fn, original, [controller]);\n\t\t    }\n\t\t    function convertUnderlyingSourceStartCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (controller) => reflectCall(fn, original, [controller]);\n\t\t    }\n\t\t    function convertReadableStreamType(type, context) {\n\t\t        type = `${type}`;\n\t\t        if (type !== 'bytes') {\n\t\t            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n\t\t        }\n\t\t        return type;\n\t\t    }\n\n\t\t    function convertReaderOptions(options, context) {\n\t\t        assertDictionary(options, context);\n\t\t        const mode = options === null || options === void 0 ? void 0 : options.mode;\n\t\t        return {\n\t\t            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n\t\t        };\n\t\t    }\n\t\t    function convertReadableStreamReaderMode(mode, context) {\n\t\t        mode = `${mode}`;\n\t\t        if (mode !== 'byob') {\n\t\t            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n\t\t        }\n\t\t        return mode;\n\t\t    }\n\n\t\t    function convertIteratorOptions(options, context) {\n\t\t        assertDictionary(options, context);\n\t\t        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n\t\t        return { preventCancel: Boolean(preventCancel) };\n\t\t    }\n\n\t\t    function convertPipeOptions(options, context) {\n\t\t        assertDictionary(options, context);\n\t\t        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n\t\t        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n\t\t        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n\t\t        const signal = options === null || options === void 0 ? void 0 : options.signal;\n\t\t        if (signal !== undefined) {\n\t\t            assertAbortSignal(signal, `${context} has member 'signal' that`);\n\t\t        }\n\t\t        return {\n\t\t            preventAbort: Boolean(preventAbort),\n\t\t            preventCancel: Boolean(preventCancel),\n\t\t            preventClose: Boolean(preventClose),\n\t\t            signal\n\t\t        };\n\t\t    }\n\t\t    function assertAbortSignal(signal, context) {\n\t\t        if (!isAbortSignal(signal)) {\n\t\t            throw new TypeError(`${context} is not an AbortSignal.`);\n\t\t        }\n\t\t    }\n\n\t\t    function convertReadableWritablePair(pair, context) {\n\t\t        assertDictionary(pair, context);\n\t\t        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n\t\t        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n\t\t        assertReadableStream(readable, `${context} has member 'readable' that`);\n\t\t        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n\t\t        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n\t\t        assertWritableStream(writable, `${context} has member 'writable' that`);\n\t\t        return { readable, writable };\n\t\t    }\n\n\t\t    /**\n\t\t     * A readable stream represents a source of data, from which you can read.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableStream {\n\t\t        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n\t\t            if (rawUnderlyingSource === undefined) {\n\t\t                rawUnderlyingSource = null;\n\t\t            }\n\t\t            else {\n\t\t                assertObject(rawUnderlyingSource, 'First parameter');\n\t\t            }\n\t\t            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n\t\t            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n\t\t            InitializeReadableStream(this);\n\t\t            if (underlyingSource.type === 'bytes') {\n\t\t                if (strategy.size !== undefined) {\n\t\t                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n\t\t                }\n\t\t                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n\t\t                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n\t\t            }\n\t\t            else {\n\t\t                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n\t\t                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n\t\t                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n\t\t            }\n\t\t        }\n\t\t        /**\n\t\t         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n\t\t         */\n\t\t        get locked() {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                throw streamBrandCheckException$1('locked');\n\t\t            }\n\t\t            return IsReadableStreamLocked(this);\n\t\t        }\n\t\t        /**\n\t\t         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n\t\t         *\n\t\t         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n\t\t         * method, which might or might not use it.\n\t\t         */\n\t\t        cancel(reason = undefined) {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n\t\t            }\n\t\t            if (IsReadableStreamLocked(this)) {\n\t\t                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n\t\t            }\n\t\t            return ReadableStreamCancel(this, reason);\n\t\t        }\n\t\t        getReader(rawOptions = undefined) {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                throw streamBrandCheckException$1('getReader');\n\t\t            }\n\t\t            const options = convertReaderOptions(rawOptions, 'First parameter');\n\t\t            if (options.mode === undefined) {\n\t\t                return AcquireReadableStreamDefaultReader(this);\n\t\t            }\n\t\t            return AcquireReadableStreamBYOBReader(this);\n\t\t        }\n\t\t        pipeThrough(rawTransform, rawOptions = {}) {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                throw streamBrandCheckException$1('pipeThrough');\n\t\t            }\n\t\t            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n\t\t            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n\t\t            const options = convertPipeOptions(rawOptions, 'Second parameter');\n\t\t            if (IsReadableStreamLocked(this)) {\n\t\t                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n\t\t            }\n\t\t            if (IsWritableStreamLocked(transform.writable)) {\n\t\t                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n\t\t            }\n\t\t            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n\t\t            setPromiseIsHandledToTrue(promise);\n\t\t            return transform.readable;\n\t\t        }\n\t\t        pipeTo(destination, rawOptions = {}) {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n\t\t            }\n\t\t            if (destination === undefined) {\n\t\t                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n\t\t            }\n\t\t            if (!IsWritableStream(destination)) {\n\t\t                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n\t\t            }\n\t\t            let options;\n\t\t            try {\n\t\t                options = convertPipeOptions(rawOptions, 'Second parameter');\n\t\t            }\n\t\t            catch (e) {\n\t\t                return promiseRejectedWith(e);\n\t\t            }\n\t\t            if (IsReadableStreamLocked(this)) {\n\t\t                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n\t\t            }\n\t\t            if (IsWritableStreamLocked(destination)) {\n\t\t                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n\t\t            }\n\t\t            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n\t\t        }\n\t\t        /**\n\t\t         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n\t\t         * new {@link ReadableStream} instances.\n\t\t         *\n\t\t         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n\t\t         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n\t\t         * propagated to the stream's underlying source.\n\t\t         *\n\t\t         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n\t\t         * this could allow interference between the two branches.\n\t\t         */\n\t\t        tee() {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                throw streamBrandCheckException$1('tee');\n\t\t            }\n\t\t            const branches = ReadableStreamTee(this);\n\t\t            return CreateArrayFromList(branches);\n\t\t        }\n\t\t        values(rawOptions = undefined) {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                throw streamBrandCheckException$1('values');\n\t\t            }\n\t\t            const options = convertIteratorOptions(rawOptions, 'First parameter');\n\t\t            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableStream.prototype, {\n\t\t        cancel: { enumerable: true },\n\t\t        getReader: { enumerable: true },\n\t\t        pipeThrough: { enumerable: true },\n\t\t        pipeTo: { enumerable: true },\n\t\t        tee: { enumerable: true },\n\t\t        values: { enumerable: true },\n\t\t        locked: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableStream',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n\t\t        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n\t\t            value: ReadableStream.prototype.values,\n\t\t            writable: true,\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the ReadableStream.\n\t\t    // Throws if and only if startAlgorithm throws.\n\t\t    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n\t\t        const stream = Object.create(ReadableStream.prototype);\n\t\t        InitializeReadableStream(stream);\n\t\t        const controller = Object.create(ReadableStreamDefaultController.prototype);\n\t\t        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n\t\t        return stream;\n\t\t    }\n\t\t    // Throws if and only if startAlgorithm throws.\n\t\t    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n\t\t        const stream = Object.create(ReadableStream.prototype);\n\t\t        InitializeReadableStream(stream);\n\t\t        const controller = Object.create(ReadableByteStreamController.prototype);\n\t\t        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n\t\t        return stream;\n\t\t    }\n\t\t    function InitializeReadableStream(stream) {\n\t\t        stream._state = 'readable';\n\t\t        stream._reader = undefined;\n\t\t        stream._storedError = undefined;\n\t\t        stream._disturbed = false;\n\t\t    }\n\t\t    function IsReadableStream(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableStream;\n\t\t    }\n\t\t    function IsReadableStreamLocked(stream) {\n\t\t        if (stream._reader === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    // ReadableStream API exposed for controllers.\n\t\t    function ReadableStreamCancel(stream, reason) {\n\t\t        stream._disturbed = true;\n\t\t        if (stream._state === 'closed') {\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        if (stream._state === 'errored') {\n\t\t            return promiseRejectedWith(stream._storedError);\n\t\t        }\n\t\t        ReadableStreamClose(stream);\n\t\t        const reader = stream._reader;\n\t\t        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n\t\t            reader._readIntoRequests.forEach(readIntoRequest => {\n\t\t                readIntoRequest._closeSteps(undefined);\n\t\t            });\n\t\t            reader._readIntoRequests = new SimpleQueue();\n\t\t        }\n\t\t        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n\t\t        return transformPromiseWith(sourceCancelPromise, noop);\n\t\t    }\n\t\t    function ReadableStreamClose(stream) {\n\t\t        stream._state = 'closed';\n\t\t        const reader = stream._reader;\n\t\t        if (reader === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        defaultReaderClosedPromiseResolve(reader);\n\t\t        if (IsReadableStreamDefaultReader(reader)) {\n\t\t            reader._readRequests.forEach(readRequest => {\n\t\t                readRequest._closeSteps();\n\t\t            });\n\t\t            reader._readRequests = new SimpleQueue();\n\t\t        }\n\t\t    }\n\t\t    function ReadableStreamError(stream, e) {\n\t\t        stream._state = 'errored';\n\t\t        stream._storedError = e;\n\t\t        const reader = stream._reader;\n\t\t        if (reader === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        defaultReaderClosedPromiseReject(reader, e);\n\t\t        if (IsReadableStreamDefaultReader(reader)) {\n\t\t            reader._readRequests.forEach(readRequest => {\n\t\t                readRequest._errorSteps(e);\n\t\t            });\n\t\t            reader._readRequests = new SimpleQueue();\n\t\t        }\n\t\t        else {\n\t\t            reader._readIntoRequests.forEach(readIntoRequest => {\n\t\t                readIntoRequest._errorSteps(e);\n\t\t            });\n\t\t            reader._readIntoRequests = new SimpleQueue();\n\t\t        }\n\t\t    }\n\t\t    // Helper functions for the ReadableStream.\n\t\t    function streamBrandCheckException$1(name) {\n\t\t        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n\t\t    }\n\n\t\t    function convertQueuingStrategyInit(init, context) {\n\t\t        assertDictionary(init, context);\n\t\t        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n\t\t        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n\t\t        return {\n\t\t            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n\t\t        };\n\t\t    }\n\n\t\t    // The size function must not have a prototype property nor be a constructor\n\t\t    const byteLengthSizeFunction = (chunk) => {\n\t\t        return chunk.byteLength;\n\t\t    };\n\t\t    try {\n\t\t        Object.defineProperty(byteLengthSizeFunction, 'name', {\n\t\t            value: 'size',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    catch (_a) {\n\t\t        // This property is non-configurable in older browsers, so ignore if this throws.\n\t\t        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n\t\t    }\n\t\t    /**\n\t\t     * A queuing strategy that counts the number of bytes in each chunk.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ByteLengthQueuingStrategy {\n\t\t        constructor(options) {\n\t\t            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n\t\t            options = convertQueuingStrategyInit(options, 'First parameter');\n\t\t            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n\t\t        }\n\t\t        /**\n\t\t         * Returns the high water mark provided to the constructor.\n\t\t         */\n\t\t        get highWaterMark() {\n\t\t            if (!IsByteLengthQueuingStrategy(this)) {\n\t\t                throw byteLengthBrandCheckException('highWaterMark');\n\t\t            }\n\t\t            return this._byteLengthQueuingStrategyHighWaterMark;\n\t\t        }\n\t\t        /**\n\t\t         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n\t\t         */\n\t\t        get size() {\n\t\t            if (!IsByteLengthQueuingStrategy(this)) {\n\t\t                throw byteLengthBrandCheckException('size');\n\t\t            }\n\t\t            return byteLengthSizeFunction;\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n\t\t        highWaterMark: { enumerable: true },\n\t\t        size: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ByteLengthQueuingStrategy',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Helper functions for the ByteLengthQueuingStrategy.\n\t\t    function byteLengthBrandCheckException(name) {\n\t\t        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n\t\t    }\n\t\t    function IsByteLengthQueuingStrategy(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ByteLengthQueuingStrategy;\n\t\t    }\n\n\t\t    // The size function must not have a prototype property nor be a constructor\n\t\t    const countSizeFunction = () => {\n\t\t        return 1;\n\t\t    };\n\t\t    try {\n\t\t        Object.defineProperty(countSizeFunction, 'name', {\n\t\t            value: 'size',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    catch (_a) {\n\t\t        // This property is non-configurable in older browsers, so ignore if this throws.\n\t\t        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n\t\t    }\n\t\t    /**\n\t\t     * A queuing strategy that counts the number of chunks.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class CountQueuingStrategy {\n\t\t        constructor(options) {\n\t\t            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n\t\t            options = convertQueuingStrategyInit(options, 'First parameter');\n\t\t            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n\t\t        }\n\t\t        /**\n\t\t         * Returns the high water mark provided to the constructor.\n\t\t         */\n\t\t        get highWaterMark() {\n\t\t            if (!IsCountQueuingStrategy(this)) {\n\t\t                throw countBrandCheckException('highWaterMark');\n\t\t            }\n\t\t            return this._countQueuingStrategyHighWaterMark;\n\t\t        }\n\t\t        /**\n\t\t         * Measures the size of `chunk` by always returning 1.\n\t\t         * This ensures that the total queue size is a count of the number of chunks in the queue.\n\t\t         */\n\t\t        get size() {\n\t\t            if (!IsCountQueuingStrategy(this)) {\n\t\t                throw countBrandCheckException('size');\n\t\t            }\n\t\t            return countSizeFunction;\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(CountQueuingStrategy.prototype, {\n\t\t        highWaterMark: { enumerable: true },\n\t\t        size: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'CountQueuingStrategy',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Helper functions for the CountQueuingStrategy.\n\t\t    function countBrandCheckException(name) {\n\t\t        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n\t\t    }\n\t\t    function IsCountQueuingStrategy(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof CountQueuingStrategy;\n\t\t    }\n\n\t\t    function convertTransformer(original, context) {\n\t\t        assertDictionary(original, context);\n\t\t        const flush = original === null || original === void 0 ? void 0 : original.flush;\n\t\t        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n\t\t        const start = original === null || original === void 0 ? void 0 : original.start;\n\t\t        const transform = original === null || original === void 0 ? void 0 : original.transform;\n\t\t        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n\t\t        return {\n\t\t            flush: flush === undefined ?\n\t\t                undefined :\n\t\t                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n\t\t            readableType,\n\t\t            start: start === undefined ?\n\t\t                undefined :\n\t\t                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n\t\t            transform: transform === undefined ?\n\t\t                undefined :\n\t\t                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n\t\t            writableType\n\t\t        };\n\t\t    }\n\t\t    function convertTransformerFlushCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (controller) => promiseCall(fn, original, [controller]);\n\t\t    }\n\t\t    function convertTransformerStartCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (controller) => reflectCall(fn, original, [controller]);\n\t\t    }\n\t\t    function convertTransformerTransformCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n\t\t    }\n\n\t\t    // Class TransformStream\n\t\t    /**\n\t\t     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n\t\t     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n\t\t     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n\t\t     * made available for reading from the readable side.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class TransformStream {\n\t\t        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n\t\t            if (rawTransformer === undefined) {\n\t\t                rawTransformer = null;\n\t\t            }\n\t\t            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n\t\t            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n\t\t            const transformer = convertTransformer(rawTransformer, 'First parameter');\n\t\t            if (transformer.readableType !== undefined) {\n\t\t                throw new RangeError('Invalid readableType specified');\n\t\t            }\n\t\t            if (transformer.writableType !== undefined) {\n\t\t                throw new RangeError('Invalid writableType specified');\n\t\t            }\n\t\t            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n\t\t            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n\t\t            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n\t\t            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n\t\t            let startPromise_resolve;\n\t\t            const startPromise = newPromise(resolve => {\n\t\t                startPromise_resolve = resolve;\n\t\t            });\n\t\t            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n\t\t            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n\t\t            if (transformer.start !== undefined) {\n\t\t                startPromise_resolve(transformer.start(this._transformStreamController));\n\t\t            }\n\t\t            else {\n\t\t                startPromise_resolve(undefined);\n\t\t            }\n\t\t        }\n\t\t        /**\n\t\t         * The readable side of the transform stream.\n\t\t         */\n\t\t        get readable() {\n\t\t            if (!IsTransformStream(this)) {\n\t\t                throw streamBrandCheckException('readable');\n\t\t            }\n\t\t            return this._readable;\n\t\t        }\n\t\t        /**\n\t\t         * The writable side of the transform stream.\n\t\t         */\n\t\t        get writable() {\n\t\t            if (!IsTransformStream(this)) {\n\t\t                throw streamBrandCheckException('writable');\n\t\t            }\n\t\t            return this._writable;\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(TransformStream.prototype, {\n\t\t        readable: { enumerable: true },\n\t\t        writable: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'TransformStream',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n\t\t        function startAlgorithm() {\n\t\t            return startPromise;\n\t\t        }\n\t\t        function writeAlgorithm(chunk) {\n\t\t            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n\t\t        }\n\t\t        function abortAlgorithm(reason) {\n\t\t            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n\t\t        }\n\t\t        function closeAlgorithm() {\n\t\t            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n\t\t        }\n\t\t        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n\t\t        function pullAlgorithm() {\n\t\t            return TransformStreamDefaultSourcePullAlgorithm(stream);\n\t\t        }\n\t\t        function cancelAlgorithm(reason) {\n\t\t            TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n\t\t        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n\t\t        stream._backpressure = undefined;\n\t\t        stream._backpressureChangePromise = undefined;\n\t\t        stream._backpressureChangePromise_resolve = undefined;\n\t\t        TransformStreamSetBackpressure(stream, true);\n\t\t        stream._transformStreamController = undefined;\n\t\t    }\n\t\t    function IsTransformStream(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof TransformStream;\n\t\t    }\n\t\t    // This is a no-op if both sides are already errored.\n\t\t    function TransformStreamError(stream, e) {\n\t\t        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n\t\t        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\t\t    }\n\t\t    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n\t\t        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n\t\t        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n\t\t        if (stream._backpressure) {\n\t\t            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n\t\t            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n\t\t            // _backpressure is set.\n\t\t            TransformStreamSetBackpressure(stream, false);\n\t\t        }\n\t\t    }\n\t\t    function TransformStreamSetBackpressure(stream, backpressure) {\n\t\t        // Passes also when called during construction.\n\t\t        if (stream._backpressureChangePromise !== undefined) {\n\t\t            stream._backpressureChangePromise_resolve();\n\t\t        }\n\t\t        stream._backpressureChangePromise = newPromise(resolve => {\n\t\t            stream._backpressureChangePromise_resolve = resolve;\n\t\t        });\n\t\t        stream._backpressure = backpressure;\n\t\t    }\n\t\t    // Class TransformStreamDefaultController\n\t\t    /**\n\t\t     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class TransformStreamDefaultController {\n\t\t        constructor() {\n\t\t            throw new TypeError('Illegal constructor');\n\t\t        }\n\t\t        /**\n\t\t         * Returns the desired size to fill the readable side\u2019s internal queue. It can be negative, if the queue is over-full.\n\t\t         */\n\t\t        get desiredSize() {\n\t\t            if (!IsTransformStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException('desiredSize');\n\t\t            }\n\t\t            const readableController = this._controlledTransformStream._readable._readableStreamController;\n\t\t            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n\t\t        }\n\t\t        enqueue(chunk = undefined) {\n\t\t            if (!IsTransformStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException('enqueue');\n\t\t            }\n\t\t            TransformStreamDefaultControllerEnqueue(this, chunk);\n\t\t        }\n\t\t        /**\n\t\t         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n\t\t         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n\t\t         */\n\t\t        error(reason = undefined) {\n\t\t            if (!IsTransformStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException('error');\n\t\t            }\n\t\t            TransformStreamDefaultControllerError(this, reason);\n\t\t        }\n\t\t        /**\n\t\t         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n\t\t         * transformer only needs to consume a portion of the chunks written to the writable side.\n\t\t         */\n\t\t        terminate() {\n\t\t            if (!IsTransformStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException('terminate');\n\t\t            }\n\t\t            TransformStreamDefaultControllerTerminate(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(TransformStreamDefaultController.prototype, {\n\t\t        enqueue: { enumerable: true },\n\t\t        error: { enumerable: true },\n\t\t        terminate: { enumerable: true },\n\t\t        desiredSize: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'TransformStreamDefaultController',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Transform Stream Default Controller Abstract Operations\n\t\t    function IsTransformStreamDefaultController(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof TransformStreamDefaultController;\n\t\t    }\n\t\t    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n\t\t        controller._controlledTransformStream = stream;\n\t\t        stream._transformStreamController = controller;\n\t\t        controller._transformAlgorithm = transformAlgorithm;\n\t\t        controller._flushAlgorithm = flushAlgorithm;\n\t\t    }\n\t\t    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n\t\t        const controller = Object.create(TransformStreamDefaultController.prototype);\n\t\t        let transformAlgorithm = (chunk) => {\n\t\t            try {\n\t\t                TransformStreamDefaultControllerEnqueue(controller, chunk);\n\t\t                return promiseResolvedWith(undefined);\n\t\t            }\n\t\t            catch (transformResultE) {\n\t\t                return promiseRejectedWith(transformResultE);\n\t\t            }\n\t\t        };\n\t\t        let flushAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        if (transformer.transform !== undefined) {\n\t\t            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n\t\t        }\n\t\t        if (transformer.flush !== undefined) {\n\t\t            flushAlgorithm = () => transformer.flush(controller);\n\t\t        }\n\t\t        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n\t\t    }\n\t\t    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n\t\t        controller._transformAlgorithm = undefined;\n\t\t        controller._flushAlgorithm = undefined;\n\t\t    }\n\t\t    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n\t\t        const stream = controller._controlledTransformStream;\n\t\t        const readableController = stream._readable._readableStreamController;\n\t\t        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n\t\t            throw new TypeError('Readable side is not in a state that permits enqueue');\n\t\t        }\n\t\t        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n\t\t        // accept TransformStreamDefaultControllerEnqueue() calls.\n\t\t        try {\n\t\t            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n\t\t        }\n\t\t        catch (e) {\n\t\t            // This happens when readableStrategy.size() throws.\n\t\t            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\t\t            throw stream._readable._storedError;\n\t\t        }\n\t\t        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n\t\t        if (backpressure !== stream._backpressure) {\n\t\t            TransformStreamSetBackpressure(stream, true);\n\t\t        }\n\t\t    }\n\t\t    function TransformStreamDefaultControllerError(controller, e) {\n\t\t        TransformStreamError(controller._controlledTransformStream, e);\n\t\t    }\n\t\t    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n\t\t        const transformPromise = controller._transformAlgorithm(chunk);\n\t\t        return transformPromiseWith(transformPromise, undefined, r => {\n\t\t            TransformStreamError(controller._controlledTransformStream, r);\n\t\t            throw r;\n\t\t        });\n\t\t    }\n\t\t    function TransformStreamDefaultControllerTerminate(controller) {\n\t\t        const stream = controller._controlledTransformStream;\n\t\t        const readableController = stream._readable._readableStreamController;\n\t\t        ReadableStreamDefaultControllerClose(readableController);\n\t\t        const error = new TypeError('TransformStream terminated');\n\t\t        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n\t\t    }\n\t\t    // TransformStreamDefaultSink Algorithms\n\t\t    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n\t\t        const controller = stream._transformStreamController;\n\t\t        if (stream._backpressure) {\n\t\t            const backpressureChangePromise = stream._backpressureChangePromise;\n\t\t            return transformPromiseWith(backpressureChangePromise, () => {\n\t\t                const writable = stream._writable;\n\t\t                const state = writable._state;\n\t\t                if (state === 'erroring') {\n\t\t                    throw writable._storedError;\n\t\t                }\n\t\t                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n\t\t            });\n\t\t        }\n\t\t        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n\t\t    }\n\t\t    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n\t\t        // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n\t\t        // errored.\n\t\t        TransformStreamError(stream, reason);\n\t\t        return promiseResolvedWith(undefined);\n\t\t    }\n\t\t    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n\t\t        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n\t\t        const readable = stream._readable;\n\t\t        const controller = stream._transformStreamController;\n\t\t        const flushPromise = controller._flushAlgorithm();\n\t\t        TransformStreamDefaultControllerClearAlgorithms(controller);\n\t\t        // Return a promise that is fulfilled with undefined on success.\n\t\t        return transformPromiseWith(flushPromise, () => {\n\t\t            if (readable._state === 'errored') {\n\t\t                throw readable._storedError;\n\t\t            }\n\t\t            ReadableStreamDefaultControllerClose(readable._readableStreamController);\n\t\t        }, r => {\n\t\t            TransformStreamError(stream, r);\n\t\t            throw readable._storedError;\n\t\t        });\n\t\t    }\n\t\t    // TransformStreamDefaultSource Algorithms\n\t\t    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n\t\t        // Invariant. Enforced by the promises returned by start() and pull().\n\t\t        TransformStreamSetBackpressure(stream, false);\n\t\t        // Prevent the next pull() call until there is backpressure.\n\t\t        return stream._backpressureChangePromise;\n\t\t    }\n\t\t    // Helper functions for the TransformStreamDefaultController.\n\t\t    function defaultControllerBrandCheckException(name) {\n\t\t        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n\t\t    }\n\t\t    // Helper functions for the TransformStream.\n\t\t    function streamBrandCheckException(name) {\n\t\t        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n\t\t    }\n\n\t\t    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n\t\t    exports.CountQueuingStrategy = CountQueuingStrategy;\n\t\t    exports.ReadableByteStreamController = ReadableByteStreamController;\n\t\t    exports.ReadableStream = ReadableStream;\n\t\t    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n\t\t    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n\t\t    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n\t\t    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n\t\t    exports.TransformStream = TransformStream;\n\t\t    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n\t\t    exports.WritableStream = WritableStream;\n\t\t    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n\t\t    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n\t\t    Object.defineProperty(exports, '__esModule', { value: true });\n\n\t\t})));\n\t\t\n} (ponyfill_es2018, ponyfill_es2018Exports));\n\treturn ponyfill_es2018Exports;\n}\n\n/* c8 ignore start */\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE$1 = 65536;\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process');\n    const { emitWarning } = process;\n    try {\n      process.emitWarning = () => {};\n      Object.assign(globalThis, require('node:stream/web'));\n      process.emitWarning = emitWarning;\n    } catch (error) {\n      process.emitWarning = emitWarning;\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, requirePonyfill_es2018());\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer');\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0;\n      const blob = this;\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE$1));\n          const buffer = await chunk.arrayBuffer();\n          position += buffer.byteLength;\n          ctrl.enqueue(new Uint8Array(buffer));\n\n          if (position === blob.size) {\n            ctrl.close();\n          }\n        }\n      })\n    };\n  }\n} catch (error) {}\n\n/*! fetch-blob. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536;\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()));\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset;\n        const end = part.byteOffset + part.byteLength;\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE);\n          const chunk = part.buffer.slice(position, position + size);\n          position += chunk.byteLength;\n          yield new Uint8Array(chunk);\n        }\n      } else {\n        yield part;\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part));\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE));\n        const buffer = await chunk.arrayBuffer();\n        position += buffer.byteLength;\n        yield new Uint8Array(buffer);\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {};\n\n    const encoder = new TextEncoder();\n    for (const element of blobParts) {\n      let part;\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength));\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0));\n      } else if (element instanceof Blob) {\n        part = element;\n      } else {\n        part = encoder.encode(`${element}`);\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size;\n      this.#parts.push(part);\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`;\n    const type = options.type === undefined ? '' : String(options.type);\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : '';\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder();\n    let str = '';\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true });\n    }\n    // Remaining\n    str += decoder.decode();\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size);\n    let offset = 0;\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset);\n      offset += chunk.length;\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true);\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next();\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);\n      },\n\n      async cancel () {\n        await it.return();\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this;\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);\n\n    const span = Math.max(relativeEnd - relativeStart, 0);\n    const parts = this.#parts;\n    const blobParts = [];\n    let added = 0;\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size;\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size;\n        relativeEnd -= size;\n      } else {\n        let chunk;\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd));\n          added += chunk.byteLength;\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd));\n          added += chunk.size;\n        }\n        relativeEnd -= size;\n        blobParts.push(chunk);\n        relativeStart = 0; // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() });\n    blob.#size = span;\n    blob.#parts = blobParts;\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n};\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n});\n\n/** @type {typeof globalThis.Blob} */\nconst Blob = _Blob;\nconst _Blob$1 = Blob;\n\nconst _File = class File extends _Blob$1 {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options);\n\n    if (options === null) options = {};\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified);\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified;\n    }\n\n    this.#name = String(fileName);\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof _Blob$1 &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n};\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nconst File = _File;\nconst File$1 = File;\n\n/*! formdata-polyfill. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new File$1([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}};\n\n/** @type {typeof globalThis.FormData} */\nconst FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a));}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a);}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this);}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d);});c&&b.push(a);this.#d=b;}\n*entries(){yield*this.#d;}\n*keys(){for(var[a]of this)yield a;}\n*values(){for(var[,a]of this)yield a;}};\n\n/** @param {FormData} F */\nfunction formDataToBlob (F,B=_Blob$1){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`;\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'));\nc.push(`--${b}--`);\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n\nclass FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nclass FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n\n/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nconst isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nconst isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nconst isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS$2 = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer$1.from(body.toString());\n\t\t} else if (isBlob(body)) ; else if (Buffer$1.isBuffer(body)) ; else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer$1.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer$1.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) ; else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer$1.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer$1.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS$2].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS$2].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS$2].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('../chunks/multipart-parser.mjs');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS$2].body && this[INTERNALS$2].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new _Blob$1([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS$2].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS$2].disturbed = true;\n\n\tif (data[INTERNALS$2].error) {\n\t\tthrow data[INTERNALS$2].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer$1.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer$1.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer$1.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer$1.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nconst clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS$2];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS$2].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nconst extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer$1.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS$2].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nconst getTotalBytes = request => {\n\tconst {body} = request[INTERNALS$2];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer$1.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nconst writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n\n/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nclass Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) ; else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nfunction fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n\nconst redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nconst isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS$1].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS$1].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS$1].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n\nconst getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy \u00A78.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nfunction stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nconst ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nconst DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy \u00A73. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nfunction validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy \u00A73.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nfunction isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy \u00A73.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nfunction isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing \u00A73.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nfunction determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy \u00A78.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nfunction parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response\u2019s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in \u00A7 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n\n/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// \u00A75.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// \u00A75.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// \u00A75.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// \u00A75.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// \u00A75.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn format(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nconst getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n\n/**\n * AbortError interface for cancelled requests\n */\nclass AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n\n/*! node-domexception. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer();\n    port.postMessage(ab, [ab, ab]);\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    );\n  }\n}\n\nvar nodeDomexception = globalThis.DOMException;\n\n/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nasync function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pipeline$1(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pipeline$1(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pipeline$1(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pipeline$1(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pipeline$1(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pipeline$1(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer$1.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer$1.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer$1.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer$1.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n\n/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\n/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\n\n/**\n * The signal class.\n * @see https://dom.spec.whatwg.org/#abortsignal\n */\nclass AbortSignal extends EventTarget {\n    /**\n     * AbortSignal cannot be constructed directly.\n     */\n    constructor() {\n        super();\n        throw new TypeError(\"AbortSignal cannot be constructed directly\");\n    }\n    /**\n     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.\n     */\n    get aborted() {\n        const aborted = abortedFlags.get(this);\n        if (typeof aborted !== \"boolean\") {\n            throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? \"null\" : typeof this}`);\n        }\n        return aborted;\n    }\n}\ndefineEventAttribute(AbortSignal.prototype, \"abort\");\n/**\n * Create an AbortSignal object.\n */\nfunction createAbortSignal() {\n    const signal = Object.create(AbortSignal.prototype);\n    EventTarget.call(signal);\n    abortedFlags.set(signal, false);\n    return signal;\n}\n/**\n * Abort a given signal.\n */\nfunction abortSignal(signal) {\n    if (abortedFlags.get(signal) !== false) {\n        return;\n    }\n    abortedFlags.set(signal, true);\n    signal.dispatchEvent({ type: \"abort\" });\n}\n/**\n * Aborted flag for each instances.\n */\nconst abortedFlags = new WeakMap();\n// Properties should be enumerable.\nObject.defineProperties(AbortSignal.prototype, {\n    aborted: { enumerable: true },\n});\n// `toString()` should return `\"[object AbortSignal]\"`\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortSignal\",\n    });\n}\n\n/**\n * The AbortController.\n * @see https://dom.spec.whatwg.org/#abortcontroller\n */\nlet AbortController$1 = class AbortController {\n    /**\n     * Initialize this controller.\n     */\n    constructor() {\n        signals.set(this, createAbortSignal());\n    }\n    /**\n     * Returns the `AbortSignal` object associated with this object.\n     */\n    get signal() {\n        return getSignal(this);\n    }\n    /**\n     * Abort and signal to any observers that the associated activity is to be aborted.\n     */\n    abort() {\n        abortSignal(getSignal(this));\n    }\n};\n/**\n * Associated signals.\n */\nconst signals = new WeakMap();\n/**\n * Get the associated signal of a given controller.\n */\nfunction getSignal(controller) {\n    const signal = signals.get(controller);\n    if (signal == null) {\n        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? \"null\" : typeof controller}`);\n    }\n    return signal;\n}\n// Properties should be enumerable.\nObject.defineProperties(AbortController$1.prototype, {\n    signal: { enumerable: true },\n    abort: { enumerable: true },\n});\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortController$1.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortController\",\n    });\n}\n\nexport { AbortController$1 as A, File$1 as F, Headers as H, Request as R, _Blob$1 as _, FormData as a, Response as b, AbortError as c, FetchError as d, fetch as f, isRedirect as i, nodeDomexception as n };\n", "export * from \"@remix-run/dev/server-build\";", "// import type { EntryContext } from '@remix-run/node'\n// import { RemixServer } from '@remix-run/react'\n// import { renderToString } from 'react-dom/server'\n\n// export default function handleRequest(\n//   request: Request,\n//   responseStatusCode: number,\n//   responseHeaders: Headers,\n//   remixContext: EntryContext\n// ) {\n//   const markup = renderToString(\n//     <RemixServer context={remixContext} url={request.url} />\n//   )\n\n//   responseHeaders.set('Content-Type', 'text/html')\n\n//   return new Response('<!DOCTYPE html>' + markup, {\n//     headers: responseHeaders,\n//     status: responseStatusCode,\n//   })\n// }\n\nimport { PassThrough } from 'stream'\nimport { renderToPipeableStream } from 'react-dom/server'\nimport { RemixServer } from '@remix-run/react'\nimport { Response } from '@remix-run/node'\nimport type { EntryContext, Headers } from '@remix-run/node'\nimport isbot from 'isbot'\n\nconst ABORT_DELAY = 5000\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get('user-agent'))\n    ? 'onAllReady'\n    : 'onShellReady'\n\n  return new Promise((resolve, reject) => {\n    let didError = false\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]() {\n          let body = new PassThrough()\n\n          responseHeaders.set('Content-Type', 'text/html')\n\n          resolve(\n            new Response(body, {\n              status: didError ? 500 : responseStatusCode,\n              headers: responseHeaders,\n            })\n          )\n          pipe(body)\n        },\n        onShellError(err: unknown) {\n          reject(err)\n        },\n        onError(error: unknown) {\n          didError = true\n          console.error(error)\n        },\n      }\n    )\n    setTimeout(abort, ABORT_DELAY)\n  })\n}\n", "import {\n  type LinksFunction,\n  type LoaderArgs,\n  redirect,\n  type V2_MetaFunction,\n  json,\n} from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData,\n} from '@remix-run/react'\nimport { Provider as JotaiProvider } from 'jotai'\nimport { Button } from 'shared-ui'\nimport { GlobalProgress } from '~/components/layout/GlobalProgress'\nimport { withAuth } from './services/auth.server'\nimport { client } from './services/client'\nimport styles from './tailwind.css'\n\nconst darkModeScript = `\n\n  let isDarkMode = window.matchMedia('(prefers-color-scheme: dark)')\n\n  function updateTheme(theme) {\n    theme = theme ?? window.localStorage.theme ?? 'system'\n\n    if (theme === 'dark' || (theme === 'system' && isDarkMode.matches)) {\n      document.documentElement.classList.add('dark')\n    } else if (theme === 'light' || (theme === 'system' && !isDarkMode.matches)) {\n      document.documentElement.classList.remove('dark')\n    }\n\n    return theme\n  }\n\n  function updateThemeWithoutTransitions(theme) {\n    updateTheme(theme)\n    document.documentElement.classList.add('[&_*]:!transition-none')\n    window.setTimeout(() => {\n      document.documentElement.classList.remove('[&_*]:!transition-none')\n    }, 0)\n  }\n\n  document.documentElement.setAttribute('data-theme', updateTheme())\n\n  new MutationObserver(([{ oldValue }]) => {\n    let newValue = document.documentElement.getAttribute('data-theme')\n    if (newValue !== oldValue) {\n      try {\n        window.localStorage.setItem('theme', newValue)\n      } catch {}\n      updateThemeWithoutTransitions(newValue)\n    }\n  }).observe(document.documentElement, { attributeFilter: ['data-theme'], attributeOldValue: true })\n\n  isDarkMode.addEventListener('change', () => updateThemeWithoutTransitions())\n`\n\nexport const meta: V2_MetaFunction = () => [\n  {\n    title: 'op-ent',\n  },\n]\n\nexport const links: LinksFunction = () => [\n  { rel: 'stylesheet', href: styles },\n  {\n    rel: 'stylesheet',\n    href: 'https://rsms.me/inter/inter.css',\n  },\n]\n\nfunction SharedStructure({\n  children,\n  head,\n}: {\n  children: React.ReactNode\n  head?: React.ReactNode\n}) {\n  return (\n    <html lang=\"fr-FR\" className=\"h-full\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        {head}\n        <Meta />\n        <Links />\n        <script dangerouslySetInnerHTML={{ __html: darkModeScript }}></script>\n      </head>\n      <body className=\"h-full bg-neutral-50 dark:bg-neutral-800\">\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n\nexport default function RootLayout() {\n  const loaderData = useLoaderData<typeof loader>()\n  if (loaderData?.authData) {\n    client.auth.token = loaderData.authData.token\n    client.auth.user = loaderData.authData.user\n  }\n  return (\n    <SharedStructure>\n      <JotaiProvider>\n        <GlobalProgress />\n        <Outlet />\n      </JotaiProvider>\n    </SharedStructure>\n  )\n}\n\n// Always remove trailing slash\nexport async function loader({ request }: LoaderArgs) {\n  const parsedUrl = new URL(request.url)\n  const path = parsedUrl.pathname\n  if (path.length > 1 && /\\/$/.test(path)) {\n    const newPath = path.slice(0, -1) + parsedUrl.search + parsedUrl.hash\n    return redirect(newPath)\n  }\n\n  const authData = await withAuth(request)\n  return json({ authData })\n}\n\nexport function CatchBoundary() {\n  const { status } = useCatch()\n\n  const text = status === 404 ? 'Page introuvable' : 'Une erreur est survenue'\n  const desc =\n    status === 404\n      ? \"D\u00E9sol\u00E9, nous n'avons pas trouv\u00E9 la page que vous recherchez.\"\n      : 'Veuillez nous signaler le probl\u00E8me.'\n\n  return (\n    <SharedStructure head={<title>{`Erreur ${status} - ${text}`}</title>}>\n      <main className=\"grid min-h-full place-items-center py-24 px-6 sm:py-32 lg:px-8\">\n        <div className=\"text-center\">\n          <p className=\"text-primary-500 text-base font-semibold\">{status}</p>\n          <h1 className=\"mt-4 text-3xl font-bold tracking-tight text-neutral-900 dark:text-white sm:text-5xl\">\n            {text}\n          </h1>\n          <p className=\"mt-6 text-base leading-7 text-neutral-500 dark:text-neutral-400\">\n            {desc}\n          </p>\n          <div className=\"mt-10 flex flex-col items-center justify-center space-y-6 sm:flex-row sm:space-y-0 sm:space-x-6\">\n            <Button\n              as=\"a\"\n              href=\"/\"\n              color=\"primary\"\n              className=\"w-full sm:w-auto\"\n            >\n              Retourner \u00E0 l'accueil\n            </Button>\n            <Button\n              as=\"a\"\n              href=\"https://github.com/op-ent/op-ent/issues\"\n              color=\"neutral\"\n              variant=\"subtle\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"w-full sm:w-auto\"\n            >\n              Ouvrir une issue sur GitHub\n            </Button>\n          </div>\n        </div>\n      </main>\n    </SharedStructure>\n  )\n}\n", "import * as React from 'react'\nimport { useTransition } from '@remix-run/react'\nimport { match, P } from 'ts-pattern'\nimport clsx from 'clsx'\n\nexport function GlobalProgress() {\n  const transition = useTransition()\n  const active = transition.state !== 'idle'\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const [animationComplete, setAnimationComplete] = React.useState(true)\n\n  React.useEffect(() => {\n    if (!ref.current) return\n    if (active) setAnimationComplete(false)\n\n    Promise.allSettled(\n      ref.current.getAnimations().map(({ finished }) => finished)\n    ).then(() => !active && setAnimationComplete(true))\n  }, [active])\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={!active}\n      aria-valuetext={active ? 'Loading' : undefined}\n      className=\"fixed inset-x-0 top-0 left-0 z-50 h-1 animate-pulse\"\n    >\n      <div\n        ref={ref}\n        className={clsx(\n          'bg-primary-500 h-full transition-all duration-300 ease-in-out',\n          match([transition.state, animationComplete])\n            .with(['idle', true], () => 'w-0 opacity-0 transition-none')\n            .with(['submitting', P._], () => 'w-4/12')\n            .with(['loading', P._], () => 'w-10/12')\n            .otherwise(() => 'w-full')\n        )}\n      />\n    </div>\n  )\n}\n", "import { Authenticator, AuthorizationError } from 'remix-auth'\nimport { sessionStorage } from '~/services/session.server'\nimport { FormStrategy } from 'remix-auth-form'\nimport { client } from './client'\nimport { loginSchema, registerSchema } from '~/schemas/auth'\nimport type { CustomError } from '~/types'\nimport { normalizeZodError } from '~/utils/zod'\n\nexport const FORM_STRATEGY_KEY = 'form'\nexport const FAILURE_REDIRECT_PATH = '/auth/login'\n\nexport const auth = new Authenticator<\n  NonNullable<Awaited<ReturnType<typeof client.auth.login>>['data']>\n>(sessionStorage)\n\nauth.use(\n  new FormStrategy(async ({ form }) => {\n    const result = loginSchema.safeParse(Object.fromEntries(form))\n    if (!result.success) {\n      throw new AuthorizationError(\n        JSON.stringify(normalizeZodError(result.error))\n      )\n    }\n\n    const { data, ok, error } = await client.auth.login(result.data)\n\n    if (!ok) {\n      throw new AuthorizationError(\n        JSON.stringify([{ messages: [error.data?.errors[0].message] }])\n      )\n    }\n\n    return data\n  }),\n  FORM_STRATEGY_KEY\n)\n\nexport async function withAuth(\n  request: Request,\n  opts: { success?: boolean; failure?: boolean } = {\n    success: false,\n    failure: false,\n  }\n) {\n  const { success, failure } = opts\n  return await auth.isAuthenticated(request, {\n    successRedirect: success && '/',\n    failureRedirect: failure && FAILURE_REDIRECT_PATH,\n  } as any)\n}\n\nexport async function logout(request: Request) {\n  await auth.logout(request, { redirectTo: FAILURE_REDIRECT_PATH })\n}\n\nexport async function login(request: Request) {\n  try {\n    const user = await auth.authenticate(FORM_STRATEGY_KEY, request, {\n      successRedirect: '/',\n      throwOnError: true,\n    })\n    return { ok: true, errors: undefined, data: user }\n  } catch (err) {\n    if (err instanceof Response) throw err\n    return {\n      ok: false,\n      errors: JSON.parse((err as AuthorizationError).message) as CustomError[],\n      data: undefined,\n    }\n  }\n}\n\nexport async function register(request: Request) {\n  const result = registerSchema.safeParse(\n    Object.fromEntries(await request.clone().formData())\n  )\n  if (!result.success) {\n    return {\n      ok: false,\n      data: undefined,\n      errors: normalizeZodError(result.error),\n    }\n  }\n  const { ok, error } = await client.auth.register(result.data)\n  if (!ok) {\n    return {\n      ok: false,\n      data: undefined,\n      errors: [{ messages: [error.data?.errors[0].message] }] as CustomError[],\n    }\n  }\n\n  return await login(request.clone())\n}\n", "import { createCookieSessionStorage } from '@remix-run/node'\n\n// export the whole sessionStorage object\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: '_session', // use any name you want here\n    sameSite: 'lax', // this helps with CSRF\n    path: '/', // remember to add this so the cookie will work in all routes\n    httpOnly: true, // for security reasons, make this cookie http only\n    secrets: [process.env.COOKIE_SECRET], // replace this with an actual secret\n    secure: process.env.NODE_ENV === 'production', // enable this in prod only\n  },\n})\n\n// you can also export the methods individually for your own usage\nexport const { getSession, commitSession, destroySession } = sessionStorage\n", "import http from 'node:http';\nimport https from 'node:https';\nimport nodeFetch, { Headers as Headers$1 } from 'node-fetch-native';\nimport { c as createFetch } from './shared/ofetch.502a4799.mjs';\nexport { F as FetchError, a as createFetchError } from './shared/ofetch.502a4799.mjs';\nimport 'destr';\nimport 'ufo';\n\nfunction createNodeFetch() {\n  const useKeepAlive = JSON.parse(process.env.FETCH_KEEP_ALIVE || \"false\");\n  if (!useKeepAlive) {\n    return nodeFetch;\n  }\n  const agentOptions = { keepAlive: true };\n  const httpAgent = new http.Agent(agentOptions);\n  const httpsAgent = new https.Agent(agentOptions);\n  const nodeFetchOptions = {\n    agent(parsedURL) {\n      return parsedURL.protocol === \"http:\" ? httpAgent : httpsAgent;\n    }\n  };\n  return function nodeFetchWithKeepAlive(input, init) {\n    return nodeFetch(input, { ...nodeFetchOptions, ...init });\n  };\n}\nconst fetch = globalThis.fetch || createNodeFetch();\nconst Headers = globalThis.Headers || Headers$1;\nconst ofetch = createFetch({ fetch, Headers });\nconst $fetch = ofetch;\n\nexport { $fetch, Headers, createFetch, createNodeFetch, fetch, ofetch };\n", "import { _ as _Blob, F as File$1, n as nodeDomexception, a as FormData$1, f as fetch$1, H as Headers$1, R as Request$1, b as Response$1, A as AbortController$1 } from './shared/node-fetch-native.2b047dc1.mjs';\nexport { c as AbortError, d as FetchError, i as isRedirect } from './shared/node-fetch-native.2b047dc1.mjs';\nimport { statSync, createReadStream, promises } from 'node:fs';\nimport { basename } from 'node:path';\nimport 'node:http';\nimport 'node:https';\nimport 'node:zlib';\nimport 'node:stream';\nimport 'node:buffer';\nimport 'node:util';\nimport 'node:url';\nimport 'node:net';\n\nconst { stat } = promises;\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type);\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type));\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type));\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type);\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new _Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type });\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File$1([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs });\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path;\n    this.#start = options.start;\n    this.size = options.size;\n    this.lastModified = options.lastModified;\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path);\n    if (mtimeMs > this.lastModified) {\n      throw new nodeDomexception('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    });\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nconst fetch = globalThis.fetch || fetch$1;\nconst Blob = globalThis.Blob || _Blob;\nconst File = globalThis.File || File$1;\nconst FormData = globalThis.FormData || FormData$1;\nconst Headers = globalThis.Headers || Headers$1;\nconst Request = globalThis.Request || Request$1;\nconst Response = globalThis.Response || Response$1;\nconst AbortController = globalThis.AbortController || AbortController$1;\n\nexport { AbortController, Blob, File, FormData, Headers, Request, Response, blobFrom, blobFromSync, fetch as default, fetch, fileFrom, fileFromSync };\n", "import destr from 'destr';\nimport { withBase, withQuery } from 'ufo';\n\nclass FetchError extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"FetchError\";\n  }\n}\nfunction createFetchError(request, error, response) {\n  let message = \"\";\n  if (error) {\n    message = error.message;\n  }\n  if (request && response) {\n    message = `${message} (${response.status} ${response.statusText} (${request.toString()}))`;\n  } else if (request) {\n    message = `${message} (${request.toString()})`;\n  }\n  const fetchError = new FetchError(message);\n  Object.defineProperty(fetchError, \"request\", {\n    get() {\n      return request;\n    }\n  });\n  Object.defineProperty(fetchError, \"response\", {\n    get() {\n      return response;\n    }\n  });\n  Object.defineProperty(fetchError, \"data\", {\n    get() {\n      return response && response._data;\n    }\n  });\n  Object.defineProperty(fetchError, \"status\", {\n    get() {\n      return response && response.status;\n    }\n  });\n  Object.defineProperty(fetchError, \"statusText\", {\n    get() {\n      return response && response.statusText;\n    }\n  });\n  Object.defineProperty(fetchError, \"statusCode\", {\n    get() {\n      return response && response.status;\n    }\n  });\n  Object.defineProperty(fetchError, \"statusMessage\", {\n    get() {\n      return response && response.statusText;\n    }\n  });\n  return fetchError;\n}\n\nconst payloadMethods = new Set(\n  Object.freeze([\"PATCH\", \"POST\", \"PUT\", \"DELETE\"])\n);\nfunction isPayloadMethod(method = \"GET\") {\n  return payloadMethods.has(method.toUpperCase());\n}\nfunction isJSONSerializable(value) {\n  if (value === void 0) {\n    return false;\n  }\n  const t = typeof value;\n  if (t === \"string\" || t === \"number\" || t === \"boolean\" || t === null) {\n    return true;\n  }\n  if (t !== \"object\") {\n    return false;\n  }\n  if (Array.isArray(value)) {\n    return true;\n  }\n  return value.constructor && value.constructor.name === \"Object\" || typeof value.toJSON === \"function\";\n}\nconst textTypes = /* @__PURE__ */ new Set([\n  \"image/svg\",\n  \"application/xml\",\n  \"application/xhtml\",\n  \"application/html\"\n]);\nconst JSON_RE = /^application\\/(?:[\\w!#$%&*.^`~-]*\\+)?json(;.+)?$/i;\nfunction detectResponseType(_contentType = \"\") {\n  if (!_contentType) {\n    return \"json\";\n  }\n  const contentType = _contentType.split(\";\").shift() || \"\";\n  if (JSON_RE.test(contentType)) {\n    return \"json\";\n  }\n  if (textTypes.has(contentType) || contentType.startsWith(\"text/\")) {\n    return \"text\";\n  }\n  return \"blob\";\n}\n\nconst retryStatusCodes = /* @__PURE__ */ new Set([\n  408,\n  // Request Timeout\n  409,\n  // Conflict\n  425,\n  // Too Early\n  429,\n  // Too Many Requests\n  500,\n  // Internal Server Error\n  502,\n  // Bad Gateway\n  503,\n  // Service Unavailable\n  504\n  //  Gateway Timeout\n]);\nfunction createFetch(globalOptions) {\n  const { fetch, Headers } = globalOptions;\n  function onError(context) {\n    const isAbort = context.error && context.error.name === \"AbortError\" || false;\n    if (context.options.retry !== false && !isAbort) {\n      let retries;\n      if (typeof context.options.retry === \"number\") {\n        retries = context.options.retry;\n      } else {\n        retries = isPayloadMethod(context.options.method) ? 0 : 1;\n      }\n      const responseCode = context.response && context.response.status || 500;\n      if (retries > 0 && retryStatusCodes.has(responseCode)) {\n        return $fetchRaw(context.request, {\n          ...context.options,\n          retry: retries - 1\n        });\n      }\n    }\n    const error = createFetchError(\n      context.request,\n      context.error,\n      context.response\n    );\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(error, $fetchRaw);\n    }\n    throw error;\n  }\n  const $fetchRaw = async function $fetchRaw2(_request, _options = {}) {\n    const context = {\n      request: _request,\n      options: { ...globalOptions.defaults, ..._options },\n      response: void 0,\n      error: void 0\n    };\n    if (context.options.onRequest) {\n      await context.options.onRequest(context);\n    }\n    if (typeof context.request === \"string\") {\n      if (context.options.baseURL) {\n        context.request = withBase(context.request, context.options.baseURL);\n      }\n      if (context.options.query || context.options.params) {\n        context.request = withQuery(context.request, {\n          ...context.options.params,\n          ...context.options.query\n        });\n      }\n      if (context.options.body && isPayloadMethod(context.options.method) && isJSONSerializable(context.options.body)) {\n        context.options.body = typeof context.options.body === \"string\" ? context.options.body : JSON.stringify(context.options.body);\n        context.options.headers = new Headers(context.options.headers);\n        if (!context.options.headers.has(\"content-type\")) {\n          context.options.headers.set(\"content-type\", \"application/json\");\n        }\n        if (!context.options.headers.has(\"accept\")) {\n          context.options.headers.set(\"accept\", \"application/json\");\n        }\n      }\n    }\n    context.response = await fetch(\n      context.request,\n      context.options\n    ).catch(async (error) => {\n      context.error = error;\n      if (context.options.onRequestError) {\n        await context.options.onRequestError(context);\n      }\n      return onError(context);\n    });\n    const responseType = (context.options.parseResponse ? \"json\" : context.options.responseType) || detectResponseType(context.response.headers.get(\"content-type\") || \"\");\n    if (responseType === \"json\") {\n      const data = await context.response.text();\n      const parseFunction = context.options.parseResponse || destr;\n      context.response._data = parseFunction(data);\n    } else if (responseType === \"stream\") {\n      context.response._data = context.response.body;\n    } else {\n      context.response._data = await context.response[responseType]();\n    }\n    if (context.options.onResponse) {\n      await context.options.onResponse(context);\n    }\n    if (context.response.status >= 400 && context.response.status < 600) {\n      if (context.options.onResponseError) {\n        await context.options.onResponseError(context);\n      }\n      return onError(context);\n    }\n    return context.response;\n  };\n  const $fetch = function $fetch2(request, options) {\n    return $fetchRaw(request, options).then((r) => r._data);\n  };\n  $fetch.raw = $fetchRaw;\n  $fetch.native = fetch;\n  $fetch.create = (defaultOptions = {}) => createFetch({\n    ...globalOptions,\n    defaults: {\n      ...globalOptions.defaults,\n      ...defaultOptions\n    }\n  });\n  return $fetch;\n}\n\nexport { FetchError as F, createFetchError as a, createFetch as c };\n", "export const stripTrailingSlash = (url: string): string =>\n  url.replace(/\\/$/, '')\n\nexport function pick<T extends object, K extends keyof T>(\n  obj: T,\n  keys: K[]\n): Pick<T, K> {\n  const ret: any = {}\n  keys.forEach((key) => {\n    ret[key] = obj[key]\n  })\n  return ret\n}\n\nexport function omit<T extends object, K extends keyof T>(\n  obj: T,\n  keys: K[]\n): Omit<T, K> {\n  const _ = { ...obj }\n  keys.forEach((key) => delete _[key])\n  return _\n}\n", "import { Config } from './client'\nimport { $Fetch, FetchError, ofetch } from 'ofetch'\nimport { stripTrailingSlash } from './utils'\nimport AuthResource from './resources/auth'\n\n// Based on Medusa client\n// Based on https://www.builder.io/blog/safe-data-fetching\n\nexport type RequestMethod = 'DELETE' | 'POST' | 'GET' | 'PUT'\n\nexport type ErrorData = {\n  errors: { message: string }[]\n}\n\nexport type FetchReturn<T> =\n  | {\n      data: T\n      error: undefined\n      ok: true\n    }\n  | { data: undefined; error: FetchError<ErrorData>; ok: false }\n\nexport type Headers = Record<string, string>\n\nexport default class RequestClient {\n  private config: Required<Config>\n  private DEFAULT_CONFIG: Required<Config> = {\n    baseUrl: 'https://api.op-ent.fr',\n  }\n  private DEFAULT_HEADERS: Headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n  private apiFetch: $Fetch\n\n  public auth: AuthResource | undefined\n\n  constructor(config: Config) {\n    this.config = { ...this.DEFAULT_CONFIG, ...config }\n    this.config.baseUrl = stripTrailingSlash(this.config.baseUrl) + '/v1'\n    this.apiFetch = this.createApiFetch(this.config)\n  }\n\n  private createApiFetch(config: Required<Config>) {\n    return ofetch.create({ baseURL: config.baseUrl })\n  }\n\n  public async fetch<T = unknown>(\n    method: RequestMethod,\n    path: string,\n    body: Record<string, unknown> = {},\n    headers: Headers = {}\n  ): Promise<FetchReturn<T>> {\n    let data: T | undefined = undefined\n    let error: FetchError<ErrorData> | undefined = undefined\n    try {\n      data = await this.apiFetch<T>(path, {\n        method,\n        body,\n        headers: { ...this.DEFAULT_HEADERS, ...headers },\n      })\n    } catch (err) {\n      error = err as any\n    }\n    const ok = error === undefined\n    return { data, ok, error } as any\n  }\n\n  public async authenticatedFetch<T = unknown>(\n    ...args: Parameters<typeof this.fetch>\n  ) {\n    if (!this.auth!.token) throw new Error('Not authenticated')\n    const [method, path, body, headers] = args\n    return this.fetch<T>(method, path, body, {\n      Authorization: `Bearer ${this.auth!.token!}`,\n      ...headers,\n    })\n  }\n}\n", "import RequestClient from './request-client'\n\nexport default class BaseResource {\n  public client: RequestClient\n\n  constructor(client: RequestClient) {\n    this.client = client\n  }\n}\n", "import BaseResource from '../../base-resource'\nimport { User } from '../../types'\nimport { omit } from '../../utils'\n\nexport default class UsersResource extends BaseResource {\n  public async all() {\n    const path = `/admin/users`\n    return await this.client.authenticatedFetch<{ users: User[] }>('GET', path)\n  }\n\n  public async get(payload: { id: number }) {\n    const path = `/admin/users/${payload.id}`\n    return await this.client.authenticatedFetch<{ users: User[] }>('GET', path)\n  }\n\n  public async create(payload: { email: string; password: string }) {\n    const path = `/admin/users`\n    return await this.client.authenticatedFetch<{ user: User }>(\n      'POST',\n      path,\n      payload\n    )\n  }\n\n  public async update(payload: {\n    id: number\n    email: string\n    password: string\n  }) {\n    const path = `/admin/users/${payload.id}`\n    return await this.client.authenticatedFetch<{ user: User }>(\n      'PUT',\n      path,\n      omit(payload, ['id'])\n    )\n  }\n\n  public async destroy(payload: { id: number }) {\n    const path = `/admin/users/${payload.id}`\n    return await this.client.authenticatedFetch<undefined>('DELETE', path)\n  }\n}\n", "import BaseResource from '../base-resource'\nimport RequestClient from '../request-client'\nimport UsersResource from './admin/users'\n\nexport default class AdminResource extends BaseResource {\n  public users: UsersResource\n\n  constructor(client: RequestClient) {\n    super(client)\n    this.users = new UsersResource(this.client)\n  }\n}\n", "import BaseResource from '../base-resource'\nimport { AuthToken, User } from '../types'\n\nexport default class AuthResource extends BaseResource {\n  public token?: string\n  public user?: User\n\n  public async login(payload: { email: string; password: string }) {\n    const path = `/auth/login`\n    const res = await this.client.fetch<{ token: AuthToken; user: User }>(\n      'POST',\n      path,\n      payload\n    )\n    if (res.ok) {\n      this.token = res.data.token\n      this.user = res.data.user\n    }\n    return res\n  }\n\n  public async register(payload: {\n    email: string\n    password: string\n    passwordConfirmation: string\n  }) {\n    const path = `/auth/register`\n    const res = await this.client.fetch<{ token: AuthToken; user: User }>(\n      'POST',\n      path,\n      payload\n    )\n    if (res.ok) {\n      this.token = res.data.token\n      this.user = res.data.user\n    }\n    return res\n  }\n}\n", "import BaseResource from '../base-resource'\nimport { User } from '../types'\n\nexport default class SharedResource extends BaseResource {\n  public async profile() {\n    const path = `/shared/profile/${this.client.auth!.user?.id}`\n    return await this.client.authenticatedFetch<{ user: User }>('GET', path)\n  }\n}\n", "import RequestClient from './request-client'\nimport AdminResource from './resources/admin'\nimport AuthResource from './resources/auth'\nimport SharedResource from './resources/shared'\n\nexport interface Config {\n  baseUrl?: string\n}\n\nexport default class Client {\n  private client: RequestClient\n\n  public auth: AuthResource\n  public shared: SharedResource\n  public admin: AdminResource\n\n  constructor(config: Config) {\n    this.client = new RequestClient(config)\n\n    this.auth = new AuthResource(this.client)\n    this.client.auth = this.auth\n\n    this.shared = new SharedResource(this.client)\n    this.admin = new AdminResource(this.client)\n  }\n}\n", "import Client, { Config } from './client'\n\nconst createClient = (config: Config) => new Client(config)\n\nexport { createClient }\n", "import { createClient } from 'client'\n\nexport const client = createClient({ baseUrl: 'http://localhost:3333' })\n", "import { z } from 'zod'\n\nconst passwordSchema = z\n  .string()\n  .min(1, { message: 'Champ obligatoire' })\n  .min(6, { message: '6 caract\u00E8res minimum' })\n\nexport const loginSchema = z.object({\n  email: z\n    .string()\n    .min(1, { message: 'Champ obligatoire' })\n    .email({ message: 'Email invalide' }),\n  password: passwordSchema,\n})\n\nexport const registerSchema = loginSchema\n  .merge(z.object({ passwordConfirmation: passwordSchema }))\n  .refine((data) => data.password === data.passwordConfirmation, {\n    message: 'Les mots de passe ne correspondent pas',\n    path: ['passwordConfirmation'],\n  })\n", "import type { ZodError } from 'zod'\nimport type { CustomError } from '~/types'\n\nexport function normalizeZodError(zodError: ZodError) {\n  const errors: CustomError[] = []\n  for (const { path, message } of zodError.issues) {\n    const field = path[0] as string\n    const customErrorIndex = errors.findIndex((err) => err.field === field)\n    const existingCustomError = customErrorIndex !== -1\n    if (existingCustomError) {\n      errors[customErrorIndex].messages.push(message)\n    } else {\n      errors.push({ field, messages: [message] })\n    }\n  }\n  return errors\n}\n", "import { type LoaderArgs } from '@remix-run/node'\nimport { withAuth } from '~/services/auth.server'\nimport { GraduationCap, Home, Settings } from 'lucide-react'\nimport { type Navigation } from '~/components/layout/Sidebar'\nimport Layout from '~/components/layout/Layout'\nimport { Heading } from 'shared-ui'\n\nconst navigation: Navigation = [\n  {\n    href: '/',\n    text: 'Accueil',\n    icon: Home,\n  },\n  {\n    href: '/settings/general',\n    text: 'Param\u00E8tres',\n    icon: Settings,\n  },\n  {\n    title: 'Etablissements',\n    items: [\n      {\n        href: '/s/1/overview',\n        text: 'Eleve 1',\n        icon: GraduationCap,\n      },\n      {\n        href: '/s/2/overview',\n        text: 'Eleve 2',\n        icon: GraduationCap,\n      },\n    ],\n  },\n]\n\nexport default function Index() {\n  return (\n    <Layout navigation={navigation}>\n      <Heading as=\"h1\">Bienvenue !</Heading>\n    </Layout>\n  )\n}\n\nexport async function loader({ request }: LoaderArgs) {\n  await withAuth(request, { failure: true })\n  return null\n}\n", "import { useLocation } from '@remix-run/react'\nimport {\n  type ForwardRefComponent,\n  type HTMLMotionProps,\n  motion,\n  AnimatePresence,\n} from 'framer-motion'\nimport React, { type DetailedHTMLFactory, type ReactHTML } from 'react'\n\ntype UnionStringArray<T extends Readonly<string[]>> = T[number]\nconst htmlElements = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n  'webview',\n] as const\ntype HTMLElements = UnionStringArray<typeof htmlElements>\n\ntype UnwrapFactoryElement<F> = F extends DetailedHTMLFactory<any, infer P>\n  ? P\n  : never\n\ntype HTMLMotionComponents = {\n  [K in HTMLElements]: ForwardRefComponent<\n    UnwrapFactoryElement<ReactHTML[K]>,\n    HTMLMotionProps<K>\n  >\n}\n\nexport type PageTransitionProps = {\n  as?: keyof HTMLMotionComponents\n  children: React.ReactNode\n}\n\nexport default function PageTransition({\n  as = 'div',\n  children,\n}: PageTransitionProps) {\n  const location = useLocation()\n  const Component = motion[as]\n\n  return (\n    <AnimatePresence mode=\"wait\" initial={false}>\n      <Component\n        key={location.pathname}\n        initial={{ opacity: 0, scale: 0.98 }}\n        animate={{ opacity: 1, scale: 1 }}\n        exit={{ opacity: 0, scale: 0.98 }}\n        transition={{ duration: 0.15, ease: 'easeInOut' }}\n        className=\"h-full\"\n      >\n        {children}\n      </Component>\n    </AnimatePresence>\n  )\n}\n", "import { Dialog, Transition } from '@headlessui/react'\nimport { Link, NavLink, useLocation } from '@remix-run/react'\nimport clsx from 'clsx'\nimport { useAtom } from 'jotai'\nimport { X } from 'lucide-react'\nimport { Fragment, useEffect } from 'react'\nimport { Button, IconButton } from 'shared-ui'\nimport useAuth from '~/hooks/use-auth'\nimport { openSidebarAtom } from '~/stores/layout'\n\nexport type NavItem = {\n  href: string\n  text: string\n  icon: (...args: any[]) => JSX.Element\n}\n\nexport type Navigation = (NavItem | { title: string; items: NavItem[] })[]\n\nexport type Props = {\n  navigation: Navigation\n}\n\nfunction SidebarLink({ item }: { item: NavItem }) {\n  return (\n    <NavLink\n      to={item.href}\n      className={({ isActive }) =>\n        clsx(\n          ' focus:ring-primary-500 mt-1 inline-flex w-full items-center px-4 py-2 text-sm transition-all duration-200 ease-in-out focus:outline-none focus:ring-2',\n          isActive\n            ? 'text-primary-500 dark:text-primary-300 scale-95 rounded-lg bg-neutral-100 dark:bg-neutral-700'\n            : 'hover:text-primary-500 dark:hover:text-primary-300 rounded-none text-neutral-500 hover:scale-95 hover:rounded-lg hover:bg-neutral-100 focus:scale-95 focus:rounded-lg dark:text-neutral-200 dark:hover:bg-neutral-700'\n        )\n      }\n    >\n      <item.icon className=\"h-4 w-4\" aria-hidden=\"true\" />\n      <span className=\"ml-4\">{item.text}</span>\n    </NavLink>\n  )\n}\n\nfunction SidebarHeader() {\n  return (\n    <div className=\"mx-3 flex h-14 items-center\">\n      <Link\n        to=\"/\"\n        className=\"focus:ring-primary-500 inline-block rounded-md p-1 transition-all hover:scale-95 focus:outline-none focus:ring-2\"\n      >\n        <img src=\"/logo.svg\" className=\"h-8\" alt=\"Logo d'op-ent\" />\n      </Link>\n    </div>\n  )\n}\n\nfunction SidebarContent({ navigation }: Props) {\n  const { logout } = useAuth()\n\n  return (\n    <>\n      <SidebarHeader />\n      <div className=\"flex flex-grow flex-col\">\n        <nav className=\"flex-1 space-y-1\">\n          {navigation.map((n, i) => {\n            if ('href' in n) return <SidebarLink key={i} item={n} />\n            return (\n              <div key={i} className=\"pt-4\">\n                <p className=\"px-4 text-xs font-medium text-neutral-400\">\n                  {n.title}\n                </p>\n                <ul>\n                  {n.items.map((item, j) => (\n                    <li key={j}>\n                      <SidebarLink item={item} />\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )\n          })}\n        </nav>\n      </div>\n      <div className=\"mt-auto border-t border-neutral-200 p-4 dark:border-neutral-700\">\n        <Button\n          onClick={() => logout()}\n          color=\"neutral\"\n          variant=\"subtle\"\n          className=\"w-full\"\n        >\n          D\u00E9connexion\n        </Button>\n      </div>\n    </>\n  )\n}\n\nfunction MobileSidebar(props: Props) {\n  const [open, setOpen] = useAtom(openSidebarAtom)\n\n  const location = useLocation()\n  useEffect(() => {\n    setOpen(false)\n  }, [location, setOpen])\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-40 lg:hidden\" onClose={setOpen}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"transition-opacity ease-linear duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"transition-opacity ease-linear duration-300\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-neutral-500/80 dark:bg-neutral-800/80\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 z-40 flex\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"transition ease-in-out duration-300 transform\"\n            enterFrom=\"-translate-x-full\"\n            enterTo=\"translate-x-0\"\n            leave=\"transition ease-in-out duration-300 transform\"\n            leaveFrom=\"translate-x-0\"\n            leaveTo=\"-translate-x-full\"\n          >\n            <Dialog.Panel className=\"relative flex w-full max-w-[16rem] flex-1 flex-col border-r border-neutral-200 bg-white dark:border-neutral-700 dark:bg-neutral-900\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-in-out duration-300\"\n                enterFrom=\"opacity-0\"\n                enterTo=\"opacity-100\"\n                leave=\"ease-in-out duration-300\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n              >\n                <div className=\"absolute top-0 right-0 -mr-10 pt-2\">\n                  <IconButton\n                    variant=\"subtle\"\n                    size=\"xs\"\n                    className=\"focus:ring-offset-neutral-500/80 dark:ring-offset-neutral-800/80\"\n                    onClick={() => setOpen(false)}\n                    aria-label=\"Fermer le menu lat\u00E9ral\"\n                  >\n                    <X />\n                  </IconButton>\n                </div>\n              </Transition.Child>\n              <SidebarContent {...props} />\n            </Dialog.Panel>\n          </Transition.Child>\n          <div className=\"w-12 flex-shrink-0\" aria-hidden=\"true\">\n            {/* Dummy element to force sidebar to shrink to fit close icon */}\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n\nexport default function Sidebar(props: Props) {\n  return (\n    <>\n      <MobileSidebar {...props} />\n      <aside className=\"fixed top-0 hidden h-full w-64 flex-col border-r border-neutral-200 bg-white dark:border-neutral-700 dark:bg-neutral-900 lg:flex\">\n        <SidebarContent {...props} />\n      </aside>\n    </>\n  )\n}\n", "import { useNavigate } from '@remix-run/react'\n\nexport default function useAuth() {\n  const navigate = useNavigate()\n\n  async function logout() {\n    await fetch('/auth/logout')\n    navigate(0)\n  }\n  return { logout }\n}\n", "import { atom } from 'jotai'\n\nexport const openSidebarAtom = atom(false)\n", "import { useEffect, useState } from 'react'\nimport { Listbox } from '@headlessui/react'\nimport clsx from 'clsx'\n\ntype Theme = { name: string; value: string; icon: (props: any) => JSX.Element }\n\nconst themes: Theme[] = [\n  { name: 'Clair', value: 'light', icon: LightIcon },\n  { name: 'Sombre', value: 'dark', icon: DarkIcon },\n  { name: 'Syst\u00E8me', value: 'system', icon: SystemIcon },\n]\n\nfunction LightIcon(props: any) {\n  return (\n    <svg aria-hidden=\"true\" viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7 1a1 1 0 0 1 2 0v1a1 1 0 1 1-2 0V1Zm4 7a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm2.657-5.657a1 1 0 0 0-1.414 0l-.707.707a1 1 0 0 0 1.414 1.414l.707-.707a1 1 0 0 0 0-1.414Zm-1.415 11.313-.707-.707a1 1 0 0 1 1.415-1.415l.707.708a1 1 0 0 1-1.415 1.414ZM16 7.999a1 1 0 0 0-1-1h-1a1 1 0 1 0 0 2h1a1 1 0 0 0 1-1ZM7 14a1 1 0 1 1 2 0v1a1 1 0 1 1-2 0v-1Zm-2.536-2.464a1 1 0 0 0-1.414 0l-.707.707a1 1 0 0 0 1.414 1.414l.707-.707a1 1 0 0 0 0-1.414Zm0-8.486A1 1 0 0 1 3.05 4.464l-.707-.707a1 1 0 0 1 1.414-1.414l.707.707ZM3 8a1 1 0 0 0-1-1H1a1 1 0 0 0 0 2h1a1 1 0 0 0 1-1Z\"\n      />\n    </svg>\n  )\n}\n\nfunction DarkIcon(props: any) {\n  return (\n    <svg aria-hidden=\"true\" viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.23 3.333C7.757 2.905 7.68 2 7 2a6 6 0 1 0 0 12c.68 0 .758-.905.23-1.332A5.989 5.989 0 0 1 5 8c0-1.885.87-3.568 2.23-4.668ZM12 5a1 1 0 0 1 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 2 1 1 0 0 0-1 1 1 1 0 1 1-2 0 1 1 0 0 0-1-1 1 1 0 1 1 0-2 1 1 0 0 0 1-1 1 1 0 0 1 1-1Z\"\n      />\n    </svg>\n  )\n}\n\nfunction SystemIcon(props: any) {\n  return (\n    <svg aria-hidden=\"true\" viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1 4a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v4a3 3 0 0 1-3 3h-1.5l.31 1.242c.084.333.36.573.63.808.091.08.182.158.264.24A1 1 0 0 1 11 15H5a1 1 0 0 1-.704-1.71c.082-.082.173-.16.264-.24.27-.235.546-.475.63-.808L5.5 11H4a3 3 0 0 1-3-3V4Zm3-1a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1H4Z\"\n      />\n    </svg>\n  )\n}\n\nexport default function ThemeSelector({ className }: { className?: string }) {\n  let [selectedTheme, setSelectedTheme] = useState<Theme | null>(null)\n\n  useEffect(() => {\n    if (selectedTheme) {\n      document.documentElement.setAttribute('data-theme', selectedTheme.value)\n    } else {\n      setSelectedTheme(\n        themes.find(\n          (theme) =>\n            theme.value === document.documentElement.getAttribute('data-theme')\n        ) || null\n      )\n    }\n  }, [selectedTheme])\n\n  useEffect(() => {\n    let handler = () =>\n      setSelectedTheme(\n        themes.find(\n          (theme) => theme.value === (window.localStorage.theme ?? 'system')\n        ) || null\n      )\n\n    window.addEventListener('storage', handler)\n\n    return () => window.removeEventListener('storage', handler)\n  }, [])\n\n  return (\n    <Listbox\n      as=\"div\"\n      value={selectedTheme}\n      onChange={setSelectedTheme}\n      className={className}\n    >\n      <Listbox.Label className=\"sr-only\">Theme</Listbox.Label>\n      <Listbox.Button\n        className=\"flex h-6 w-6 items-center justify-center rounded-lg shadow-md shadow-black/5 ring-1 ring-black/5 dark:bg-neutral-700 dark:ring-inset dark:ring-white/5\"\n        aria-label={selectedTheme?.name}\n      >\n        <LightIcon className=\"fill-primary-400 dark:fill-primary-300 hidden h-4 w-4 [[data-theme=light]_&]:block\" />\n        <DarkIcon className=\"fill-primary-400 dark:fill-primary-300 hidden h-4 w-4 [[data-theme=dark]_&]:block\" />\n        <LightIcon className=\"hidden h-4 w-4 fill-neutral-400 [:not(.dark)[data-theme=system]_&]:block\" />\n        <DarkIcon className=\"hidden h-4 w-4 fill-neutral-400 [.dark[data-theme=system]_&]:block\" />\n      </Listbox.Button>\n      <Listbox.Options className=\"absolute top-full left-full mt-3 w-36 -translate-x-full space-y-1 rounded-xl bg-white p-3 text-sm font-medium shadow-md shadow-black/5 ring-1 ring-black/5 dark:bg-neutral-900 dark:ring-white/5\">\n        {themes.map((theme) => (\n          <Listbox.Option\n            key={theme.value}\n            value={theme}\n            className={({ active, selected }) =>\n              clsx(\n                'flex cursor-pointer select-none items-center rounded-[0.625rem] p-1',\n                {\n                  'text-primary-500 dark:text-primary-300': selected,\n                  'text-neutral-900 dark:text-white': active && !selected,\n                  'text-neutral-700 dark:text-neutral-400':\n                    !active && !selected,\n                  'bg-neutral-100 dark:bg-neutral-800/40': active,\n                }\n              )\n            }\n          >\n            {({ selected }) => (\n              <>\n                <div className=\"rounded-md bg-white p-1 shadow ring-1 ring-neutral-900/5 dark:bg-neutral-700 dark:ring-inset dark:ring-white/5\">\n                  <theme.icon\n                    className={clsx(\n                      'h-4 w-4',\n                      selected\n                        ? 'fill-primary-400 dark:fill-primary-300'\n                        : 'fill-neutral-400'\n                    )}\n                  />\n                </div>\n                <div className=\"ml-3\">{theme.name}</div>\n              </>\n            )}\n          </Listbox.Option>\n        ))}\n      </Listbox.Options>\n    </Listbox>\n  )\n}\n", "import ThemeSelector from '~/components/molecules/ThemeSelector'\nimport { IconButton, KBD } from 'shared-ui'\nimport { useSetAtom } from 'jotai'\nimport { openSidebarAtom } from '~/stores/layout'\nimport { Menu } from 'lucide-react'\nimport useUser from '~/hooks/use-user'\n\nfunction SidebarButton() {\n  const setOpen = useSetAtom(openSidebarAtom)\n  return (\n    <IconButton\n      variant=\"subtle\"\n      className=\"mr-4 lg:hidden\"\n      onClick={() => setOpen(true)}\n      aria-label=\"Ouvrir le menu lat\u00E9ral\"\n    >\n      <Menu />\n    </IconButton>\n  )\n}\n\nfunction CommandPaletteButton() {\n  return (\n    <button\n      onClick={() => alert('open command palette')}\n      className=\"flex h-full items-center space-x-4 text-neutral-400 transition-opacity hover:opacity-75\"\n    >\n      <div>Search</div>\n      <KBD shortcuts={['CTRL', 'K']} />\n    </button>\n  )\n}\n\nfunction UserAvatar() {\n  const user = useUser()\n  return (\n    <img\n      src={encodeURI(\n        `https://source.boringavatars.com/beam/40/${user.id}?colors=38bdf8,0ea5e9,0284c7`\n      )}\n      alt={`Avatar de ${user.email}`}\n      className=\"h-10 w-10 rounded-full\"\n    />\n  )\n}\n\nexport default function TopNav() {\n  return (\n    <div className=\"fixed top-0 right-0 left-0 h-14 border-b border-neutral-200 bg-white dark:border-neutral-700 dark:bg-neutral-900 lg:left-64\">\n      <div className=\"flex h-full items-center justify-between px-4\">\n        <div className=\"flex items-center\">\n          <SidebarButton />\n          <CommandPaletteButton />\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <ThemeSelector className=\"relative\" />\n          <UserAvatar />\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { client } from '~/services/client'\n\nexport default function useUser() {\n  return client.auth.user!\n}\n", "import PageTransition from './PageTransition'\nimport Sidebar, { type Props as SidebarProps } from './Sidebar'\nimport TopNav from './TopNav'\n\nexport type Props = SidebarProps & { children: React.ReactNode }\n\nexport default function Layout({ children, ...sidebarProps }: Props) {\n  return (\n    <div className=\"overflow-hidden\">\n      <Sidebar {...sidebarProps} />\n      <TopNav />\n      <PageTransition>\n        <main className=\"mt-14 overflow-y-auto p-4 lg:ml-64\">{children}</main>\n      </PageTransition>\n    </div>\n  )\n}\n", "import type { LoaderArgs } from '@remix-run/node'\nimport { Outlet } from '@remix-run/react'\nimport { withAuth } from '~/services/auth.server'\n\nexport default function DomainsLayout() {\n  return <Outlet />\n}\n\nexport async function loader({ request }: LoaderArgs) {\n  await withAuth(request, { failure: true })\n  return null\n}\n", "import { useLoaderData, useOutlet } from '@remix-run/react'\nimport Layout from '~/components/layout/Layout'\nimport {\n  Briefcase,\n  CalendarDays,\n  ChevronLeft,\n  CreditCard,\n  Files,\n  FormInput,\n  GraduationCap,\n  Home,\n  Users,\n} from 'lucide-react'\nimport type { Navigation } from '~/components/layout/Sidebar'\nimport { type LoaderArgs } from '@remix-run/node'\nimport { defaultRedirect } from '~/utils/server'\nimport useRedirect from '~/hooks/use-redirect'\n\nconst navigation = (id: string): Navigation => [\n  {\n    href: '/',\n    text: \"Retour \u00E0 l'accueil\",\n    icon: ChevronLeft,\n  },\n  {\n    href: `/s/${id}/overview`,\n    text: \"Vue d'ensemble\",\n    icon: Home,\n  },\n  {\n    title: 'Scolarit\u00E9',\n    items: [\n      {\n        href: `/s/${id}/schooling/grades`,\n        text: 'Notes',\n        icon: GraduationCap,\n      },\n      {\n        href: `/s/${id}/schooling/homework`,\n        text: 'Devoirs',\n        icon: Briefcase,\n      },\n      {\n        href: `/s/${id}/schooling/schedule`,\n        text: 'Emploi du temps',\n        icon: CalendarDays,\n      },\n      {\n        href: `/s/${id}/schooling/quizzes`,\n        text: 'Questionnaires',\n        icon: FormInput,\n      },\n    ],\n  },\n  {\n    title: 'Administration',\n    items: [\n      {\n        href: '/administration/paiement',\n        text: 'Paiement',\n        icon: CreditCard,\n      },\n      {\n        href: '/administration/famille',\n        text: 'Famille',\n        icon: Users,\n      },\n      {\n        href: '/administration/documents',\n        text: 'Documents',\n        icon: Files,\n      },\n    ],\n  },\n]\n\nconst redirectSettings = (id: string) => ({\n  entryURL: `/s/${id}`,\n  exitURL: `/s/${id}/overview`,\n})\n\nexport default function StudentLayout() {\n  const studentId = useLoaderData<typeof loader>()\n  const outlet = useOutlet()\n  useRedirect(redirectSettings(studentId))\n  return <Layout navigation={navigation(studentId)}>{outlet}</Layout>\n}\n\nexport function loader({ request, params }: LoaderArgs) {\n  const id = params.studentId!\n  return defaultRedirect({\n    request,\n    ...redirectSettings(id),\n  })(() => id)\n}\n", "import { redirect } from '@remix-run/node'\n\nexport function defaultRedirect({\n  request,\n  entryURL,\n  exitURL,\n}: {\n  request: Request\n  entryURL: string\n  exitURL: string\n}) {\n  return function <T extends (...args: any) => any>(fn: T): ReturnType<T> {\n    const { url } = request\n    const parsedURL = new URL(url)\n    if (parsedURL.pathname === entryURL) {\n      return redirect(exitURL, 301) as any\n    }\n    return fn()\n  }\n}\n", "import { useLocation, useNavigate } from '@remix-run/react'\nimport { useEffect } from 'react'\n\nexport default function useRedirect({\n  entryURL,\n  exitURL,\n}: {\n  entryURL: string\n  exitURL: string\n}) {\n  const { pathname } = useLocation()\n  const navigate = useNavigate()\n  useEffect(() => {\n    if (pathname === entryURL) {\n      navigate(exitURL)\n    }\n  }, [pathname, navigate, entryURL, exitURL])\n}\n", "import { redirect, type LoaderArgs } from '@remix-run/node'\nimport { useOutlet } from '@remix-run/react'\nimport PageTransition from '~/components/layout/PageTransition'\nimport ThemeSelector from '~/components/molecules/ThemeSelector'\n\nexport default function AuthLayout() {\n  const outlet = useOutlet()\n  return (\n    <>\n      <ThemeSelector className=\"fixed top-4 right-4 z-30\" />\n      <PageTransition as=\"main\">\n        <div className=\"flex min-h-full flex-col items-center justify-center py-4\">\n          {outlet}\n        </div>\n      </PageTransition>\n    </>\n  )\n}\n\nexport function loader({ request: { url } }: LoaderArgs) {\n  const parsedURL = new URL(url)\n  if (parsedURL.pathname === '/auth') {\n    return redirect('/auth/login')\n  }\n  return null\n}\n", "import { type LoaderArgs } from '@remix-run/node'\nimport { useOutlet } from '@remix-run/react'\nimport { ChevronLeft, Cog } from 'lucide-react'\nimport Layout from '~/components/layout/Layout'\nimport type { Navigation } from '~/components/layout/Sidebar'\nimport useRedirect from '~/hooks/use-redirect'\nimport { withAuth } from '~/services/auth.server'\nimport { defaultRedirect } from '~/utils/server'\n\nconst navigation: Navigation = [\n  {\n    href: '/',\n    text: \"Retour \u00E0 l'accueil\",\n    icon: ChevronLeft,\n  },\n  {\n    href: '/settings/general',\n    text: 'G\u00E9n\u00E9ral',\n    icon: Cog,\n  },\n]\n\nconst redirectSettings = { entryURL: '/settings', exitURL: '/settings/general' }\n\nexport default function SettingsLayout() {\n  const outlet = useOutlet()\n  useRedirect(redirectSettings)\n  return <Layout navigation={navigation}>{outlet}</Layout>\n}\n\nexport async function loader({ request }: LoaderArgs) {\n  await withAuth(request, { failure: true })\n  return defaultRedirect({\n    request,\n    ...redirectSettings,\n  })(() => null)\n}\n", "export default {'version':'2a14bb53','entry':{'module':'/build/entry.client-BL5UN65Q.js','imports':['/build/_shared/chunk-SZ62CEAA.js','/build/_shared/chunk-2EH4WWJH.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-67F7IZRH.js','imports':['/build/_shared/chunk-GRA5YQL2.js','/build/_shared/chunk-BLCOG3RB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/_domains':{'id':'routes/_domains','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/_domains-SVBLBM5K.js','imports':['/build/_shared/chunk-EI6MZPRF.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_domains/s.$studentId':{'id':'routes/_domains/s.$studentId','parentId':'routes/_domains','path':'s/:studentId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_domains/s.$studentId-A4BCRMKI.js','imports':['/build/_shared/chunk-VJ2ZN7FX.js','/build/_shared/chunk-RX5UNJIC.js','/build/_shared/chunk-GRA5YQL2.js','/build/_shared/chunk-W5DR6ACG.js','/build/_shared/chunk-BLCOG3RB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-XRHY43RV.js','imports':['/build/_shared/chunk-EI6MZPRF.js','/build/_shared/chunk-RX5UNJIC.js','/build/_shared/chunk-W5DR6ACG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth':{'id':'routes/auth','parentId':'root','path':'auth','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth-KBOASONL.js','imports':['/build/_shared/chunk-W5DR6ACG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/settings':{'id':'routes/settings','parentId':'root','path':'settings','index':undefined,'caseSensitive':undefined,'module':'/build/routes/settings-6TUPZX6L.js','imports':['/build/_shared/chunk-EI6MZPRF.js','/build/_shared/chunk-VJ2ZN7FX.js','/build/_shared/chunk-RX5UNJIC.js','/build/_shared/chunk-W5DR6ACG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'url':'/build/manifest-2A14BB53.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\nimport * as route2 from \"./routes/_domains/index.tsx\";\nimport * as route3 from \"./routes/_domains/s.$studentId/index.tsx\";\nimport * as route4 from \"./routes/auth/index.tsx\";\nimport * as route5 from \"./routes/settings/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":true,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":false,\"v2_meta\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/_domains\": {\n      id: \"routes/_domains\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/_domains/s.$studentId\": {\n      id: \"routes/_domains/s.$studentId\",\n      parentId: \"routes/_domains\",\n      path: \"s/:studentId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/auth\": {\n      id: \"routes/auth\",\n      parentId: \"root\",\n      path: \"auth\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/settings\": {\n      id: \"routes/settings\",\n      parentId: \"root\",\n      path: \"settings\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": "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",
  "names": ["m", "match", "Body", "i", "clear", "meta", "i", "module", "global", "exports", "noop", "x", "F", "isObject", "e", "entry", "r", "isAbortSignal", "_a", "ReadableStream", "clone", "Buffer$1", "Stream", "fetch", "response", "Response", "https", "http", "s", "pipeline$1", "zlib", "types", "File", "f", "process", "Blob", "size", "m", "toFormData", "isbot", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "clsx", "import_node", "import_node_http", "import_node_https", "fetch", "Blob", "File", "FormData", "Headers", "Request", "Response", "AbortController", "FetchError", "t", "fetch", "Headers", "destr", "r", "import_destr", "import_ufo", "fetch", "http", "https", "Headers", "client", "client", "_a", "_a", "import_jsx_dev_runtime", "JotaiProvider", "loader", "import_lucide_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_clsx", "import_jotai", "import_shared_ui", "import_react", "import_jotai", "import_jsx_dev_runtime", "clsx", "navigation", "i", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_shared_ui", "import_jotai", "import_lucide_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_shared_ui", "import_jsx_dev_runtime", "loader", "loader", "import_react", "import_jsx_dev_runtime", "loader", "loader", "import_react", "import_lucide_react", "import_node", "import_react", "import_jsx_dev_runtime", "navigation", "loader", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "loader", "import_react", "import_lucide_react", "import_jsx_dev_runtime", "navigation", "redirectSettings", "loader"]
}
